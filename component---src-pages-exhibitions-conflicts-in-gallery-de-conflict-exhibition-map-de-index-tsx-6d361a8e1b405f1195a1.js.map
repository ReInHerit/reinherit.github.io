{"version":3,"sources":["webpack://reinherit-digital-hub/./src/components/static/BaseExhibitionConflicts/inGalleryIndex.tsx","webpack://reinherit-digital-hub/./src/components/shared/ExhibitionQuestions/inGalleryConflicts/Q1_mapDE.tsx","webpack://reinherit-digital-hub/./src/components/shared/ExhibitionQuestions/inGalleryConflicts/Q2_mapDE.tsx","webpack://reinherit-digital-hub/./src/components/shared/ExhibitionQuestions/inGalleryConflicts/Q3_mapDE.tsx","webpack://reinherit-digital-hub/./src/components/shared/ExhibitionQuestions/inGalleryConflicts/Q4_mapDE.tsx","webpack://reinherit-digital-hub/./src/pages/exhibitions/conflicts/inGalleryDE/ConflictExhibitionMapDE/index.tsx"],"names":["children","pageTitle","className","style","backgroundColor","fluid","padding","xl","xs","src","color","href","mapboxgl","doc","GoogleSpreadsheet","creds","useState","finalGeoJson","setfinalGeoJson","setAllRows","useEffect","useServiceAccountAuth","loadInfo","getInfo","sheet","sheetsByIndex","getRows","rows","AllRows","map","GoogleSpreadsheetRow","_rawData","sortingRows","exact_match","longitude","latitude","Country","Ans1a","Ans1b","Ans1c","Ans1d","Ans1e","Ans1aFin","Ans1bFin","Ans1cFin","Ans1dFin","Ans1eFin","hasAnswers","filter","res","MyGeoJson","row","Number","fetchData","mapContainer","useRef","container","current","center","zoom","projection","addControl","GeoJsonColl","on","addLayer","id","type","source","data","paint","property","stops","e","coordinates","features","geometry","slice","description","properties","Answer_A","Answer_B","Answer_C","Answer_D","Answer_E","setLngLat","setHTML","addTo","getCanvas","cursor","ref","finalGeoJsonTwo","setfinalGeoJsonTwo","setAllRowsTwo","sheetTwo","rowsTwo","AllRowsTwo","sortingRowsTwo","Ans2a","Ans2b","Ans2c","Ans2d","Ans2e","Ans2aFin","Ans2bFin","Ans2cFin","Ans2dFin","Ans2eFin","hasAnswersTwo","MyGeoJsonTwo","GeoJsonCollTwo","finalGeoJsonThree","setfinalGeoJsonThree","setAllRowsThree","sheetThree","rowsThree","AllRowsThree","sortingRowsThree","Ans3a","Ans3b","Ans3c","Ans3d","Ans3e","Ans3aFin","Ans3bFin","Ans3cFin","Ans3dFin","Ans3eFin","hasAnswersThree","MyGeoJsonThree","GeoJsonCollThree","finalGeoJsonFour","setfinalGeoJsonFour","setAllRowsFour","sheetFour","rowsFour","AllRowsFour","sortingRowsFour","Ans4a","Ans4b","Ans4c","Ans4d","Ans4e","Ans4aFin","Ans4bFin","Ans4cFin","Ans4dFin","Ans4eFin","Ans4fFin","hasAnswersFour","MyGeoJsonFour","GeoJsonCollFour","Answer_F","MapQOneVisible","setMapQOneVisible","MapQTwoVisible","setMapQTwoVisible","MapQThreeVisible","setMapQThreeVisible","MapQFourVisible","setMapQFourVisible","undefined","activeButton","setActiveButton","Badge","Row","Col","lg","md","sm","Button","onClick","isVisible","alt"],"mappings":"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","file":"component---src-pages-exhibitions-conflicts-in-gallery-de-conflict-exhibition-map-de-index-tsx-6d361a8e1b405f1195a1.js","sourcesContent":["import React from \"react\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"../../../styles/index.css\"\r\nimport \"../../../styles/tronic.css\"\r\nimport { Container, Row, Col } from \"react-bootstrap\"\r\nimport Base from \"../Base\"\r\nimport Head from \"../Head\"\r\n// import ReinNavbarExhibConflict from \"../navbarExhibitionConflicts\"\r\n// import ReinNavbarExhib from \"../navbarExhibition\"\r\n\r\ninterface Props {\r\n  children?: any;\r\n  pageTitle?: string\r\n}\r\n\r\nconst BaseExhibitionConflictDE = ({ children, pageTitle }: Props) => {\r\n  return (\r\n    <Base>\r\n      <Head pageTitle={pageTitle}></Head>\r\n      <Container\r\n        className=\"exh_main_content\"\r\n        style={{backgroundColor:\"white\"}}\r\n        fluid \r\n      >{children}</Container>\r\n      <Container\r\n        style={{backgroundColor:\"black\"}}\r\n        fluid>\r\n            <Container style={{ padding:\"10px 0\"}}>\r\n            <Row>\r\n            <Col xl={6} xs={12}>\r\n            <div className=\"exh_footer_grid\">\r\n              <div className=\"footer_img\"><img className=\"exh_img\" src=\"/images/exhibition_assets/cc-sticker-2007.png\"></img></div>\r\n              <div className=\"footer_partner_text\">\r\n                <p style={{color:\"white\"}}>All rights reserved excluding works shared under Creative Commons licensing. <br></br>Licenses are indicated for respective elements.</p>\r\n              </div>\r\n            </div>\r\n            </Col>\r\n            <Col xl={6} xs={12}>\r\n            <div className=\"exh_footer_grid\">\r\n              <div className=\"footer_img\"><img className=\"exh_img\" src=\"/images/exhibition_assets/logo-ce-horizontal-en-neg-nb.png\"></img></div>\r\n              <div className=\"footer_partner_text\"><p style={{color:\"white\"}}>This project has received funding from the European Union’s Horizon 2020 research and innovation programme under grant agreement No 101004545</p>\r\n              </div>\r\n            </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"exh_footer_links\">\r\n            <a style={{color:\"white\"}} href=\"/exhibitions/conflicts/imprintConflicts\">Impressum</a>\r\n            <a style={{color:\"white\"}} href=\"/about/dataprot\">Datenschutz</a>\r\n            </Col>\r\n          </Row>\r\n          </Container>\r\n        </Container>\r\n    </Base>\r\n  )\r\n}\r\n\r\nexport default BaseExhibitionConflictDE\r\n\r\n","import React, {Component} from \"react\";\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; \r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport creds from '../questionsConflict/cred/myjson.json'\r\nimport {GoogleSpreadsheet} from \"google-spreadsheet\"\r\n\r\nconst MapQOneDE = () => {\r\n  mapboxgl.accessToken = \"pk.eyJ1Ijoia2lhLXoiLCJhIjoiY2xkZzRnZjRnMHRvazN2bzZ0cnh4OWtzeSJ9.COmQgzmRsKnMZKw77WDF6w\"\r\n  const doc = new GoogleSpreadsheet(creds.sheet_id)\r\n  const [finalGeoJson, setfinalGeoJson] = useState([]);\r\n\r\n        const [AllRows, setAllRows] = useState([]);\r\n        useEffect( () => { \r\n          async function fetchData() {\r\n                await doc.useServiceAccountAuth(creds);\r\n                await doc.loadInfo();      \r\n                await doc.getInfo();\r\n                const sheet = doc.sheetsByIndex[2];\r\n                const rows = await sheet.getRows();\r\n                const AllRows = rows.map((GoogleSpreadsheetRow) => GoogleSpreadsheetRow._rawData);\r\n            //  console.log(AllRows) \r\n                setAllRows(AllRows)\r\n\r\n                const sortingRows = AllRows.map(({\r\n                  [0]: exact_match,\t[1]: longitude, [2]: latitude, [3]: Country,\r\n                  [4]: Ans1a,\t[5]: Ans1b,\t[6]: \tAns1c,\t[7]: \tAns1d,\t[8]: \tAns1e,\t\r\n                  [9]: Ans1aFin,\t[10]: Ans1bFin,\t[11]: Ans1cFin,\t[12]: Ans1dFin,\t[13]: Ans1eFin\r\n                }) => \r\n                ({\r\n                  exact_match,\tlongitude, latitude, Country,\r\n                  Ans1a,\tAns1b,\tAns1c,\tAns1d,\tAns1e,\t\r\n                  Ans1aFin,\tAns1bFin,\tAns1cFin,\tAns1dFin,\tAns1eFin\r\n                  }))\r\n            //  console.log(sortingRows)\r\n\r\n            const hasAnswers = sortingRows.filter((res) => res.Ans1aFin !== \"no answers\");\r\n            // console.log(hasAnswers)\r\n           \r\n            const MyGeoJson = hasAnswers.map(row => {\r\n              return {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    \"Country\": row.Country,\r\n                    \"Answer_A\": row.Ans1aFin,\r\n                    \"Answer_B\": row.Ans1bFin,\r\n                    \"Answer_C\": row.Ans1cFin,\r\n                    \"Answer_D\": row.Ans1dFin,\r\n                    \"Answer_E\": row.Ans1eFin\r\n                },\r\n                \"geometry\": {\r\n                  \"coordinates\": [Number(row.longitude), Number(row.latitude)],\r\n                  \"type\": \"Point\",\r\n                },\r\n              }\r\n            })      \r\n            \r\n            setfinalGeoJson(MyGeoJson)\r\n\r\n        }\r\n        fetchData();\r\n    //    console.log(finalGeoJson)\r\n      }, []);\r\n\r\n      \r\n        const mapContainer = useRef(null);\r\n        useEffect(() => {\r\n            const map = new mapboxgl.Map({\r\n              container: mapContainer.current,\r\n              style: 'mapbox://styles/mapbox/light-v11',\r\n              center: [15.754, 48.228],\r\n              zoom: 5.15,\r\n              projection: 'naturalEarth',\r\n            });\r\n    \r\n            map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\r\n            \r\n            const GeoJsonColl = {\r\n                \"type\": \"FeatureCollection\",\r\n                \"features\": \r\n                    finalGeoJson\r\n              };\r\n                // This GeoJson is valid\r\n                // console.log(JSON.stringify(GeoJsonColl))            \r\n     \r\n        map.on('load', () => {\r\n\r\n        map.addLayer({\r\n                id: 'resultsAnswerOneConflict',\r\n                type: 'circle',\r\n                source: {\r\n                  type: 'geojson',\r\n                  data: GeoJsonColl\r\n                },\r\n                paint: {\r\n               'circle-color': '#526d9d',\r\n               'circle-stroke-width': 1,\r\n               'circle-stroke-color': '#526d9d',\r\n               'circle-opacity': 0.5,\r\n               'circle-radius': {\r\n                property: 'Answer_A',\r\n                // think how to make them more proportional to our responses\r\n                stops: [\r\n                  [0, 0],\r\n                  [1, 5],\r\n                  [5, 20],\r\n                ]\r\n              }\r\n                }\r\n            })\r\n    \r\n// When a click event occurs on a feature in the csvData layer, open a popup at the\r\n// location of the feature, with description HTML from its properties.            \r\n                map.on('click', 'resultsAnswerOneConflict', function(e) {\r\n                var coordinates = e.features[0].geometry.coordinates.slice();\r\n\r\n                // set popup text\r\n                var description =\r\n                `<h4>` +\r\n                e.features[0].properties.Country +\r\n                `</h4> \r\n                <ul>\r\n                  <li>A: Gesamt ` + e.features[0].properties.Answer_A + ` Personen</li>\r\n                  <li>B: Gesamt ` + e.features[0].properties.Answer_B + ` Personen</li>\r\n                  <li>C: Gesamt ` + e.features[0].properties.Answer_C + ` Personen</li>\r\n                  <li>D: Gesamt ` + e.features[0].properties.Answer_D + ` Personen</li>\r\n                  <li>E: Gesamt ` + e.features[0].properties.Answer_E + ` Personen</li>\r\n                </ul>` \r\n\r\n               //add Popup to map\r\n                  new mapboxgl.Popup()\r\n                    .setLngLat(coordinates)\r\n                    .setHTML(description)\r\n                    .addTo(map);\r\n                });\r\n                \r\n                // Change the cursor to a pointer when the mouse is over the places layer.\r\n                map.on('mouseenter', 'resultsAnswerOneConflict', function() {\r\n                  map.getCanvas().style.cursor = 'pointer';\r\n                });\r\n                \r\n                // Change it back to a pointer when it leaves.\r\n                map.on('mouseleave', 'places', function() {\r\n                  map.getCanvas().style.cursor = '';\r\n                });\r\n                \r\n        })\r\n  })\r\n\r\n    return (\r\n    <React.Fragment>\r\n       <div>\r\n            <div ref={mapContainer} className=\"map-container\" />\r\n        </div>\r\n     <div className=\"exh_map_result_content\">\r\n        <h2>Frage 1:</h2>\r\n            <h3>„Gewalt ist keine Lösung“ – das sagen viele Menschen, wenn es um Konflikte geht. Sie wünschen sich eine Welt, in der Konflikte ohne Gewalt gelöst werden. Was meinen Sie: Kann eine solche Welt Wirklichkeit werden oder bleibt sie ein Wunschtraum?</h3>\r\n                <div className=\"exh_map_quest_result\"><span>A</span><p>Antwort 1 - Nein. Eine solche Welt ist nicht möglich. Ob man will oder nicht: Gewalt ist immer eine Lösung. Sie wird auch immer eine Lösung bleiben. So einfach ist das.</p></div>\r\n                <div className=\"exh_map_quest_result\"><span>B</span><p>Antwort 2 - In einer Welt ohne Waffen ist der Revolver-Besitzer König. Das sagt jedenfalls die moderne Evolutionsbiologie. Wer die Möglichkeit hat, Gewalt einzusetzen wird das auch irgendwann tun.</p></div>\r\n                <div className=\"exh_map_quest_result\"><span>C</span><p>Antwort 3 - Wer hungert oder verhungert, der greift schneller zu Gewalt. Denn wer nichts zu verlieren hat, für den ist Gewalt immer eine Option. Gerade weil er nichts mehr zu verlieren hat. Umgekehrt heißt das auch: Wer sich eine Welt ohne Konflikte wünscht, muss möglicherweise auch die Umverteilung von Wohlstand oder Ressourcen in Kauf nehmen.</p></div>\r\n                <div className=\"exh_map_quest_result\"><span>D</span><p>Antwort 4 - Gewalt ist für mich niemals die erste Option. Wenn aber andere zu Gewalt greifen, würde ich mich verteidigen – notfalls auch mit Gewalt.</p></div>\r\n                <div className=\"exh_map_quest_result\"><span>E</span><p>Antwort 5 - Ich sehe nicht, warum eine Welt ohne Gewalt nicht möglich sein sollte. Es gibt immer eine Alternative zu Gewalt. Wer eingesehen hat, dass Gewalt immer nur Gegengewalt erzeugt, für den ist Gewaltverzicht der einzige Weg zur Besserung.</p></div>\r\n        </div>\r\n    </React.Fragment>\r\n    );          \r\n}\r\n\r\nexport default MapQOneDE","import React, {Component} from \"react\";\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; \r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport creds from '../questionsConflict/cred/myjson.json'\r\nimport {GoogleSpreadsheet} from \"google-spreadsheet\"\r\n\r\nconst MapQTwoDE = () => {\r\n  mapboxgl.accessToken = \"pk.eyJ1Ijoia2lhLXoiLCJhIjoiY2xkZzRnZjRnMHRvazN2bzZ0cnh4OWtzeSJ9.COmQgzmRsKnMZKw77WDF6w\"\r\n  const doc = new GoogleSpreadsheet(creds.sheet_id)\r\n  const [finalGeoJsonTwo, setfinalGeoJsonTwo] = useState([]);\r\n\r\n        const [AllRowsTwo, setAllRowsTwo] = useState([]);\r\n        useEffect( () => { \r\n          async function fetchData() {\r\n                await doc.useServiceAccountAuth(creds);\r\n                await doc.loadInfo();      \r\n                await doc.getInfo();\r\n                const sheetTwo = doc.sheetsByIndex[5];\r\n                const rowsTwo = await sheetTwo.getRows();\r\n                const AllRowsTwo = rowsTwo.map((GoogleSpreadsheetRow) => GoogleSpreadsheetRow._rawData);\r\n            //  console.log(AllRows) \r\n                setAllRowsTwo(AllRowsTwo)\r\n\r\n                const sortingRowsTwo = AllRowsTwo.map(({\r\n                  [0]: exact_match,\t[1]: longitude, [2]: latitude, [3]: Country,\r\n                  [4]: Ans2a,\t[5]: Ans2b,\t[6]: \tAns2c,\t[7]: \tAns2d,\t[8]: \tAns2e,\t\r\n                  [9]: Ans2aFin,\t[10]: Ans2bFin,\t[11]: Ans2cFin,\t[12]: Ans2dFin,\t[13]: Ans2eFin\r\n                }) => \r\n                ({\r\n                  exact_match,\tlongitude, latitude, Country,\r\n                  Ans2a,\tAns2b,\tAns2c,\tAns2d,\tAns2e,\t\r\n                  Ans2aFin,\tAns2bFin,\tAns2cFin,\tAns2dFin,\tAns2eFin\r\n                  }))\r\n            //  console.log(sortingRows)\r\n\r\n            const hasAnswersTwo = sortingRowsTwo.filter((res) => res.Ans2aFin !== \"no answers\");\r\n            // console.log(hasAnswers)\r\n           \r\n            const MyGeoJsonTwo = hasAnswersTwo.map(row => {\r\n              return {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    \"Country\": row.Country,\r\n                    \"Answer_A\": row.Ans2aFin,\r\n                    \"Answer_B\": row.Ans2bFin,\r\n                    \"Answer_C\": row.Ans2cFin,\r\n                    \"Answer_D\": row.Ans2dFin,\r\n                    \"Answer_E\": row.Ans2eFin\r\n                },\r\n                \"geometry\": {\r\n                  \"coordinates\": [Number(row.longitude), Number(row.latitude)],\r\n                  \"type\": \"Point\",\r\n                },\r\n              }\r\n            })      \r\n            \r\n            setfinalGeoJsonTwo(MyGeoJsonTwo)\r\n\r\n        }\r\n        fetchData();\r\n    //    console.log(finalGeoJson)\r\n      }, []);\r\n\r\n      \r\n        const mapContainer = useRef(null);\r\n        useEffect(() => {\r\n            const map = new mapboxgl.Map({\r\n              container: mapContainer.current,\r\n              style: 'mapbox://styles/mapbox/light-v11',\r\n              center: [15.754, 48.228],\r\n              zoom: 5.15,\r\n              projection: 'naturalEarth',\r\n            });\r\n    \r\n            map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\r\n            \r\n            const GeoJsonCollTwo = {\r\n                \"type\": \"FeatureCollection\",\r\n                \"features\": \r\n                    finalGeoJsonTwo\r\n              };\r\n                // This GeoJson is valid\r\n                // console.log(JSON.stringify(GeoJsonColl))            \r\n     \r\n        map.on('load', () => {\r\n\r\n        map.addLayer({\r\n                id: 'resultsAnswerTwoConflict',\r\n                type: 'circle',\r\n                source: {\r\n                  type: 'geojson',\r\n                  data: GeoJsonCollTwo\r\n                },\r\n                paint: {\r\n               'circle-color': '#526d9d',\r\n               'circle-stroke-width': 1,\r\n               'circle-stroke-color': '#526d9d',\r\n               'circle-opacity': 0.5,\r\n               'circle-radius': {\r\n                property: 'Answer_A',\r\n                // think how to make them more proportional to our responses\r\n                stops: [\r\n                  [0, 0],\r\n                  [1, 5],\r\n                  [5, 20],\r\n                ]\r\n              }\r\n                }\r\n            })\r\n    \r\n// When a click event occurs on a feature in the csvData layer, open a popup at the\r\n// location of the feature, with description HTML from its properties.            \r\n                map.on('click', 'resultsAnswerTwoConflict', function(e) {\r\n                var coordinates = e.features[0].geometry.coordinates.slice();\r\n\r\n                // set popup text\r\n                var description =\r\n                `<h4>` +\r\n                e.features[0].properties.Country +\r\n                `</h4> \r\n                <ul>\r\n                  <li>A: Gesamt ` + e.features[0].properties.Answer_A + ` Personen</li>\r\n                  <li>B: Gesamt ` + e.features[0].properties.Answer_B + ` Personen</li>\r\n                  <li>C: Gesamt ` + e.features[0].properties.Answer_C + ` Personen</li>\r\n                  <li>D: Gesamt ` + e.features[0].properties.Answer_D + ` Personen</li>\r\n                  <li>E: Gesamt ` + e.features[0].properties.Answer_E + ` Personen</li>\r\n                </ul>` \r\n\r\n               //add Popup to map\r\n                  new mapboxgl.Popup()\r\n                    .setLngLat(coordinates)\r\n                    .setHTML(description)\r\n                    .addTo(map);\r\n                });\r\n                \r\n                // Change the cursor to a pointer when the mouse is over the places layer.\r\n                map.on('mouseenter', 'resultsAnswerTwoConflict', function() {\r\n                  map.getCanvas().style.cursor = 'pointer';\r\n                });\r\n                \r\n                // Change it back to a pointer when it leaves.\r\n                map.on('mouseleave', 'places', function() {\r\n                  map.getCanvas().style.cursor = '';\r\n                });\r\n                \r\n        })\r\n  })\r\n\r\n    return (\r\n    <React.Fragment>\r\n        <div>\r\n            <div ref={mapContainer} className=\"map-container\" />\r\n        </div>\r\n        <div className=\"exh_map_result_content\">\r\n        <h2>Frage 2:</h2>\r\n            <h3>Ist es böse, wenn man sich wehrt?</h3> \r\n            <div className=\"exh_map_quest_result\"><span>A</span><p>Antwort 1 - Nein. Widerstand kann etwas sehr Gutes sein und wird manchmal sogar zur Pflicht. Oftmals muss man sogar das verteidigen, was einem wichtig ist. Dann habe ich nicht nur das Recht, sondern auch die Pflicht, mich zu wehren.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>B</span><p>Antwort 2 - Ich weiß nicht, ob es böse ist, wenn man sich wehrt. Aber ich für meinen Teil verabscheue jede Form der Gewalt. Deshalb würde ich mich im Zweifelsfall nicht wehren.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>C</span><p>Antwort 3 - Wer meint, es sei böse, sich beispielsweise für seine Freiheit einzusetzen, der setzt Unterdrücker und Opfer moralisch gleich. Das aber ist falsch. Ein Täter steht moralisch niemals auf derselben Stufe wie ein Opfer. Also ist es nicht böse, sich zu wehren.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>D</span><p>Antwort 4 - Wer sich wehrt, der erzeugt mit seiner Gewalt Gegengewalt. Das führt zu einer Gewaltspirale. Deshalb ist es vielleicht nicht unbedingt böse sich zu wehren, aber unklug.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>E</span><p>Antwort 5 - Stellen Sie sich vor, ihr Elternhaus wird plötzlich unrechtmäßig besetzt. Was sollte Sie daran hindern, sich dagegen zu wehren? Nichts. Oder?</p></div>\r\n        </div>\r\n    </React.Fragment>\r\n    );          \r\n}\r\n\r\nexport default MapQTwoDE","import React, {Component} from \"react\";\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; \r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport creds from '../questionsConflict/cred/myjson.json'\r\nimport {GoogleSpreadsheet} from \"google-spreadsheet\"\r\n\r\nconst MapQThreeDE = () => {\r\n  mapboxgl.accessToken = \"pk.eyJ1Ijoia2lhLXoiLCJhIjoiY2xkZzRnZjRnMHRvazN2bzZ0cnh4OWtzeSJ9.COmQgzmRsKnMZKw77WDF6w\"\r\n  const doc = new GoogleSpreadsheet(creds.sheet_id)\r\n  const [finalGeoJsonThree, setfinalGeoJsonThree] = useState([]);\r\n\r\n        const [AllRowsThree, setAllRowsThree] = useState([]);\r\n        useEffect( () => { \r\n          async function fetchData() {\r\n                await doc.useServiceAccountAuth(creds);\r\n                await doc.loadInfo();      \r\n                await doc.getInfo();\r\n                const sheetThree = doc.sheetsByIndex[8];\r\n                const rowsThree = await sheetThree.getRows();\r\n                const AllRowsThree = rowsThree.map((GoogleSpreadsheetRow) => GoogleSpreadsheetRow._rawData);\r\n            //  console.log(AllRows) \r\n                setAllRowsThree(AllRowsThree)\r\n\r\n                const sortingRowsThree = AllRowsThree.map(({\r\n                  [0]: exact_match,\t[1]: longitude, [2]: latitude, [3]: Country,\r\n                  [4]: Ans3a,\t[5]: Ans3b,\t[6]: \tAns3c,\t[7]: \tAns3d,\t[8]: \tAns3e,\t\r\n                  [9]: Ans3aFin,\t[10]: Ans3bFin,\t[11]: Ans3cFin,\t[12]: Ans3dFin,\t[13]: Ans3eFin\r\n                }) => \r\n                ({\r\n                  exact_match,\tlongitude, latitude, Country,\r\n                  Ans3a,\tAns3b,\tAns3c,\tAns3d,\tAns3e,\t\r\n                  Ans3aFin,\tAns3bFin,\tAns3cFin,\tAns3dFin,\tAns3eFin\r\n                  }))\r\n            //  console.log(sortingRows)\r\n\r\n            const hasAnswersThree = sortingRowsThree.filter((res) => res.Ans3aFin !== \"no answers\");\r\n            // console.log(hasAnswers)\r\n           \r\n            const MyGeoJsonThree = hasAnswersThree.map(row => {\r\n              return {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    \"Country\": row.Country,\r\n                    \"Answer_A\": row.Ans3aFin,\r\n                    \"Answer_B\": row.Ans3bFin,\r\n                    \"Answer_C\": row.Ans3cFin,\r\n                    \"Answer_D\": row.Ans3dFin,\r\n                    \"Answer_E\": row.Ans3eFin\r\n                },\r\n                \"geometry\": {\r\n                  \"coordinates\": [Number(row.longitude), Number(row.latitude)],\r\n                  \"type\": \"Point\",\r\n                },\r\n              }\r\n            })      \r\n            \r\n            setfinalGeoJsonThree(MyGeoJsonThree)\r\n\r\n        }\r\n        fetchData();\r\n    //    console.log(finalGeoJson)\r\n      }, []);\r\n\r\n      \r\n        const mapContainer = useRef(null);\r\n        useEffect(() => {\r\n            const map = new mapboxgl.Map({\r\n              container: mapContainer.current,\r\n              style: 'mapbox://styles/mapbox/light-v11',\r\n              center: [15.754, 48.228],\r\n              zoom: 5.15,\r\n              projection: 'naturalEarth',\r\n            });\r\n    \r\n            map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\r\n            \r\n            const GeoJsonCollThree = {\r\n                \"type\": \"FeatureCollection\",\r\n                \"features\": \r\n                    finalGeoJsonThree\r\n              };\r\n                // This GeoJson is valid\r\n                // console.log(JSON.stringify(GeoJsonColl))            \r\n     \r\n        map.on('load', () => {\r\n\r\n        map.addLayer({\r\n                id: 'resultsAnswerThreeConflict',\r\n                type: 'circle',\r\n                source: {\r\n                  type: 'geojson',\r\n                  data: GeoJsonCollThree\r\n                },\r\n                paint: {\r\n               'circle-color': '#526d9d',\r\n               'circle-stroke-width': 1,\r\n               'circle-stroke-color': '#526d9d',\r\n               'circle-opacity': 0.5,\r\n               'circle-radius': {\r\n                property: 'Answer_A',\r\n                // think how to make them more proportional to our responses\r\n                stops: [\r\n                  [0, 0],\r\n                  [1, 5],\r\n                  [5, 20],\r\n                ]\r\n              }\r\n                }\r\n            })\r\n    \r\n// When a click event occurs on a feature in the csvData layer, open a popup at the\r\n// location of the feature, with description HTML from its properties.            \r\n                map.on('click', 'resultsAnswerThreeConflict', function(e) {\r\n                var coordinates = e.features[0].geometry.coordinates.slice();\r\n\r\n                // set popup text\r\n                var description =\r\n                `<h4>` +\r\n                e.features[0].properties.Country +\r\n                `</h4> \r\n                <ul>\r\n                  <li>A: Gesamt ` + e.features[0].properties.Answer_A + ` Personen</li>\r\n                  <li>B: Gesamt ` + e.features[0].properties.Answer_B + ` Personen</li>\r\n                  <li>C: Gesamt ` + e.features[0].properties.Answer_C + ` Personen</li>\r\n                  <li>D: Gesamt ` + e.features[0].properties.Answer_D + ` Personen</li>\r\n                  <li>E: Gesamt ` + e.features[0].properties.Answer_E + ` Personen</li>\r\n                </ul>` \r\n\r\n               //add Popup to map\r\n                  new mapboxgl.Popup()\r\n                    .setLngLat(coordinates)\r\n                    .setHTML(description)\r\n                    .addTo(map);\r\n                });\r\n                \r\n                // Change the cursor to a pointer when the mouse is over the places layer.\r\n                map.on('mouseenter', 'resultsAnswerThreeConflict', function() {\r\n                  map.getCanvas().style.cursor = 'pointer';\r\n                });\r\n                \r\n                // Change it back to a pointer when it leaves.\r\n                map.on('mouseleave', 'places', function() {\r\n                  map.getCanvas().style.cursor = '';\r\n                });\r\n                \r\n        })\r\n  })\r\n\r\n    return (\r\n    <React.Fragment>\r\n        <div>\r\n            <div ref={mapContainer} className=\"map-container\" />\r\n        </div>\r\n        <div className=\"exh_map_result_content\">\r\n        <h2>Frage 3:</h2>\r\n            <h3>\r\n            Manchmal werden Konflikte nicht von Einzelpersonen verursacht, sondern weil sie eingebaut sind in das gesellschaftliche System, in dem wir leben. Man spricht dann von „struktureller Gewalt“. Wie sollen wir mit dieser strukturellen Gewalt umgehen?\r\n            </h3> \r\n            <div className=\"exh_map_quest_result\"><span>A</span><p>Antwort 1 - Zugegeben, kein Staat kann in jeder Hinsicht perfekt oder konfliktfrei sein. In einer Demokratie aber gibt es immer Wege, Konflikte ohne Gewalt zu lösen. Jede*r kann sich politisch engagieren oder den Rechtsweg einschlagen.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>B</span><p>Antwort 2 - Jedes gesellschaftliche System braucht viel zu lange, um auf gesellschaftliche Konflikte zu reagieren. Wer darauf wartet, dass das eigene Land etwas Wirksames gegen soziale Ungleichheit unternimmt, der wartet am Ende zu lange.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>C</span><p>Antwort 3 - Kein System, auch das beste, kann jemals vollkommen gerecht sein. Das liegt in der Natur der Systeme. Damit müssen wir uns abfinden.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>D</span><p>Antwort 4 - Strukturelle Gewalt ist immer abstrakt. Zur tatsächlichen Gewalt wird sie erst durch die Menschen, die Teil des Systems sind und davon profitieren. Der wirksamste Hebel gegen strukturelle Gewalt ist deshalb der aktive Widerstand gegen jene, die sie durchsetzen.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>E</span><p>Antwort 5 - Frauenfeindlichkeit oder Rassismus sind nicht nur eingebaut in gesellschaftliche Systeme, sondern findet in den Köpfen der Bevölkerung statt. Es kommt deshalb weniger darauf an, das System zu verändern, sondern die Haltung der Menschen.</p></div>\r\n        </div>\r\n    </React.Fragment>\r\n    );          \r\n}\r\n\r\nexport default MapQThreeDE","import React, {Component} from \"react\";\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; \r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport creds from '../questionsConflict/cred/myjson.json'\r\nimport {GoogleSpreadsheet} from \"google-spreadsheet\"\r\n\r\nconst MapQFourDE = () => {\r\n  mapboxgl.accessToken = \"pk.eyJ1Ijoia2lhLXoiLCJhIjoiY2xkZzRnZjRnMHRvazN2bzZ0cnh4OWtzeSJ9.COmQgzmRsKnMZKw77WDF6w\"\r\n  const doc = new GoogleSpreadsheet(creds.sheet_id)\r\n  const [finalGeoJsonFour, setfinalGeoJsonFour] = useState([]);\r\n\r\n        const [AllRowsFour, setAllRowsFour] = useState([]);\r\n        useEffect( () => { \r\n          async function fetchData() {\r\n                await doc.useServiceAccountAuth(creds);\r\n                await doc.loadInfo();      \r\n                await doc.getInfo();\r\n                const sheetFour = doc.sheetsByIndex[11];\r\n                const rowsFour = await sheetFour.getRows();\r\n                const AllRowsFour = rowsFour.map((GoogleSpreadsheetRow) => GoogleSpreadsheetRow._rawData);\r\n            //  console.log(AllRows) \r\n                setAllRowsFour(AllRowsFour)\r\n\r\n                const sortingRowsFour = AllRowsFour.map(({\r\n                  [0]: exact_match,\t[1]: longitude, [2]: latitude, [3]: Country,\r\n                  [4]: Ans4a,\t[5]: Ans4b,\t[6]: \tAns4c,\t[7]: \tAns4d,\t[8]: \tAns4e,\t\r\n                  [9]: Ans4aFin,\t[10]: Ans4bFin,\t[11]: Ans4cFin,\t[12]: Ans4dFin,\t[13]: Ans4eFin, [14]: Ans4fFin\r\n                }) => \r\n                ({\r\n                  exact_match,\tlongitude, latitude, Country,\r\n                  Ans4a,\tAns4b,\tAns4c,\tAns4d,\tAns4e,\t\r\n                  Ans4aFin,\tAns4bFin,\tAns4cFin,\tAns4dFin,\tAns4eFin, Ans4fFin\r\n                  }))\r\n            //  console.log(sortingRows)\r\n\r\n            const hasAnswersFour = sortingRowsFour.filter((res) => res.Ans4aFin !== \"no answers\");\r\n            // console.log(hasAnswers)\r\n           \r\n            const MyGeoJsonFour = hasAnswersFour.map(row => {\r\n              return {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    \"Country\": row.Country,\r\n                    \"Answer_A\": row.Ans4aFin,\r\n                    \"Answer_B\": row.Ans4bFin,\r\n                    \"Answer_C\": row.Ans4cFin,\r\n                    \"Answer_D\": row.Ans4dFin,\r\n                    \"Answer_E\": row.Ans4eFin,\r\n                    \"Answer_F\": row.Ans4fFin\r\n                },\r\n                \"geometry\": {\r\n                  \"coordinates\": [Number(row.longitude), Number(row.latitude)],\r\n                  \"type\": \"Point\",\r\n                },\r\n              }\r\n            })      \r\n            \r\n            setfinalGeoJsonFour(MyGeoJsonFour)\r\n\r\n        }\r\n        fetchData();\r\n    //    console.log(finalGeoJson)\r\n      }, []);\r\n\r\n      \r\n        const mapContainer = useRef(null);\r\n        useEffect(() => {\r\n            const map = new mapboxgl.Map({\r\n              container: mapContainer.current,\r\n              style: 'mapbox://styles/mapbox/light-v11',\r\n              center: [15.754, 48.228],\r\n              zoom: 5.15,\r\n              projection: 'naturalEarth',\r\n            });\r\n    \r\n            map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\r\n            \r\n            const GeoJsonCollFour = {\r\n                \"type\": \"FeatureCollection\",\r\n                \"features\": \r\n                    finalGeoJsonFour\r\n              };\r\n                // This GeoJson is valid\r\n                // console.log(JSON.stringify(GeoJsonColl))            \r\n     \r\n        map.on('load', () => {\r\n\r\n        map.addLayer({\r\n                id: 'resultsAnswerFourConflict',\r\n                type: 'circle',\r\n                source: {\r\n                  type: 'geojson',\r\n                  data: GeoJsonCollFour\r\n                },\r\n                paint: {\r\n               'circle-color': '#526d9d',\r\n               'circle-stroke-width': 1,\r\n               'circle-stroke-color': '#526d9d',\r\n               'circle-opacity': 0.5,\r\n               'circle-radius': {\r\n                property: 'Answer_A',\r\n                // think how to make them more proportional to our responses\r\n                stops: [\r\n                  [0, 0],\r\n                  [1, 5],\r\n                  [5, 20],\r\n                ]\r\n              }\r\n                }\r\n            })\r\n    \r\n// When a click event occurs on a feature in the csvData layer, open a popup at the\r\n// location of the feature, with description HTML from its properties.            \r\n                map.on('click', 'resultsAnswerFourConflict', function(e) {\r\n                var coordinates = e.features[0].geometry.coordinates.slice();\r\n\r\n              // set popup text\r\n              var description =\r\n              `<h4>` +\r\n              e.features[0].properties.Country +\r\n              `</h4> \r\n              <ul>\r\n                <li>A: Gesamt ` + e.features[0].properties.Answer_A + ` Personen</li>\r\n                <li>B: Gesamt ` + e.features[0].properties.Answer_B + ` Personen</li>\r\n                <li>C: Gesamt ` + e.features[0].properties.Answer_C + ` Personen</li>\r\n                <li>D: Gesamt ` + e.features[0].properties.Answer_D + ` Personen</li>\r\n                <li>E: Gesamt ` + e.features[0].properties.Answer_E + ` Personen</li>\r\n                <li>F: Gesamt ` + e.features[0].properties.Answer_F + ` Personen</li>\r\n              </ul>` \r\n\r\n               //add Popup to map\r\n                  new mapboxgl.Popup()\r\n                    .setLngLat(coordinates)\r\n                    .setHTML(description)\r\n                    .addTo(map);\r\n                });\r\n                \r\n                // Change the cursor to a pointer when the mouse is over the places layer.\r\n                map.on('mouseenter', 'resultsAnswerFourConflict', function() {\r\n                  map.getCanvas().style.cursor = 'pointer';\r\n                });\r\n                \r\n                // Change it back to a pointer when it leaves.\r\n                map.on('mouseleave', 'places', function() {\r\n                  map.getCanvas().style.cursor = '';\r\n                });\r\n                \r\n        })\r\n  })\r\n\r\n    return (\r\n    <React.Fragment>\r\n        <div>\r\n            <div ref={mapContainer} className=\"map-container\" />\r\n        </div>\r\n        <div className=\"exh_map_result_content\">\r\n        <h2>Frage 4:</h2>\r\n            <h3>\r\n            Viele Menschen meinen, Konflikte entstehen vor allem dadurch, dass man einander nicht versteht. Sind Sie auch dieser Ansicht?\r\n            </h3> \r\n            <div className=\"exh_map_quest_result\"><span>A</span><p>Antwort 1 - Im Prinzip ja. Oft will man lieber recht haben, als den anderen zu verstehen. Das Ende der Rechthaberei ist oft auch das Ende eines Konfliktes.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>B</span><p>Antwort 2 - Nein. Denn jedes Verstehen hat einmal ein Ende. Ich zum Beispiel kann nicht verstehen, wenn andere nicht verstehen, dass der Klimawandel die Menschheit bedroht. Da hört mein Verständnis auf.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>C</span><p>Antwort 3 - Diese Ansicht ist falsch. Ganz oft kann ich zwar die Haltung eines Menschen nachvollziehen und damit auch verstehen. Der Konflikt ist damit aber noch nicht gelöst. Denn oft teile ich einfach seine Haltung nicht und werde es auch nicht tun.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>D</span><p>Antwort 4 - Es kommt nicht darauf an, den anderen zu verstehen, sondern mit ihm auszukommen. Im Falle eines Konfliktes suche ich deshalb nach Lösungen, denen beide Parteien zustimmen können. Ergebnisse sind wichtiger als gegenseitiges Verständnis.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>E</span><p>Antwort 5 - Ja. Denn den anderen zu verstehen, eröffnet neue Sichtweisen und Wege, den Konflikt zu lösen.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>F</span><p>Antwort 6 - Nein. Es geht nicht um Verständnis, sondern um Interessen. Man muss sie nicht verstehen, sie sind einfach da.</p></div>\r\n        </div>\r\n    </React.Fragment>\r\n    );          \r\n}\r\n\r\nexport default MapQFourDE","import React, {useState} from \"react\"\r\nimport { Container, Badge, Button, Row, Col } from \"react-bootstrap\"\r\nimport BaseExhibitionConflictDE from \"../../../../../components/static/BaseExhibitionConflicts/inGalleryIndex\"\r\nimport MapQOneDE from \"../../../../../components/shared/ExhibitionQuestions/inGalleryConflicts/Q1_mapDE\"\r\nimport MapQTwoDE from \"../../../../../components/shared/ExhibitionQuestions/inGalleryConflicts/Q2_mapDE\"\r\nimport MapQThreeDE from \"../../../../../components/shared/ExhibitionQuestions/inGalleryConflicts/Q3_mapDE\"\r\nimport MapQFourDE from \"../../../../../components/shared/ExhibitionQuestions/inGalleryConflicts/Q4_mapDE\"\r\n\r\n\r\nconst ConflictsAnswersDE: React.FC = () => {\r\n\r\n  const [MapQOneVisible, setMapQOneVisible] = useState(false);\r\n  const [MapQTwoVisible, setMapQTwoVisible] = useState(false);\r\n  const [MapQThreeVisible, setMapQThreeVisible] = useState(false);\r\n  const [MapQFourVisible, setMapQFourVisible] = useState(false);\r\n  const [activeButton, setActiveButton] = useState<string | undefined>(undefined);\r\n\r\n  const handleMapQOne = () => {\r\n    setMapQOneVisible((isVisible) => !isVisible);\r\n    setMapQTwoVisible(false);\r\n    setMapQThreeVisible(false);\r\n    setMapQFourVisible(false);\r\n    setActiveButton(\"Question 1\");\r\n  };\r\n\r\n  const handleMapQTwo = () => {\r\n    setMapQTwoVisible((isVisible) => !isVisible);\r\n    setMapQOneVisible(false);\r\n    setMapQThreeVisible(false);\r\n    setMapQFourVisible(false);\r\n    setActiveButton(\"Question 2\");\r\n  };\r\n\r\n  const handleMapQThree = () => {\r\n    setMapQThreeVisible((isVisible) => !isVisible);\r\n    setMapQOneVisible(false);\r\n    setMapQTwoVisible(false);\r\n    setMapQFourVisible(false);\r\n    setActiveButton(\"Question 3\");\r\n  };\r\n\r\n  const handleMapQFour = () => {\r\n    setMapQFourVisible((isVisible) => !isVisible);\r\n    setMapQOneVisible(false);\r\n    setMapQTwoVisible(false);\r\n    setMapQThreeVisible(false);\r\n    setActiveButton(\"Question 4\");\r\n  };\r\n\r\n\r\nreturn (\r\n<BaseExhibitionConflictDE>\r\n<div className=\"exh_container_inner exh_map_container mt-5\">\r\n  <div className=\"d-grid gap-2\">\r\n  <Badge className=\"badgeConflicts rounded-pill\"><h1>Ergebnisse</h1></Badge>\r\n  </div>\r\n\r\n<Row>\r\n<Col lg={3} md={6} sm={12}><Button className={`exh_map_btn ${activeButton === \"Question 1\" ? \"active\" : \"\"}`} onClick={handleMapQOne}>Frage 1</Button></Col>\r\n<Col lg={3} md={6} sm={12}><Button className={`exh_map_btn ${activeButton === \"Question 2\" ? \"active\" : \"\"}`} onClick={handleMapQTwo}>Frage 2</Button></Col>\r\n<Col lg={3} md={6} sm={12}><Button className={`exh_map_btn ${activeButton === \"Question 3\" ? \"active\" : \"\"}`} onClick={handleMapQThree}>Frage 3</Button></Col>\r\n<Col lg={3} md={6} sm={12}><Button className={`exh_map_btn ${activeButton === \"Question 4\" ? \"active\" : \"\"}`} onClick={handleMapQFour}>Frage 4</Button></Col>\r\n</Row>\r\n\r\n  <div className=\"exh_btn_content\">\r\n      {MapQOneVisible && <h1>Frage 1</h1> && <MapQOneDE></MapQOneDE>}\r\n      {MapQTwoVisible && <h1>Frage 2</h1> && <MapQTwoDE></MapQTwoDE>}\r\n      {MapQThreeVisible && <h1>Frage 3</h1> && <MapQThreeDE></MapQThreeDE>}\r\n      {MapQFourVisible && <h1>Frage 4</h1> && <MapQFourDE></MapQFourDE>}\r\n  </div>\r\n\r\n  <div className=\"exh_submit_button\">\r\n      <div className=\"exh_arrow_container\">\r\n      <img className=\"exh_blue_arrow\" src=\"/images/exhibition_assets/arrow_blue.svg\" alt=\"\"></img>\r\n  </div>\r\n      <Button className=\"exh_submit_btn\" href=\"exhibitions/conflicts/inGalleryDE/4thQuestionConflictDE\">\r\n        <h1 style={{ color: \"white\" }}>Letzte Frage</h1>\r\n      </Button>\r\n  </div>\r\n\r\n  </div>\r\n</BaseExhibitionConflictDE>\r\n    )\r\n  }\r\n\r\nexport default ConflictsAnswersDE"],"sourceRoot":""}