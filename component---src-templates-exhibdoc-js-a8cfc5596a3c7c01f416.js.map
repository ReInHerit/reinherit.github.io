{"version":3,"sources":["webpack://reinherit-digital-hub/./node_modules/react-bootstrap/esm/ListGroup.js","webpack://reinherit-digital-hub/./node_modules/react-bootstrap/esm/ListGroupItem.js","webpack://reinherit-digital-hub/./src/components/shared/ExhibDocFeed/Architecture/index.tsx","webpack://reinherit-digital-hub/./src/components/shared/ExhibDocFeed/DigExhib/index.tsx","webpack://reinherit-digital-hub/./src/components/shared/ExhibDocFeed/GenInfo/index.tsx","webpack://reinherit-digital-hub/./src/components/shared/ExhibDocFeed/IntroOutro/index.tsx","webpack://reinherit-digital-hub/./src/components/shared/ExhibDocFeed/OnlineColl/index.tsx","webpack://reinherit-digital-hub/./src/components/shared/ExhibDocFeed/Tablet/index.tsx","webpack://reinherit-digital-hub/./src/components/shared/Layout/SideMainLayout/index.tsx","webpack://reinherit-digital-hub/./src/components/static/Header/index.tsx","webpack://reinherit-digital-hub/./src/components/static/BaseLayout/index.tsx","webpack://reinherit-digital-hub/./src/components/static/MainHeading/index.tsx","webpack://reinherit-digital-hub/./src/templates/exhibdoc.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","ListGroup","props","ref","horizontalVariant","_useUncontrolled","activeKey","className","initialBsPrefix","bsPrefix","variant","horizontal","_useUncontrolled$as","as","controlledProps","concat","displayName","assign","Item","ListGroupItem","_ref","active","disabled","eventKey","action","_useNavItem","href","_useNavItem2","navItemProps","meta","handleClick","event","preventDefault","stopPropagation","onClick","undefined","tabIndex","Component","isActive","data","useStaticQuery","ArchitectureExhibDocQuery","allMarkdownRemark","edges","sort","map","edge","style","border","node","frontmatter","pageId","to","textDecoration","title","DigExhibExhibDocQuery","GenInfoExhibDocQuery","IntroOutroExhibDocQuery","OnCollExhibDocQuery","TabletExhibDocQuery","side","lg","xxl","children","Container","alt","src","marginTop","height","color","pageTitle","Base","Head","fluid","Footer","fontSize","breadCrumb","bread","index","textEmphasis","value","label","subHeading","subText","Template","markdownRemark","html","id","exhibdocsection","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"component---src-templates-exhibdoc-js-a8cfc5596a3c7c01f416.js","sourcesContent":["import _defineProperty from \"C:/Users/chiar/Desktop/reinheritHubOct22/digital-hub/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"C:/Users/chiar/Desktop/reinheritHubOct22/digital-hub/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutProperties(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\".concat(horizontal);\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, _objectSpread(_objectSpread({\n    ref: ref\n  }, controlledProps), {}, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && \"\".concat(bsPrefix, \"-\").concat(variant), horizontalVariant && \"\".concat(bsPrefix, \"-\").concat(horizontalVariant))\n  }));\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});","import _defineProperty from \"C:/Users/chiar/Desktop/reinheritHubOct22/digital-hub/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:/Users/chiar/Desktop/reinheritHubOct22/digital-hub/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:/Users/chiar/Desktop/reinheritHubOct22/digital-hub/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      eventKey = _ref.eventKey,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      props = _objectWithoutProperties(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"eventKey\", \"className\", \"variant\", \"action\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n\n  var _useNavItem = useNavItem(_objectSpread({\n    key: makeEventKey(eventKey, props.href),\n    active: active\n  }, props)),\n      _useNavItem2 = _slicedToArray(_useNavItem, 2),\n      navItemProps = _useNavItem2[0],\n      meta = _useNavItem2[1];\n\n  var handleClick = useEventCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    navItemProps.onClick(event);\n  });\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  } // eslint-disable-next-line no-nested-ternary\n\n\n  var Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread(_objectSpread({\n    ref: ref\n  }, props), navItemProps), {}, {\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && \"\".concat(bsPrefix, \"-\").concat(variant), action && \"\".concat(bsPrefix, \"-action\"))\n  }));\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import { graphql, useStaticQuery, Link } from \"gatsby\"\r\nimport React from \"react\"\r\nimport { Col, Row, Badge, Button, ListGroup, ListGroupItem } from \"react-bootstrap\"\r\n\r\n/**\r\n * Generated overview over Exhibdoc items\r\n * @returns\r\n */\r\n\r\nconst ArchitectureExhibDocFeed: React.FC = props => {\r\nconst data: ExhibDocQueryData.Data = useStaticQuery(ArchitectureExhibDocQuery)\r\n\r\n  return (\r\n    <ListGroup>\r\n        {data.allMarkdownRemark.edges.sort().map(edge => (\r\n        <ListGroupItem style={{border: \"0px\"}} eventKey={edge.node.frontmatter.pageId}>\r\n          <Link to={`/exhibdoc/${edge.node.frontmatter.pageId}`} style={{textDecoration: \"none\"}}>{edge.node.frontmatter.title}</Link>\r\n          <hr/>\r\n        </ListGroupItem>\r\n        ))}\r\n    </ListGroup>\r\n  )\r\n}\r\n\r\nexport default ArchitectureExhibDocFeed\r\n\r\nconst ArchitectureExhibDocQuery = graphql`\r\nquery ArchitectureExhibDocQuery {\r\n  allMarkdownRemark(\r\n    filter: {fileAbsolutePath: {regex: \"/exhibdoc/\"}, frontmatter: {exhibdocsection: {eq: \"Architecture\"}}}\r\n  ) {\r\n    edges {\r\n      node {\r\n        html\r\n        excerpt\r\n        frontmatter {\r\n          title\r\n          date(fromNow: true)\r\n          target_audience\r\n          pageId\r\n          license\r\n          thumbnail\r\n          mainImage\r\n          exhibdocsection\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`\r\n\r\ndeclare module ExhibDocQueryData {\r\n  export interface Frontmatter {\r\n    title: string\r\n    date: string\r\n    target_audience: string[]\r\n    pageId: string\r\n    mainReference: string | null\r\n    thumbnail?: string\r\n    theme: string\r\n  }\r\n\r\n  export interface Node {\r\n    html: string\r\n    excerpt: string\r\n    frontmatter: Frontmatter\r\n  }\r\n\r\n  export interface Edge {\r\n    node: Node\r\n  }\r\n\r\n  export interface AllMarkdownRemark {\r\n    edges: Edge[]\r\n  }\r\n\r\n  export interface Data {\r\n    allMarkdownRemark: AllMarkdownRemark\r\n  }\r\n\r\n  export interface Extensions {}\r\n\r\n  export interface RootObject {\r\n    data: Data\r\n    extensions: Extensions\r\n  }\r\n}","import { graphql, useStaticQuery, Link } from \"gatsby\"\r\nimport React from \"react\"\r\nimport { Col, Row, Badge, Button, ListGroup, ListGroupItem } from \"react-bootstrap\"\r\n\r\n/**\r\n * Generated overview over Exhibdoc items\r\n * @returns\r\n */\r\n\r\nconst DigExhibExhibDocFeed: React.FC = props => {\r\nconst data: ExhibDocQueryData.Data = useStaticQuery(DigExhibExhibDocQuery)\r\n\r\n  return (\r\n    <ListGroup>\r\n        {data.allMarkdownRemark.edges.sort().map(edge => (\r\n        <ListGroupItem style={{border: \"0px\"}} eventKey={edge.node.frontmatter.pageId}>\r\n          <Link to={`/exhibdoc/${edge.node.frontmatter.pageId}`} style={{textDecoration: \"none\"}}>{edge.node.frontmatter.title}</Link>\r\n          <hr/>\r\n        </ListGroupItem>\r\n        ))}\r\n    </ListGroup>\r\n  )\r\n}\r\n\r\nexport default DigExhibExhibDocFeed\r\n\r\nconst DigExhibExhibDocQuery = graphql`\r\nquery DigExhibExhibDocQuery {\r\n  allMarkdownRemark(\r\n    filter: {fileAbsolutePath: {regex: \"/exhibdoc/\"}, frontmatter: {exhibdocsection: {eq: \"Digital Exhibitions\"}}}\r\n  ) {\r\n    edges {\r\n      node {\r\n        html\r\n        excerpt\r\n        frontmatter {\r\n          title\r\n          date(fromNow: true)\r\n          target_audience\r\n          pageId\r\n          license\r\n          thumbnail\r\n          mainImage\r\n          exhibdocsection\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`\r\n\r\ndeclare module ExhibDocQueryData {\r\n  export interface Frontmatter {\r\n    title: string\r\n    date: string\r\n    target_audience: string[]\r\n    pageId: string\r\n    mainReference: string | null\r\n    thumbnail?: string\r\n    theme: string\r\n  }\r\n\r\n  export interface Node {\r\n    html: string\r\n    excerpt: string\r\n    frontmatter: Frontmatter\r\n  }\r\n\r\n  export interface Edge {\r\n    node: Node\r\n  }\r\n\r\n  export interface AllMarkdownRemark {\r\n    edges: Edge[]\r\n  }\r\n\r\n  export interface Data {\r\n    allMarkdownRemark: AllMarkdownRemark\r\n  }\r\n\r\n  export interface Extensions {}\r\n\r\n  export interface RootObject {\r\n    data: Data\r\n    extensions: Extensions\r\n  }\r\n}","import { graphql, useStaticQuery, Link } from \"gatsby\"\r\nimport React from \"react\"\r\nimport { Col, Row, Badge, Button, ListGroup, ListGroupItem } from \"react-bootstrap\"\r\n\r\n/**\r\n * Generated overview over Exhibdoc items\r\n * @returns\r\n */\r\n\r\nconst GenInfoExhibDocFeed: React.FC = props => {\r\nconst data: ExhibDocQueryData.Data = useStaticQuery(GenInfoExhibDocQuery)\r\n\r\n  return (\r\n    <ListGroup>\r\n        {data.allMarkdownRemark.edges.sort().map(edge => (\r\n        <ListGroupItem style={{border: \"0px\"}} eventKey={edge.node.frontmatter.pageId}>\r\n          <Link to={`/exhibdoc/${edge.node.frontmatter.pageId}`} style={{textDecoration: \"none\"}}>{edge.node.frontmatter.title}</Link>\r\n          <hr/>\r\n        </ListGroupItem>\r\n        ))}\r\n    </ListGroup>\r\n  )\r\n}\r\n\r\nexport default GenInfoExhibDocFeed\r\n\r\nconst GenInfoExhibDocQuery = graphql`\r\nquery GenInfoExhibDocQuery {\r\n  allMarkdownRemark(\r\n    filter: {fileAbsolutePath: {regex: \"/exhibdoc/\"}, frontmatter: {exhibdocsection: {eq: \"General Information\"}}}\r\n  ) {\r\n    edges {\r\n      node {\r\n        html\r\n        excerpt\r\n        frontmatter {\r\n          title\r\n          date(fromNow: true)\r\n          target_audience\r\n          pageId\r\n          license\r\n          thumbnail\r\n          mainImage\r\n          exhibdocsection\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`\r\n\r\ndeclare module ExhibDocQueryData {\r\n  export interface Frontmatter {\r\n    title: string\r\n    date: string\r\n    target_audience: string[]\r\n    pageId: string\r\n    mainReference: string | null\r\n    thumbnail?: string\r\n    theme: string\r\n  }\r\n\r\n  export interface Node {\r\n    html: string\r\n    excerpt: string\r\n    frontmatter: Frontmatter\r\n  }\r\n\r\n  export interface Edge {\r\n    node: Node\r\n  }\r\n\r\n  export interface AllMarkdownRemark {\r\n    edges: Edge[]\r\n  }\r\n\r\n  export interface Data {\r\n    allMarkdownRemark: AllMarkdownRemark\r\n  }\r\n\r\n  export interface Extensions {}\r\n\r\n  export interface RootObject {\r\n    data: Data\r\n    extensions: Extensions\r\n  }\r\n}","import { graphql, useStaticQuery, Link } from \"gatsby\"\r\nimport React from \"react\"\r\nimport { Col, Row, Badge, Button, ListGroup, ListGroupItem } from \"react-bootstrap\"\r\n\r\n/**\r\n * Generated overview over Exhibdoc items\r\n * @returns\r\n */\r\n\r\nconst IntroOutroExhibDocFeed: React.FC = props => {\r\nconst data: ExhibDocQueryData.Data = useStaticQuery(IntroOutroExhibDocQuery)\r\n\r\n  return (\r\n    <ListGroup>\r\n        {data.allMarkdownRemark.edges.sort().map(edge => (\r\n        <ListGroupItem style={{border: \"0px\"}} eventKey={edge.node.frontmatter.pageId}>\r\n          <Link to={`/exhibdoc/${edge.node.frontmatter.pageId}`} style={{textDecoration: \"none\"}}>{edge.node.frontmatter.title}</Link>\r\n          <hr/>\r\n        </ListGroupItem>\r\n        ))}\r\n    </ListGroup>\r\n  )\r\n}\r\n\r\nexport default IntroOutroExhibDocFeed\r\n\r\nconst IntroOutroExhibDocQuery = graphql`\r\nquery IntroOutroExhibDocQuery {\r\n  allMarkdownRemark(\r\n    filter: {fileAbsolutePath: {regex: \"/exhibdoc/\"}, frontmatter: {exhibdocsection: {eq: \"Intro/Outro\"}}}\r\n  ) {\r\n    edges {\r\n      node {\r\n        html\r\n        excerpt\r\n        frontmatter {\r\n          title\r\n          date(fromNow: true)\r\n          target_audience\r\n          pageId\r\n          license\r\n          thumbnail\r\n          mainImage\r\n          exhibdocsection\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`\r\n\r\ndeclare module ExhibDocQueryData {\r\n  export interface Frontmatter {\r\n    title: string\r\n    date: string\r\n    target_audience: string[]\r\n    pageId: string\r\n    mainReference: string | null\r\n    thumbnail?: string\r\n    theme: string\r\n  }\r\n\r\n  export interface Node {\r\n    html: string\r\n    excerpt: string\r\n    frontmatter: Frontmatter\r\n  }\r\n\r\n  export interface Edge {\r\n    node: Node\r\n  }\r\n\r\n  export interface AllMarkdownRemark {\r\n    edges: Edge[]\r\n  }\r\n\r\n  export interface Data {\r\n    allMarkdownRemark: AllMarkdownRemark\r\n  }\r\n\r\n  export interface Extensions {}\r\n\r\n  export interface RootObject {\r\n    data: Data\r\n    extensions: Extensions\r\n  }\r\n}","import { graphql, useStaticQuery, Link } from \"gatsby\"\r\nimport React from \"react\"\r\nimport { Col, Row, Badge, Button, ListGroup, ListGroupItem } from \"react-bootstrap\"\r\n\r\n/**\r\n * Generated overview over Exhibdoc items\r\n * @returns\r\n */\r\n\r\nconst OnCollExhibDocFeed: React.FC = props => {\r\nconst data: ExhibDocQueryData.Data = useStaticQuery(OnCollExhibDocQuery)\r\n\r\n  return (\r\n    <ListGroup>\r\n        {data.allMarkdownRemark.edges.sort().map(edge => (\r\n        <ListGroupItem style={{border: \"0px\"}} eventKey={edge.node.frontmatter.pageId}>\r\n          <Link to={`/exhibdoc/${edge.node.frontmatter.pageId}`} style={{textDecoration: \"none\"}}>{edge.node.frontmatter.title}</Link>\r\n          <hr/>\r\n        </ListGroupItem>\r\n        ))}\r\n    </ListGroup>\r\n  )\r\n}\r\n\r\nexport default OnCollExhibDocFeed\r\n\r\nconst OnCollExhibDocQuery = graphql`\r\nquery OnCollExhibDocQuery {\r\n  allMarkdownRemark(\r\n    filter: {fileAbsolutePath: {regex: \"/exhibdoc/\"}, frontmatter: {exhibdocsection: {eq: \"Online Collection\"}}}\r\n  ) {\r\n    edges {\r\n      node {\r\n        html\r\n        excerpt\r\n        frontmatter {\r\n          title\r\n          date(fromNow: true)\r\n          target_audience\r\n          pageId\r\n          license\r\n          thumbnail\r\n          mainImage\r\n          exhibdocsection\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`\r\n\r\ndeclare module ExhibDocQueryData {\r\n  export interface Frontmatter {\r\n    title: string\r\n    date: string\r\n    target_audience: string[]\r\n    pageId: string\r\n    mainReference: string | null\r\n    thumbnail?: string\r\n    theme: string\r\n  }\r\n\r\n  export interface Node {\r\n    html: string\r\n    excerpt: string\r\n    frontmatter: Frontmatter\r\n  }\r\n\r\n  export interface Edge {\r\n    node: Node\r\n  }\r\n\r\n  export interface AllMarkdownRemark {\r\n    edges: Edge[]\r\n  }\r\n\r\n  export interface Data {\r\n    allMarkdownRemark: AllMarkdownRemark\r\n  }\r\n\r\n  export interface Extensions {}\r\n\r\n  export interface RootObject {\r\n    data: Data\r\n    extensions: Extensions\r\n  }\r\n}","import { graphql, useStaticQuery, Link } from \"gatsby\"\r\nimport React from \"react\"\r\nimport { Col, Row, Badge, Button, ListGroup, ListGroupItem } from \"react-bootstrap\"\r\n\r\n/**\r\n * Generated overview over Exhibdoc items\r\n * @returns\r\n */\r\n\r\nconst TabletExhibDocFeed: React.FC = props => {\r\nconst data: ExhibDocQueryData.Data = useStaticQuery(TabletExhibDocQuery)\r\n\r\n  return (\r\n    <ListGroup>\r\n        {data.allMarkdownRemark.edges.sort().map(edge => (\r\n        <ListGroupItem style={{border: \"0px\"}} eventKey={edge.node.frontmatter.pageId}>\r\n          <Link to={`/exhibdoc/${edge.node.frontmatter.pageId}`} style={{textDecoration: \"none\"}}>{edge.node.frontmatter.title}</Link>\r\n          <hr/>\r\n        </ListGroupItem>\r\n        ))}\r\n    </ListGroup>\r\n  )\r\n}\r\n\r\nexport default TabletExhibDocFeed\r\n\r\nconst TabletExhibDocQuery = graphql`\r\nquery TabletExhibDocQuery {\r\n  allMarkdownRemark(\r\n    filter: {fileAbsolutePath: {regex: \"/exhibdoc/\"}, frontmatter: {exhibdocsection: {eq: \"Tablet\"}}}\r\n  ) {\r\n    edges {\r\n      node {\r\n        html\r\n        excerpt\r\n        frontmatter {\r\n          title\r\n          date(fromNow: true)\r\n          target_audience\r\n          pageId\r\n          license\r\n          thumbnail\r\n          mainImage\r\n          exhibdocsection\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`\r\n\r\ndeclare module ExhibDocQueryData {\r\n  export interface Frontmatter {\r\n    title: string\r\n    date: string\r\n    target_audience: string[]\r\n    pageId: string\r\n    mainReference: string | null\r\n    thumbnail?: string\r\n    theme: string\r\n  }\r\n\r\n  export interface Node {\r\n    html: string\r\n    excerpt: string\r\n    frontmatter: Frontmatter\r\n  }\r\n\r\n  export interface Edge {\r\n    node: Node\r\n  }\r\n\r\n  export interface AllMarkdownRemark {\r\n    edges: Edge[]\r\n  }\r\n\r\n  export interface Data {\r\n    allMarkdownRemark: AllMarkdownRemark\r\n  }\r\n\r\n  export interface Extensions {}\r\n\r\n  export interface RootObject {\r\n    data: Data\r\n    extensions: Extensions\r\n  }\r\n}","import React from \"react\"\nimport { Col, Row } from \"react-bootstrap\"\n\ninterface Props {\n  side?: JSX.Element | JSX.Element[]\n  children?: JSX.Element | JSX.Element[]\n}\n\n/**\n * Handles left sidebar and right content layout. Checks responsive design.\n * @param props\n * @returns\n */\nconst SideMainLayout: React.FC<Props> = props => {\n  return (\n    <Row>\n      <Col>{props.side}</Col>\n      <Col lg={9} xxl={10}>\n        {props.children}\n      </Col>\n    </Row>\n  )\n}\n\nexport default SideMainLayout\n","import {\n  faBookOpen,\n  faCog,\n  faCommentDots,\n  faSearch,\n  faTools,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { Button, Col, Container, Row } from \"react-bootstrap\"\nimport React from \"react\"\nimport { Link } from \"gatsby\"\nimport {\n  faFacebook,\n  faInstagram,\n  faLinkedin,\n  faTiktok,\n  faTwitter,\n  faYoutube,\n} from \"@fortawesome/free-brands-svg-icons\"\n\nconst Header: React.FC = () => {\n  return (\n    <div className=\"pt-3 mt-4 bg-white text-center\">\n      <div className=\"pb-3\">\n        <Container className=\"pt-3\">\n          <img alt=\"Reinherit header image\" src=\"images/Slogan-cut.webp\" style={{marginTop:\"3vh\"}} height={80}></img>\n          <h2 style={{ marginTop: \"2vh\", color:\"grey\"}} className=\"h3\">\n            ReInHerit Digital Hub\n          </h2>\n        </Container>\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"../../../styles/index.css\"\nimport React from \"react\"\nimport Header from \"../Header\"\nimport { Container } from \"react-bootstrap\"\nimport ReinNavBar from \"../Navbar\"\nimport Footer from \"../Footer\"\nimport Base from \"../Base\"\nimport Head from \"../Head\"\n\ninterface Props {\n  children?: any;\n  pageTitle?: string\n}\n\nconst BaseLayout = ({ children, pageTitle }: Props) => {\n  return (\n    <Base>\n      <Head pageTitle={pageTitle}></Head>\n      <Header />\n      <ReinNavBar/>\n      {/* <QuickAccessBar/> */}\n      <Container\n        className=\"rein_main_container pt-sm-4 pt-md-0\"\n        style={{marginTop:\"2vh\"}}\n        fluid\n      >{children}</Container>\n      <Footer />\n    </Base>\n  )\n}\n\nexport default BaseLayout\n","import { faQuestion } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { Link } from \"gatsby\"\nimport React from \"react\"\n\ninterface Props {\n  children: string\n  subHeading?: string | JSX.Element\n  subText?: string\n  breadCrumb?: {\n    label: string\n    value: string\n  }[]\n  [property: string]: any\n}\n\nconst MainHeading: React.FC<Props> = props => (\n  <>\n    <div className=\"mb-3\" style={{fontSize:\"1.25em\"}}>\n      <Link to=\"/\" className=\"text-decoration-none\">\n        <b style={{ color: \"rgb(46, 172, 200)\" }}>Home</b>\n      </Link>\n      {props.breadCrumb &&\n        props.breadCrumb.length > 0 &&\n        props.breadCrumb.map((bread, index) => (\n          <div key={`rein_bread_${index}`} className=\"d-inline\">\n            <span> / </span>\n            { index === 0 ? <b><Link style={{color: index === 0 ? \"#ee3f98\" : \"\", textEmphasis: \"800\"}} key={`breadcrumb__${index}`} className=\"text-decoration-none\" to={bread.value}>\n              {bread.label}\n            </Link></b> : <Link style={{color: index === 0 ? \"#ee3f98\" : \"\", textEmphasis: \"800\"}} key={`breadcrumb__${index}`} className=\"text-decoration-none\" to={bread.value}>\n              {bread.label}\n            </Link>}\n          </div>\n        ))}\n    </div>\n    <div className=\"p-3 p-md-4 shadow rounded mb-3 bg-white\">\n      <div>\n        <h1 className=\"h2\" {...props}>\n          {props.children}\n        </h1>\n\n        {/* <hr></hr> */}\n        {props.subHeading && <h2 className=\"h5\">{props.subHeading}</h2>}\n        {props.subText && <p>{props.subText}</p>}\n      </div>\n    </div>\n  </>\n)\n\nexport default MainHeading\n","import { graphql } from \"gatsby\"\r\nimport React from \"react\"\r\nimport { Container } from \"react-bootstrap\"\r\n// import { useReinLocalStorage } from \"../hooks/useReinLocalStorage\"\r\nimport BaseLayout from \"../components/static/BaseLayout\"\r\nimport MainHeading from \"../components/static/MainHeading\"\r\nimport SideMainLayout from \"../components/shared/Layout/SideMainLayout\"\r\nimport ArchitectureExhibDocFeed from \"../components/shared/ExhibDocFeed/Architecture\"\r\nimport DigExhibExhibDocFeed from \"../components/shared/ExhibDocFeed/DigExhib\"\r\nimport GenInfoExhibDocFeed from \"../components/shared/ExhibDocFeed/GenInfo\"\r\nimport IntroOutroExhibDocFeed from \"../components/shared/ExhibDocFeed/IntroOutro\"\r\nimport OnCollExhibDocFeed from \"../components/shared/ExhibDocFeed/OnlineColl\"\r\nimport TabletExhibDocFeed from \"../components/shared/ExhibDocFeed/Tablet\"\r\n\r\nexport default function Template({\r\n  data, // this prop will be injected by the GraphQL query below.\r\n}) {\r\n  const { markdownRemark } = data // data.markdownRemark holds your post data\r\n  const { frontmatter, html } = markdownRemark\r\n \r\n  return (\r\n    <BaseLayout>\r\n    <MainHeading\r\n     breadCrumb={[\r\n      {label:\"Exhibitions Documentation\", value:\"/exhibdoc\"},\r\n      {label:\"...\", value:\"/exhibdoc\"},\r\n    ]}\r\n    >\r\n      {frontmatter.title}\r\n    </MainHeading>\r\n    <div className=\"blog-post-container\" id=\"markdown_container\">\r\n        <div className=\"blog-post\">\r\n        <SideMainLayout\r\n            side={\r\n              <div className=\"card p-4 border-0 shadow bg-white\">\r\n\r\n                {frontmatter.exhibdocsection === \"Architecture\" && (\r\n                    <ArchitectureExhibDocFeed></ArchitectureExhibDocFeed>\r\n                )}\r\n\r\n              {frontmatter.exhibdocsection === \"Digital Exhibitions\" && (\r\n              <DigExhibExhibDocFeed></DigExhibExhibDocFeed> \r\n              )}\r\n              {frontmatter.exhibdocsection === \"Online Collection\" && (\r\n              <OnCollExhibDocFeed></OnCollExhibDocFeed>\r\n              )}\r\n              {frontmatter.exhibdocsection === \"General Information\" && (\r\n                <GenInfoExhibDocFeed></GenInfoExhibDocFeed>\r\n                )}\r\n              {frontmatter.exhibdocsection === \"Intro/Outro\" && (\r\n              <IntroOutroExhibDocFeed></IntroOutroExhibDocFeed>\r\n              )}\r\n              {frontmatter.exhibdocsection === \"Tablet\" && (\r\n              <TabletExhibDocFeed></TabletExhibDocFeed>            \r\n              )}\r\n            \r\n            </div>\r\n            }\r\n            >\r\n        <Container fluid className=\"bg-white card p-4 mb-2 border-0 shadow\">\r\n              <div\r\n                className=\"blog-post-content\"\r\n                dangerouslySetInnerHTML={{ __html: html }}\r\n              />\r\n        </Container>\r\n        </SideMainLayout>\r\n      </div>\r\n    </div>\r\n  </BaseLayout>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\nquery($id: String!) {\r\n  markdownRemark(frontmatter: { pageId: { eq: $id } }) {\r\n  html\r\n  frontmatter {\r\n      date\r\n      title\r\n      license\r\n      target_audience\r\n      tags\r\n      theme\r\n      thumbnail\r\n      type\r\n      mainImage\r\n      exhibdocsection\r\n    }\r\n  id\r\n  excerpt\r\n  }\r\n}\r\n`\r\n"],"sourceRoot":""}