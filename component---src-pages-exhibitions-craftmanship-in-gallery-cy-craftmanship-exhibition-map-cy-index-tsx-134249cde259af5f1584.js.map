{"version":3,"sources":["webpack://reinherit-digital-hub/./node_modules/react-bootstrap/esm/Row.js","webpack://reinherit-digital-hub/./src/components/static/BaseExhibitionConflicts/inGalleryIndex.tsx","webpack://reinherit-digital-hub/./src/components/shared/ExhibitionQuestions/inGalleryCraftmanship/Q1_mapCraftmanshipCY.tsx","webpack://reinherit-digital-hub/./src/components/shared/ExhibitionQuestions/inGalleryCraftmanship/Q3_mapCraftmanshipCY.tsx","webpack://reinherit-digital-hub/./src/components/shared/ExhibitionQuestions/inGalleryCraftmanship/Q4_mapCraftmanshipCY.tsx","webpack://reinherit-digital-hub/./src/pages/exhibitions/craftmanship/inGalleryCY/CraftmanshipExhibitionMapCY/index.tsx"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","DEVICE_SIZES","Row","_ref","ref","bsPrefix","className","_ref$as","as","Component","props","decoratedBsPrefix","sizePrefix","concat","classes","brkPoint","cols","propValue","infix","displayName","children","pageTitle","style","backgroundColor","fluid","mapboxgl","doc","GoogleSpreadsheet","creds","useState","finalGeoJson","setfinalGeoJson","setAllRows","useEffect","useServiceAccountAuth","loadInfo","getInfo","sheet","sheetsByIndex","getRows","rows","AllRows","map","GoogleSpreadsheetRow","_rawData","sortingRows","exact_match","longitude","latitude","Country","Ans1a","Ans1b","Ans1c","Ans1d","Ans1e","Ans1f","Ans1g","Ans1h","Ans1aFin","Ans1bFin","Ans1cFin","Ans1dFin","Ans1eFin","Ans1fFin","Ans1gFin","Ans1hFin","hasAnswers","res","MyGeoJson","row","Number","fetchData","mapContainer","useRef","container","current","center","zoom","projection","addControl","GeoJsonColl","on","addLayer","id","type","data","paint","property","stops","e","coordinates","features","geometry","slice","description","properties","Answer_A","Answer_B","Answer_C","Answer_D","Answer_E","Answer_F","Answer_G","Answer_H","setLngLat","setHTML","addTo","getCanvas","cursor","finalGeoJsonThree","setfinalGeoJsonThree","setAllRowsThree","sheetThree","rowsThree","AllRowsThree","sortingRowsThree","Ans3a","Ans3b","Ans3c","Ans3d","Ans3e","Ans3f","Ans3aFin","Ans3bFin","Ans3cFin","Ans3dFin","Ans3eFin","Ans3fFin","hasAnswersThree","MyGeoJsonThree","GeoJsonCollThree","finalGeoJsonFour","setfinalGeoJsonFour","setAllRowsFour","sheetFour","rowsFour","AllRowsFour","sortingRowsFour","Ans4a","Ans4b","Ans4c","Ans4d","Ans4aFin","Ans4bFin","Ans4cFin","Ans4dFin","hasAnswersFour","MyGeoJsonFour","GeoJsonCollFour","MapQOneVisible","setMapQOneVisible","setMapQTwoVisible","MapQThreeVisible","setMapQThreeVisible","MapQFourVisible","setMapQFourVisible","undefined","activeButton","setActiveButton","Badge","pill","bg","to","color","Col","lg","md","sm","Button","onClick","isVisible","src","alt","href"],"mappings":"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","file":"component---src-pages-exhibitions-craftmanship-in-gallery-cy-craftmanship-exhibition-map-cy-index-tsx-134249cde259af5f1584.js","sourcesContent":["import _defineProperty from \"C:/Users/chiar/Desktop/reinheritHubOct22/digital-hub/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"C:/Users/chiar/Desktop/reinheritHubOct22/digital-hub/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nvar Row = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutProperties(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = \"\".concat(decoratedBsPrefix, \"-cols\");\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\".concat(brkPoint) : '';\n    if (cols != null) classes.push(\"\".concat(sizePrefix).concat(infix, \"-\").concat(cols));\n  });\n  return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({\n    ref: ref\n  }, props), {}, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nexport default Row;","import React from \"react\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"../../../styles/index.css\"\r\nimport \"../../../styles/tronic.css\"\r\nimport { Container, Row, Col } from \"react-bootstrap\"\r\nimport Base from \"../Base\"\r\nimport Head from \"../Head\"\r\n// import ReinNavbarExhibConflict from \"../navbarExhibitionConflicts\"\r\n// import ReinNavbarExhib from \"../navbarExhibition\"\r\n\r\ninterface Props {\r\n  children?: any;\r\n  pageTitle?: string\r\n}\r\n\r\nconst BaseExhibitionConflictDE = ({ children, pageTitle }: Props) => {\r\n  return (\r\n    <Base>\r\n      <Container\r\n        className=\"exh_main_content mt-2\"\r\n        style={{backgroundColor:\"white\"}}\r\n        fluid \r\n      >{children}</Container>\r\n     \r\n    </Base>\r\n  )\r\n}\r\n\r\nexport default BaseExhibitionConflictDE\r\n\r\n","import React, {Component} from \"react\";\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; \r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport creds from '../questionsIdentities/cred/myjson.json'\r\nimport {GoogleSpreadsheet} from \"google-spreadsheet\"\r\nimport { Button } from \"react-bootstrap\"\r\n\r\nconst MapQOne = () => {\r\n  mapboxgl.accessToken = \"pk.eyJ1Ijoia2lhLXoiLCJhIjoiY2xkZzRnZjRnMHRvazN2bzZ0cnh4OWtzeSJ9.COmQgzmRsKnMZKw77WDF6w\"\r\n  const doc = new GoogleSpreadsheet(creds.sheet_id)\r\n  const [finalGeoJson, setfinalGeoJson] = useState([]);\r\n\r\n        const [AllRows, setAllRows] = useState([]);\r\n        useEffect( () => { \r\n          async function fetchData() {\r\n                await doc.useServiceAccountAuth(creds);\r\n                await doc.loadInfo();      \r\n                await doc.getInfo();\r\n                const sheet = doc.sheetsByIndex[2];\r\n                const rows = await sheet.getRows();\r\n                const AllRows = rows.map((GoogleSpreadsheetRow) => GoogleSpreadsheetRow._rawData);\r\n            //  console.log(AllRows) \r\n                setAllRows(AllRows)\r\n\r\n                const sortingRows = AllRows.map(({\r\n                  [0]: exact_match,\t[1]: longitude, [2]: latitude, [3]: Country,\r\n                  [4]: Ans1a,\t[5]: Ans1b,\t[6]: \tAns1c,\t[7]: \tAns1d, [8]: Ans1e, [9]: Ans1f, [10]: Ans1g, [11]: Ans1h,\r\n                  [12]: Ans1aFin,\t[13]: Ans1bFin,\t[14]: Ans1cFin,\t[15]: Ans1dFin, [16]: Ans1eFin, [17]: Ans1fFin, [18]: Ans1gFin, [19]: Ans1hFin\r\n                }) => \r\n                ({\r\n                  exact_match,\tlongitude, latitude, Country,\r\n                  Ans1a,\tAns1b,\tAns1c,\tAns1d, Ans1e, Ans1f, Ans1g, Ans1h,\t\r\n                  Ans1aFin,\tAns1bFin,\tAns1cFin,\tAns1dFin, Ans1eFin, Ans1fFin, Ans1gFin, Ans1hFin \r\n                  }))\r\n            //  console.log(sortingRows)\r\n\r\n            const hasAnswers = sortingRows.filter((res) => res.Ans1aFin !== \"no answers\");\r\n            // console.log(hasAnswers)\r\n           \r\n            const MyGeoJson = hasAnswers.map(row => {\r\n              return {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    \"Country\": row.Country,\r\n                    \"Answer_A\": row.Ans1aFin,\r\n                    \"Answer_B\": row.Ans1bFin,\r\n                    \"Answer_C\": row.Ans1cFin,\r\n                    \"Answer_D\": row.Ans1dFin,\r\n                    \"Answer_E\": row.Ans1eFin,\r\n                    \"Answer_F\": row.Ans1fFin,\r\n                    \"Answer_G\": row.Ans1gFin,\r\n                    \"Answer_H\": row.Ans1hFin,\r\n                },\r\n                \"geometry\": {\r\n                  \"coordinates\": [Number(row.longitude), Number(row.latitude)],\r\n                  \"type\": \"Point\",\r\n                },\r\n              }\r\n            })      \r\n            \r\n            setfinalGeoJson(MyGeoJson)\r\n\r\n        }\r\n        fetchData();\r\n    //    console.log(finalGeoJson)\r\n      }, []);\r\n\r\n      \r\n        const mapContainer = useRef(null);\r\n        useEffect(() => {\r\n            const map = new mapboxgl.Map({\r\n              container: mapContainer.current,\r\n              style: 'mapbox://styles/mapbox/light-v11',\r\n              center: [33.362, 35.173],\r\n              zoom: 5.15,\r\n              projection: 'naturalEarth',\r\n            });\r\n    \r\n            map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\r\n            \r\n            const GeoJsonColl = {\r\n                \"type\": \"FeatureCollection\",\r\n                \"features\": \r\n                    finalGeoJson\r\n              };\r\n                // This GeoJson is valid\r\n                // console.log(JSON.stringify(GeoJsonColl))            \r\n     \r\n        map.on('load', () => {\r\n\r\n        map.addLayer({\r\n                id: 'resultsAnswerOneIdentities',\r\n                type: 'circle',\r\n                source: {\r\n                  type: 'geojson',\r\n                  data: GeoJsonColl\r\n                },\r\n                paint: {\r\n               'circle-color': '#526d9d',\r\n               'circle-stroke-width': 1,\r\n               'circle-stroke-color': '#526d9d',\r\n               'circle-opacity': 0.5,\r\n               'circle-radius': {\r\n                property: 'Answer_A',\r\n                // think how to make them more proportional to our responses\r\n                stops: [\r\n                  [0, 0],\r\n                  [1, 5],\r\n                  [5, 20],\r\n                ]\r\n              }\r\n                }\r\n            })\r\n    \r\n// When a click event occurs on a feature in the csvData layer, open a popup at the\r\n// location of the feature, with description HTML from its properties.            \r\n                map.on('click', 'resultsAnswerOneIdentities', function(e) {\r\n                var coordinates = e.features[0].geometry.coordinates.slice();\r\n\r\n                // set popup text\r\n                var description =\r\n                `<h4>` +\r\n                e.features[0].properties.Country +\r\n                `</h4> \r\n                <ul>\r\n                  <li>A: Συνολικά ` + e.features[0].properties.Answer_A + ` άνθρωποι</li>\r\n                  <li>B: Συνολικά ` + e.features[0].properties.Answer_B + ` άνθρωποι</li>\r\n                  <li>C: Συνολικά ` + e.features[0].properties.Answer_C + ` άνθρωποι</li>\r\n                  <li>D: Συνολικά ` + e.features[0].properties.Answer_D + ` άνθρωποι</li>\r\n                  <li>D: Συνολικά ` + e.features[0].properties.Answer_E + ` άνθρωποι</li>\r\n                  <li>D: Συνολικά ` + e.features[0].properties.Answer_F + ` άνθρωποι</li>\r\n                  <li>D: Συνολικά ` + e.features[0].properties.Answer_G + ` άνθρωποι</li>\r\n                  <li>D: Συνολικά ` + e.features[0].properties.Answer_H + ` άνθρωποι</li>\r\n                </ul>` \r\n\r\n               //add Popup to map\r\n                  new mapboxgl.Popup()\r\n                    .setLngLat(coordinates)\r\n                    .setHTML(description)\r\n                    .addTo(map);\r\n                });\r\n                \r\n                // Change the cursor to a pointer when the mouse is over the places layer.\r\n                map.on('mouseenter', 'resultsAnswerOneIdentities', function() {\r\n                  map.getCanvas().style.cursor = 'pointer';\r\n                });\r\n                \r\n                // Change it back to a pointer when it leaves.\r\n                map.on('mouseleave', 'places', function() {\r\n                  map.getCanvas().style.cursor = '';\r\n                });\r\n                \r\n        })\r\n  })\r\n\r\n    return (\r\n    <React.Fragment>\r\n       <div>\r\n            <div ref={mapContainer} className=\"map-container\" />\r\n        </div>\r\n     <div className=\"exh_map_result_content\">\r\n        <h2>Ερώτηση 1:</h2>\r\n            <h3> \r\n            Αν είχατε τη δυνατότητα να επιλέξετε ανάμεσα σε ένα χειροποίητο έπιπλο και το ίδιο έπιπλο που κατασκευάζεται από μηχανή, ποιο θα επιλέγατε;\r\n              </h3> \r\n                <div className=\"exh_map_quest_result_green\"><span>Α</span><p>\r\n                Το φθηνότερο.\r\n                </p></div>\r\n                      <div className=\"exh_map_quest_result_green\"><span>Β</span><p>\r\n                Το καλύτερο, δηλαδή το χειροποίητο έπιπλο. Η μηχανική παραγωγή δεν φτάνει ποτέ την ποιότητα της χειροτεχνίας.\r\n                  </p></div>\r\n                <div className=\"exh_map_quest_result_green\"><span>Γ</span><p>\r\n                Το έπιπλο που κατασκευάστηκε από μηχανή. Σε σύγκριση με τους ανθρώπους, οι μηχανές εργάζονται με μεγαλύτερη ακρίβεια.\r\n                  </p></div>\r\n                <div className=\"exh_map_quest_result_green\"><span>Δ</span><p>\r\n                Εκείνο που έχει το μικρότερο οικολογικό αποτύπωμα. Νομίζω ότι είναι αυτό που φτιάχνεται από μηχανή. γιατί αν το μετρήσετε πιθανόν να χρειάζεται λιγότερη ενέργεια για να φτιαχτεί.\r\n                  </p></div>\r\n                  <div className=\"exh_map_quest_result_green\"><span>Ε</span><p>\r\n                  Αυτό που έχει το μικρότερο οικολογικό αποτύπωμα. Νομίζω ότι αυτό είναι το χειροποίητο. Η ενέργεια που βάζει ο άνθρωπος σε κάτι είναι βιώσιμη. Πολύ συχνά η ενέργεια που χρησιμοποιούν οι  μηχανές είναι δεν είναι βιώσιμη.\r\n                  </p></div>\r\n                  <div className=\"exh_map_quest_result_green\"><span>Ζ</span><p>\r\n                  Ό,τι διαρκεί περισσότερο. Οπότε το χειροποίητο.\r\n                  </p></div>\r\n                  <div className=\"exh_map_quest_result_green\"><span>Η</span><p>\r\n                  Tο χειροποίητο. Με την αγορά μου, εξασφαλίζω το προς το ζήν του τεχνίτη και εξασφαλίζω ότι δεν θα θα δώσω τα λεφτά μου σε ένα επενδυτή  που διψάει για χρήμα.\r\n                  </p></div>\r\n                  <div className=\"exh_map_quest_result_green\"><span>Θ</span><p>\r\n                  Δεν με νοιάζει. Έτσι κι αλλιώς είναι το ίδιο.\r\n                  </p></div>\r\n      </div>\r\n\r\n    </React.Fragment>\r\n    );          \r\n}\r\n\r\nexport default MapQOne","import React, {Component} from \"react\";\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; \r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport creds from '../questionsIdentities/cred/myjson.json'\r\nimport {GoogleSpreadsheet} from \"google-spreadsheet\"\r\nimport { Button } from \"react-bootstrap\"\r\n\r\nconst MapQThree = () => {\r\n  mapboxgl.accessToken = \"pk.eyJ1Ijoia2lhLXoiLCJhIjoiY2xkZzRnZjRnMHRvazN2bzZ0cnh4OWtzeSJ9.COmQgzmRsKnMZKw77WDF6w\"\r\n  const doc = new GoogleSpreadsheet(creds.sheet_id)\r\n  const [finalGeoJsonThree, setfinalGeoJsonThree] = useState([]);\r\n\r\n        const [AllRowsThree, setAllRowsThree] = useState([]);\r\n        useEffect( () => { \r\n          async function fetchData() {\r\n                await doc.useServiceAccountAuth(creds);\r\n                await doc.loadInfo();      \r\n                await doc.getInfo();\r\n                const sheetThree = doc.sheetsByIndex[8];\r\n                const rowsThree = await sheetThree.getRows();\r\n                const AllRowsThree = rowsThree.map((GoogleSpreadsheetRow) => GoogleSpreadsheetRow._rawData);\r\n            //  console.log(AllRows) \r\n                setAllRowsThree(AllRowsThree)\r\n\r\n                const sortingRowsThree = AllRowsThree.map(({\r\n                  [0]: exact_match,\t[1]: longitude, [2]: latitude, [3]: Country,\r\n                  [4]: Ans3a,\t[5]: Ans3b,\t[6]: \tAns3c,\t[7]: \tAns3d,\t[8]: \tAns3e, [9]: Ans3f,\r\n                  [10]: Ans3aFin,\t[11]: Ans3bFin,\t[12]: Ans3cFin,\t[13]: Ans3dFin,\t[14]: Ans3eFin, [15]: Ans3fFin\r\n                }) => \r\n                ({\r\n                  exact_match,\tlongitude, latitude, Country,\r\n                  Ans3a,\tAns3b,\tAns3c,\tAns3d,\tAns3e,\tAns3f,\r\n                  Ans3aFin,\tAns3bFin,\tAns3cFin,\tAns3dFin,\tAns3eFin, Ans3fFin\r\n                  }))\r\n            //  console.log(sortingRows)\r\n\r\n            const hasAnswersThree = sortingRowsThree.filter((res) => res.Ans3aFin !== \"no answers\");\r\n            // console.log(hasAnswers)\r\n           \r\n            const MyGeoJsonThree = hasAnswersThree.map(row => {\r\n              return {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    \"Country\": row.Country,\r\n                    \"Answer_A\": row.Ans3aFin,\r\n                    \"Answer_B\": row.Ans3bFin,\r\n                    \"Answer_C\": row.Ans3cFin,\r\n                    \"Answer_D\": row.Ans3dFin,\r\n                    \"Answer_E\": row.Ans3eFin,\r\n                    \"Answer_F\": row.Ans3fFin\r\n                },\r\n                \"geometry\": {\r\n                  \"coordinates\": [Number(row.longitude), Number(row.latitude)],\r\n                  \"type\": \"Point\",\r\n                },\r\n              }\r\n            })      \r\n            \r\n            setfinalGeoJsonThree(MyGeoJsonThree)\r\n\r\n        }\r\n        fetchData();\r\n    //    console.log(finalGeoJson)\r\n      }, []);\r\n\r\n      \r\n        const mapContainer = useRef(null);\r\n        useEffect(() => {\r\n            const map = new mapboxgl.Map({\r\n              container: mapContainer.current,\r\n              style: 'mapbox://styles/mapbox/light-v11',\r\n              center: [33.362, 35.173],\r\n              zoom: 5.15,\r\n              projection: 'naturalEarth',\r\n            });\r\n    \r\n            map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\r\n            \r\n            const GeoJsonCollThree = {\r\n                \"type\": \"FeatureCollection\",\r\n                \"features\": \r\n                    finalGeoJsonThree\r\n              };\r\n                // This GeoJson is valid\r\n                // console.log(JSON.stringify(GeoJsonColl))            \r\n     \r\n        map.on('load', () => {\r\n\r\n        map.addLayer({\r\n                id: 'resultsAnswerThreeIdentities',\r\n                type: 'circle',\r\n                source: {\r\n                  type: 'geojson',\r\n                  data: GeoJsonCollThree\r\n                },\r\n                paint: {\r\n               'circle-color': '#526d9d',\r\n               'circle-stroke-width': 1,\r\n               'circle-stroke-color': '#526d9d',\r\n               'circle-opacity': 0.5,\r\n               'circle-radius': {\r\n                property: 'Answer_A',\r\n                // think how to make them more proportional to our responses\r\n                stops: [\r\n                  [0, 0],\r\n                  [1, 5],\r\n                  [5, 20],\r\n                ]\r\n              }\r\n                }\r\n            })\r\n    \r\n// When a click event occurs on a feature in the csvData layer, open a popup at the\r\n// location of the feature, with description HTML from its properties.            \r\n                map.on('click', 'resultsAnswerThreeIdentities', function(e) {\r\n                var coordinates = e.features[0].geometry.coordinates.slice();\r\n\r\n                // set popup text\r\n                var description =\r\n                `<h4>` +\r\n                e.features[0].properties.Country +\r\n                `</h4> \r\n                <ul>\r\n                  <li>A: Συνολικά ` + e.features[0].properties.Answer_A + ` άνθρωποι</li>\r\n                  <li>B: Συνολικά ` + e.features[0].properties.Answer_B + ` άνθρωποι</li>\r\n                  <li>C: Συνολικά ` + e.features[0].properties.Answer_C + ` άνθρωποι</li>\r\n                  <li>D: Συνολικά ` + e.features[0].properties.Answer_D + ` άνθρωποι</li>\r\n                  <li>E: Συνολικά ` + e.features[0].properties.Answer_E + ` άνθρωποι</li>\r\n                  <li>E: Συνολικά ` + e.features[0].properties.Answer_F + ` άνθρωποι</li>\r\n                </ul>` \r\n\r\n               //add Popup to map\r\n                  new mapboxgl.Popup()\r\n                    .setLngLat(coordinates)\r\n                    .setHTML(description)\r\n                    .addTo(map);\r\n                });\r\n                \r\n                // Change the cursor to a pointer when the mouse is over the places layer.\r\n                map.on('mouseenter', 'resultsAnswerThreeIdentities', function() {\r\n                  map.getCanvas().style.cursor = 'pointer';\r\n                });\r\n                \r\n                // Change it back to a pointer when it leaves.\r\n                map.on('mouseleave', 'places', function() {\r\n                  map.getCanvas().style.cursor = '';\r\n                });\r\n                \r\n        })\r\n  })\r\n\r\n    return (\r\n    <React.Fragment>\r\n        <div>\r\n            <div ref={mapContainer} className=\"map-container\" />\r\n        </div>\r\n        <div className=\"exh_map_result_content\">\r\n        <h2>Ερώτηση 2:</h2>\r\n            <h3>\r\n            Υπάρχουν προϊόντα χειροτεχνίας που δεν μπορούν ποτέ να κατασκευαστούν από μηχανή; Εσείς τι πιστεύετε;\r\n            </h3> \r\n            <div className=\"exh_map_quest_result_green\"><span>Α</span><p>\r\n            Όχι. Σε παλαιότερες εποχές οι άνθρωποι συνήθιζαν να πιστεύουν ότι το ανθρώπινο μυαλό δεν θα νικηθεί ποτέ από μια μηχανή. Στο σκάκι για παράδειγμα. Κανείς δεν μιλάει πια γι' αυτό. Το ίδιο θα συμβεί και με το τα χειροποίητα προϊόντα.\r\n              </p></div>\r\n            <div className=\"exh_map_quest_result_green\"><span>Β</span><p>\r\n            Ναι. Ένα χειροποίητο προϊόν είναι πάντα μοναδικό. Αλλά η μηχανική κατασκευή δεν προσφέρει ποτέ μοναδικά προϊόντα. Είναι πάντα το ένα σαν το άλλο.\r\n              </p></div>\r\n            <div className=\"exh_map_quest_result_green\"><span>Γ</span><p>\r\n            Ναι. Επειδή υπάρχουν επίπεδα ποιότητας που είναι ανέφικτα για τις μηχανές. Παράδειγμα: το χειροποίητο επιστόμιο ενός σαξοφώνου. Απλά κανένα μηχανοποιημένο επιστόμιο δεν μπορεί να φτάσει ποιότητα ήχου ενός τέτοιου επιστόμιου.\r\n              </p></div>\r\n            <div className=\"exh_map_quest_result_green\"><span>Δ</span><p>\r\n            Νομίζω ότι οι διαφορές θα είναι τόσο μικρές που κανείς δεν θα τις παρατηρεί πια.\r\n              </p></div>\r\n            <div className=\"exh_map_quest_result_green\"><span>Ε</span><p>\r\n            Τα χειροποίητα προϊόντα απαιτούν πνεύμα, τα μηχανικά προϊόντα μόνο ενέργεια. Στο ενδιάμεσο υπάρχει ένα ανυπέρβλητο χάσμα.\r\n              </p></div>\r\n              <div className=\"exh_map_quest_result_green\"><span>Ζ</span><p>\r\n              Ίσως τα μηχανικά προϊόντα να μην είναι πραγματικά ποτέ τόσο καλά όσο τα χειροποίητα. Αλλά σε ποσότητα είναι καλύτερα.\r\n              </p></div>\r\n          </div>\r\n\r\n    </React.Fragment>\r\n    );          \r\n}\r\n\r\nexport default MapQThree\r\n","import React, {Component} from \"react\";\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; \r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport creds from '../questionsIdentities/cred/myjson.json'\r\nimport {GoogleSpreadsheet} from \"google-spreadsheet\"\r\nimport { Button } from \"react-bootstrap\"\r\n\r\nconst MapQFour = () => {\r\n  mapboxgl.accessToken = \"pk.eyJ1Ijoia2lhLXoiLCJhIjoiY2xkZzRnZjRnMHRvazN2bzZ0cnh4OWtzeSJ9.COmQgzmRsKnMZKw77WDF6w\"\r\n  const doc = new GoogleSpreadsheet(creds.sheet_id)\r\n  const [finalGeoJsonFour, setfinalGeoJsonFour] = useState([]);\r\n\r\n        const [AllRowsFour, setAllRowsFour] = useState([]);\r\n        useEffect( () => { \r\n          async function fetchData() {\r\n                await doc.useServiceAccountAuth(creds);\r\n                await doc.loadInfo();      \r\n                await doc.getInfo();\r\n                const sheetFour = doc.sheetsByIndex[11];\r\n                const rowsFour = await sheetFour.getRows();\r\n                const AllRowsFour = rowsFour.map((GoogleSpreadsheetRow) => GoogleSpreadsheetRow._rawData);\r\n            //  console.log(AllRows) \r\n                setAllRowsFour(AllRowsFour)\r\n\r\n                const sortingRowsFour = AllRowsFour.map(({\r\n                  [0]: exact_match,\t[1]: longitude, [2]: latitude, [3]: Country,\r\n                  [4]: Ans4a,\t[5]: Ans4b,\t[6]: \tAns4c,\t[7]: \tAns4d,\r\n                  [8]: Ans4aFin,\t[9]: Ans4bFin,\t[10]: Ans4cFin,\t[11]: Ans4dFin\r\n                }) => \r\n                ({\r\n                  exact_match,\tlongitude, latitude, Country,\r\n                  Ans4a,\tAns4b,\tAns4c,\tAns4d,\t\r\n                  Ans4aFin,\tAns4bFin,\tAns4cFin,\tAns4dFin\r\n                  }))\r\n            //  console.log(sortingRows)\r\n\r\n            const hasAnswersFour = sortingRowsFour.filter((res) => res.Ans4aFin !== \"no answers\");\r\n            // console.log(hasAnswers)\r\n           \r\n            const MyGeoJsonFour = hasAnswersFour.map(row => {\r\n              return {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    \"Country\": row.Country,\r\n                    \"Answer_A\": row.Ans4aFin,\r\n                    \"Answer_B\": row.Ans4bFin,\r\n                    \"Answer_C\": row.Ans4cFin,\r\n                    \"Answer_D\": row.Ans4dFin,\r\n                },\r\n                \"geometry\": {\r\n                  \"coordinates\": [Number(row.longitude), Number(row.latitude)],\r\n                  \"type\": \"Point\",\r\n                },\r\n              }\r\n            })      \r\n            \r\n            setfinalGeoJsonFour(MyGeoJsonFour)\r\n\r\n        }\r\n        fetchData();\r\n    //    console.log(finalGeoJson)\r\n      }, []);\r\n\r\n      \r\n        const mapContainer = useRef(null);\r\n        useEffect(() => {\r\n            const map = new mapboxgl.Map({\r\n              container: mapContainer.current,\r\n              style: 'mapbox://styles/mapbox/light-v11',\r\n              center: [33.362, 35.173],\r\n              zoom: 5.15,\r\n              projection: 'naturalEarth',\r\n            });\r\n    \r\n            map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\r\n            \r\n            const GeoJsonCollFour = {\r\n                \"type\": \"FeatureCollection\",\r\n                \"features\": \r\n                    finalGeoJsonFour\r\n              };\r\n                // This GeoJson is valid\r\n                // console.log(JSON.stringify(GeoJsonColl))            \r\n     \r\n        map.on('load', () => {\r\n\r\n        map.addLayer({\r\n                id: 'resultsAnswerFourIdentities',\r\n                type: 'circle',\r\n                source: {\r\n                  type: 'geojson',\r\n                  data: GeoJsonCollFour\r\n                },\r\n                paint: {\r\n               'circle-color': '#526d9d',\r\n               'circle-stroke-width': 1,\r\n               'circle-stroke-color': '#526d9d',\r\n               'circle-opacity': 0.5,\r\n               'circle-radius': {\r\n                property: 'Answer_A',\r\n                // think how to make them more proportional to our responses\r\n                stops: [\r\n                  [0, 0],\r\n                  [1, 5],\r\n                  [5, 20],\r\n                ]\r\n              }\r\n                }\r\n            })\r\n    \r\n// When a click event occurs on a feature in the csvData layer, open a popup at the\r\n// location of the feature, with description HTML from its properties.            \r\n                map.on('click', 'resultsAnswerFourIdentities', function(e) {\r\n                var coordinates = e.features[0].geometry.coordinates.slice();\r\n\r\n              // set popup text\r\n              var description =\r\n              `<h4>` +\r\n              e.features[0].properties.Country +\r\n              `</h4> \r\n              <ul>\r\n                <li>A: Συνολικά ` + e.features[0].properties.Answer_A + ` άνθρωποι</li>\r\n                <li>B: Συνολικά ` + e.features[0].properties.Answer_B + ` άνθρωποι</li>\r\n                <li>C: Συνολικά ` + e.features[0].properties.Answer_C + ` άνθρωποι</li>\r\n                <li>D: Συνολικά ` + e.features[0].properties.Answer_D + ` άνθρωποι</li>\r\n              </ul>` \r\n\r\n               //add Popup to map\r\n                  new mapboxgl.Popup()\r\n                    .setLngLat(coordinates)\r\n                    .setHTML(description)\r\n                    .addTo(map);\r\n                });\r\n                \r\n                // Change the cursor to a pointer when the mouse is over the places layer.\r\n                map.on('mouseenter', 'resultsAnswerFourIdentities', function() {\r\n                  map.getCanvas().style.cursor = 'pointer';\r\n                });\r\n                \r\n                // Change it back to a pointer when it leaves.\r\n                map.on('mouseleave', 'places', function() {\r\n                  map.getCanvas().style.cursor = '';\r\n                });\r\n                \r\n        })\r\n  })\r\n\r\n    return (\r\n    <React.Fragment>\r\n        <div>\r\n            <div ref={mapContainer} className=\"map-container\" />\r\n        </div>\r\n        <div className=\"exh_map_result_content\">\r\n        <h2>Ερώτηση 3:</h2>\r\n            <h3>\r\n            Ορισμένοι λένε ότι όταν οι παραδοσιακές τέχνες εκλείψουν, θα χαθούν επίσης πολλές αναντικατάστατες γνώσεις και δεξιότητες. Είναι σωστό αυτό;\r\n            </h3> \r\n            <div className=\"exh_map_quest_result_green\"><span>Α</span><p>\r\n            Δεν ξέρω αν η γνώση θα χαθεί. Εξάλλου, υπάρχουν ακόμη βιβλία ή το Διαδίκτυο όπου η γνώση αποθηκεύεται και διατηρείται. Αλλά οι δεξιότητες χάνονται, αυτό είναι αλήθεια.\r\n            </p></div>\r\n            <div className=\"exh_map_quest_result_green\"><span>Β</span><p>\r\n            Αυτό είναι αλήθεια, αλλά είναι καλό πράγμα. Μερικές φορές οι χειρότερες γνώσεις απλά αντικαθίστανται με καλύτερες. Ποιος νοιάζεται για το πώς λειτουργεί ένας κινητήρας ντίζελ, όταν υπάρχουν αυτοκίνητα με καλύτερους κινητήρες, όπως τα ηλεκτρικά αυτοκίνητα;\r\n              </p></div>\r\n            <div className=\"exh_map_quest_result_green\"><span>Γ</span><p>\r\n            Χάνονται πολύ περισσότερα, δηλαδή η επαρκής και ολιστική αντιμετώπιση της φύσης και των προϊόντων της. Ο καθένας που παράγει τυρί από το γάλα των δικών του αγελάδων είναι ενταγμένος στην φύση με εντελώς διαφορετικό τρόπο από τον πελάτη στο σούπερ μάρκετ, ο οποίος τείνει να να υποψιάζεται μια χημική διαδικασία πίσω από την παραγωγή του τυριού.\r\n              </p></div>\r\n            <div className=\"exh_map_quest_result_green\"><span>Δ</span><p>\r\n            Πάνω απ' όλα, χάνονται τα συμφραζόμενα του νοήματος. Το να κάνει κανείς χειρωνακτική εργασία σημαίνει επίσης ότι βιώνει την εμπειρία του, τη δική του δραστηριότητα στην κατασκευή προϊόντων ως ουσιαστική. Ο χειρισμός μιας μηχανής δεν παρέχει ένα τέτοιο νόημα.\r\n              </p></div>\r\n          </div>\r\n\r\n    </React.Fragment>\r\n\r\n    );          \r\n}\r\n\r\nexport default MapQFour\r\n","import React, {useState} from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport { Container, Badge, Button, Row, Col } from \"react-bootstrap\"\r\nimport BaseExhibitionConflictDE from \"../../../../../components/static/BaseExhibitionConflicts/inGalleryIndex\"\r\nimport MapQOne from \"../../../../../components/shared/ExhibitionQuestions/inGalleryCraftmanship/Q1_mapCraftmanshipCY\"\r\nimport MapQTwo from \"../../../../../components/shared/ExhibitionQuestions/inGalleryCraftmanship/Q2_mapCraftmanshipCY\"\r\nimport MapQThree from \"../../../../../components/shared/ExhibitionQuestions/inGalleryCraftmanship/Q3_mapCraftmanshipCY\"\r\nimport MapQFour from \"../../../../../components/shared/ExhibitionQuestions/inGalleryCraftmanship/Q4_mapCraftmanshipCY\"\r\n\r\nconst CraftmanshipAnswersGR: React.FC = () => {\r\n\r\n  const [MapQOneVisible, setMapQOneVisible] = useState(false);\r\n  const [MapQTwoVisible, setMapQTwoVisible] = useState(false);\r\n  const [MapQThreeVisible, setMapQThreeVisible] = useState(false);\r\n  const [MapQFourVisible, setMapQFourVisible] = useState(false);\r\n  const [activeButton, setActiveButton] = useState<string | undefined>(undefined);\r\n\r\n  const handleMapQOne = () => {\r\n    setMapQOneVisible((isVisible) => !isVisible);\r\n    setMapQTwoVisible(false);\r\n    setMapQThreeVisible(false);\r\n    setMapQFourVisible(false);\r\n    setActiveButton(\"Question 1\");\r\n  };\r\n\r\n  const handleMapQTwo = () => {\r\n    setMapQTwoVisible((isVisible) => !isVisible);\r\n    setMapQOneVisible(false);\r\n    setMapQThreeVisible(false);\r\n    setMapQFourVisible(false);\r\n    setActiveButton(\"Question 2\");\r\n  };\r\n\r\n  const handleMapQThree = () => {\r\n    setMapQThreeVisible((isVisible) => !isVisible);\r\n    setMapQOneVisible(false);\r\n    setMapQTwoVisible(false);\r\n    setMapQFourVisible(false);\r\n    setActiveButton(\"Question 3\");\r\n  };\r\n\r\n  const handleMapQFour = () => {\r\n    setMapQFourVisible((isVisible) => !isVisible);\r\n    setMapQOneVisible(false);\r\n    setMapQTwoVisible(false);\r\n    setMapQThreeVisible(false);\r\n    setActiveButton(\"Question 4\");\r\n  };\r\n\r\n\r\nreturn (\r\n<BaseExhibitionConflictDE>\r\n<div className=\"exh_container_inner_green exh_map_container_green mt-5\">\r\n  <div className=\"d-grid gap-2\">\r\n  <Badge className=\"badgeCraftmanship rounded-pill\"><h1>Αποτελέσματα</h1></Badge>\r\n  </div>\r\n  <div className=\"craftmanshipQuestions exh_question_intro_text\">\r\n          <div className=\"d-flex justify-content-end\">\r\n            <Badge pill bg=\"success\"><h2>\r\n            <Link to=\"/exhibitions/craftmanship/inGalleryEN/CraftmanshipExhibitionMapEN\" style={{ color: \"white\" }} className=\"text-decoration-none\">English</Link></h2></Badge>\r\n          </div>\r\n          </div>\r\n\r\n<Row>\r\n<Col lg={3} md={6} sm={12}><Button className={`exh_map_btn ${activeButton === \"Question 1\" ? \"active\" : \"\"}`} onClick={handleMapQOne}>Ερώτηση 1</Button></Col>\r\n{/* <Col lg={3} md={6} sm={12}><Button className={`exh_map_btn ${activeButton === \"Question 2\" ? \"active\" : \"\"}`} onClick={handleMapQTwo}>Ερώτηση 2</Button></Col> */}\r\n<Col lg={3} md={6} sm={12}><Button className={`exh_map_btn ${activeButton === \"Question 3\" ? \"active\" : \"\"}`} onClick={handleMapQThree}>Ερώτηση 2</Button></Col> \r\n<Col lg={3} md={6} sm={12}><Button className={`exh_map_btn ${activeButton === \"Question 4\" ? \"active\" : \"\"}`} onClick={handleMapQFour}>Ερώτηση 3</Button></Col>\r\n</Row>\r\n\r\n  <div className=\"exh_btn_content\">\r\n      {MapQOneVisible && <h1>Ερώτηση 1</h1> && <MapQOne></MapQOne>}\r\n    {/*  {MapQTwoVisible && <h1>Ερώτηση 2</h1> && <MapQTwo></MapQTwo>} */}\r\n      {MapQThreeVisible && <h1>Ερώτηση 2</h1> && <MapQThree></MapQThree>} \r\n      {MapQFourVisible && <h1>Ερώτηση 3</h1> && <MapQFour></MapQFour>}\r\n  </div>\r\n\r\n  <div className=\"exh_submit_button\">\r\n      <div className=\"exh_arrow_container\">\r\n      <img className=\"exh_green_arrow\" src=\"/images/exhibition_assets/arrow_green.svg\" alt=\"\"></img>\r\n  </div>\r\n      <Button className=\"exh_submit_btn\" href=\"/exhibitions/craftmanship/inGalleryCY/4thQuestionCraftmanshipCY\">\r\n        <h1 style={{ color: \"white\" }}>Έχετει  ήδη απαντήσει την ερώτηση 3;</h1>\r\n      </Button>\r\n  </div> \r\n\r\n  </div>\r\n</BaseExhibitionConflictDE>\r\n    )\r\n  }\r\n\r\nexport default CraftmanshipAnswersGR"],"sourceRoot":""}