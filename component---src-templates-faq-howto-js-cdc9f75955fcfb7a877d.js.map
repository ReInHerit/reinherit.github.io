{"version":3,"sources":["webpack://reinherit-digital-hub/./src/components/static/BaseLayout/index.tsx","webpack://reinherit-digital-hub/./src/components/static/MainHeading/index.tsx","webpack://reinherit-digital-hub/./src/templates/faqHowto.js"],"names":["children","className","style","marginTop","fluid","props","to","color","breadCrumb","length","map","bread","value","label","subHeading","subText","Template","data","markdownRemark","pageContext","frontmatter","html","type","title","id","dangerouslySetInnerHTML","__html"],"mappings":"6MAqCA,IAjBmB,SAAC,GAAwB,IAAtBA,EAAsB,EAAtBA,SACpB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,MACA,gBAAC,IAAD,MACA,gBAAC,IAAD,MAEA,gBAAC,IAAD,CACEC,UAAU,sCACVC,MAAO,CAACC,UAAU,QAClBC,OAAK,GACLJ,GACF,gBAAC,IAAD,S,yDCgBN,IAhCqC,SAAAK,GAAK,OACxC,gCACE,uBAAKJ,UAAU,QACb,gBAAC,KAAD,CAAMK,GAAG,IAAIL,UAAU,wBACrB,qBAAGC,MAAO,CAAEK,MAAO,sBAAnB,gBAEDF,EAAMG,YACLH,EAAMG,WAAWC,OAAS,GAC1BJ,EAAMG,WAAWE,KAAI,SAAAC,GAAK,OACxB,gCACG,IADH,IAEI,IACF,gBAAC,KAAD,CAAMV,UAAU,uBAAuBK,GAAIK,EAAMC,OAC9CD,EAAME,YAKjB,uBAAKZ,UAAU,2CACb,2BACE,oCAAIA,UAAU,MAASI,GACpBA,EAAML,UAIRK,EAAMS,YAAc,sBAAIb,UAAU,MAAMI,EAAMS,YAC9CT,EAAMU,SAAW,yBAAIV,EAAMU,c,yHCnCrB,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,KAGQC,GADP,EADDC,YAE2BF,EAAnBC,gBACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KAErB,OACE,gBAAC,IAAD,KACE,uBAAKpB,UAAU,uBACb,uBAAKA,UAAU,aACb,gBAAC,IAAD,CACEa,WACE,+DAC+B,IAC7B,gBAAC,KAAD,CACEb,UAAU,oCACVK,GAAE,QAAUc,EAAYE,MAEvBF,EAAYE,MACP,IAPV,YAWFd,WAAY,CACV,CAACK,MAAM,aAAcD,MAAM,KAC3B,CAACC,MAAM,MAAOD,MAAM,OAfxB,iBAoBA,2BACA,sBAAIX,UAAU,MAAMmB,EAAYG,OAChC,uBACEC,GAAG,qBACHvB,UAAU,oBACVwB,wBAAyB,CAAEC,OAAQL","file":"component---src-templates-faq-howto-js-cdc9f75955fcfb7a877d.js","sourcesContent":["/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"../../../styles/index.css\"\r\nimport React from \"react\"\r\nimport Header from \"../Header\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport ReinNavBar from \"../Navbar\"\r\nimport Footer from \"../Footer\"\r\nimport Base from \"../Base\"\r\nimport Head from \"../Head\"\r\n\r\ninterface Props {\r\n  children?: any\r\n}\r\n\r\nconst BaseLayout = ({ children }: Props) => {\r\n  return (\r\n    <Base>\r\n      <Head></Head>\r\n      <Header />\r\n      <ReinNavBar/>\r\n      {/* <QuickAccessBar/> */}\r\n      <Container\r\n        className=\"rein_main_container pt-sm-4 pt-md-4\"\r\n        style={{marginTop:\"10vh\"}}\r\n        fluid\r\n      >{children}</Container>\r\n      <Footer />\r\n    </Base>\r\n  )\r\n}\r\n\r\nexport default BaseLayout\r\n","import { faQuestion } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Link } from \"gatsby\"\r\nimport React from \"react\"\r\n\r\ninterface Props {\r\n  children: string\r\n  subHeading?: string | JSX.Element\r\n  subText?: string\r\n  breadCrumb?: {\r\n    label: string\r\n    value: string\r\n  }[]\r\n  [property: string]: any\r\n}\r\n\r\nconst MainHeading: React.FC<Props> = props => (\r\n  <>\r\n    <div className=\"mb-2\">\r\n      <Link to=\"/\" className=\"text-decoration-none\">\r\n        <b style={{ color: \"rgb(46, 172, 200)\" }}>Digital-hub</b>\r\n      </Link>\r\n      {props.breadCrumb &&\r\n        props.breadCrumb.length > 0 &&\r\n        props.breadCrumb.map(bread => (\r\n          <>\r\n            {\" \"}\r\n            /{\" \"}\r\n            <Link className=\"text-decoration-none\" to={bread.value}>\r\n              {bread.label}\r\n            </Link>\r\n          </>\r\n        ))}\r\n    </div>\r\n    <div className=\"p-3 p-md-4 shadow rounded mb-3 bg-white\">\r\n      <div>\r\n        <h1 className=\"h2\" {...props}>\r\n          {props.children}\r\n        </h1>\r\n\r\n        {/* <hr></hr> */}\r\n        {props.subHeading && <h2 className=\"h5\">{props.subHeading}</h2>}\r\n        {props.subText && <p>{props.subText}</p>}\r\n      </div>\r\n    </div>\r\n  </>\r\n)\r\n\r\nexport default MainHeading\r\n","import { graphql, Link } from \"gatsby\"\r\nimport React from \"react\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport SideMainLayout from \"../components/shared/Layout/SideMainLayout\"\r\nimport BaseLayout from \"../components/static/BaseLayout\"\r\nimport MainHeading from \"../components/static/MainHeading\"\r\n\r\nexport default function Template({\r\n  data, // this prop will be injected by the GraphQL query below.\r\n  pageContext, // pagecontext provided by gatsby\r\n}) {\r\n  const { markdownRemark } = data // data.markdownRemark holds your post data\r\n  const { frontmatter, html } = markdownRemark\r\n\r\n  return (\r\n    <BaseLayout>\r\n      <div className=\"blog-post-container\">\r\n        <div className=\"blog-post\">\r\n          <MainHeading\r\n            subHeading={\r\n              <>\r\n                This resource is part of the{\" \"}\r\n                <Link\r\n                  className=\"text-primary text-decoration-none\"\r\n                  to={`/doc/${frontmatter.type}`}\r\n                >\r\n                  {frontmatter.type}\r\n                </Link>{\" \"}\r\n                section.\r\n              </>\r\n            }\r\n            breadCrumb={[\r\n              {label:\"FAQ-How-to\", value:\"/\"},\r\n              {label:\"...\", value:\"/\"},\r\n            ]}\r\n          >\r\n            Documentation\r\n          </MainHeading>\r\n          <br />\r\n          <h2 className=\"h5\">{frontmatter.title}</h2>\r\n          <div\r\n            id=\"markdown_container\"\r\n            className=\"blog-post-content\"\r\n            dangerouslySetInnerHTML={{ __html: html }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </BaseLayout>\r\n  )\r\n}\r\nexport const pageQuery = graphql`\r\n  query($id: String!) {\r\n    markdownRemark(frontmatter: { pageId: { eq: $id } }) {\r\n      html\r\n      frontmatter {\r\n        date\r\n        title\r\n        type\r\n        question\r\n        answer\r\n      }\r\n      id\r\n      excerpt\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}