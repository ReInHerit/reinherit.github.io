{"version":3,"sources":["webpack://reinherit-digital-hub/./src/components/shared/ExhibitionQuestions/RestartModal.tsx","webpack://reinherit-digital-hub/./src/components/shared/ExhibitionQuestions/inGalleryConflicts/B_questionConflictDE.tsx","webpack://reinherit-digital-hub/./src/pages/exhibitions/conflicts/inGalleryDE/2ndQuestionConflictDE/index.tsx","webpack://reinherit-digital-hub/./node_modules/warning/warning.js"],"names":["useState","show","setShow","handleClose","React","setTimeout","size","aria-labelledby","centered","onHide","closeButton","variant","onClick","href","answerTwoConflictDE","setAnswerTwoConflictDE","doc","GoogleSpreadsheet","creds","appendSpreadsheet","useServiceAccountAuth","loadInfo","sheetB","sheetsById","valueB","JSON","stringify","addRow","country","questionTwo","resultB","console","error","onOptionChange","e","target","value","handleSubmitB","preventDefault","window","location","className","Form","onSubmit","map","possAnswTwoConflictDE","index","type","name","label","id","key","checked","onChange","src","alt","Button","disabled","style","color","maxWidth","margin","Badge","RestartModal","warning","module","exports"],"mappings":"0KA2CA,IAvCA,WAAwB,OACEA,eAAS,GAA1BC,EADe,KACTC,EADS,KAEhBC,EAAc,kBAAMD,GAAQ,IAQlC,OANAE,aAAgB,WACdC,YAAW,WACPH,GAAQ,KACT,QACJ,CAACA,IAGA,gCACE,gBAAC,IAAD,CACCI,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,EACRP,KAAMA,EACNQ,OAAQN,GAEP,gBAAC,WAAD,CAAcO,aAAW,GACzB,gBAAC,UAAD,kBAEA,gBAAC,SAAD,0EAEA,gBAAC,WAAD,KACE,gBAAC,IAAD,CAAQC,QAAQ,YAAYC,QAAST,GAArC,aAGA,gBAAC,IAAD,CACAU,KAAK,6EACLF,QAAQ,WAFR,yB,6LCqDV,EAhF8B,WAAM,OAEsBX,gBAA/Cc,EAFyB,KAEJC,EAFI,KAK1BC,EAAM,IAAIC,oBAAkBC,YAG5BC,EAAiB,mCAAG,iHAEhBH,EAAII,sBAAsBF,GAFV,uBAGhBF,EAAIK,WAHY,cAIhBC,EAASN,EAAIO,WAAW,WAExBC,EAASC,KAAKC,UAAUZ,GANR,SAOAQ,EAAOK,OAAO,CAACC,QAXhB,YAW2CC,YAAaL,IAPvD,cAOhBM,EAPgB,yBAQfA,GARe,kCAWtBC,QAAQC,MAAM,UAAd,MAXsB,0DAAH,qDA4BjBC,EAAiB,SAAAC,GACnBnB,EAAuBmB,EAAEC,OAAOC,QAG9BC,EAAa,mCAAG,WAAOH,GAAP,wEAClBA,EAAEI,iBADgB,SAEZnB,IAFY,OAGlBoB,OAAOC,SAAS3B,KAAO,6EAHL,2CAAH,sDAMvB,OACA,gBAAC,WAAD,KAEA,sBAAI4B,UAAU,QAAd,qCAIQ,gBAACC,EAAA,EAAD,CAAMC,SAAUN,GAxBS,CACzB,+NACA,uKACA,mQACA,2KACA,iJAoB0BO,KAAI,SAACC,EAAuBC,GAAxB,OAC5B,gBAACJ,EAAA,QAAD,CACEK,KAAK,QAAQC,KAAK,gBAClBZ,MAAOS,EACPI,MAAOJ,EACPK,GAAE,UAAYJ,EACdK,IAAG,UAAYL,EACfM,QAASP,IAA0B/B,EACnCuC,SAAUpB,OAGV,uBAAKQ,UAAU,qBACX,uBAAKA,UAAU,uBACf,uBAAKA,UAAU,iBAAiBa,IAAI,2CAA2CC,IAAI,MAEnF,gBAACC,EAAA,EAAD,CAAQf,UAAU,iBAClBM,KAAK,SAASU,UAAW3C,EAAqBF,QAASyB,GACvD,sBAAIqB,MAAO,CAAEC,MAAO,UAApB,sB,WC7ChB,EAzBkC,WAElC,OACI,gBAAC,IAAD,KACC,uBAAKlB,UAAU,2BAA2BiB,MAAO,CAACE,SAAU,MAAOC,OAAQ,UAGtE,qBAAGX,GAAG,qBACN,gBAACY,EAAA,EAAD,CAAOrB,UAAU,+BAA8B,mDAEzD,2BACE,gBAACsB,EAAA,EAAD,OAIM,uBAAKtB,UAAU,oBACb,sCACE,gBAAC,EAAD,W,+BCPZ,IAEIuB,EAAU,aA2CdC,EAAOC,QAAUF","file":"component---src-pages-exhibitions-conflicts-in-gallery-de-2nd-question-conflict-de-index-tsx-659fc3fc70ec76ed6fb4.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nfunction RestartModal() {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n\r\n  React.useEffect(() => {\r\n    setTimeout(() => {\r\n        setShow(true)\r\n    }, 120000)\r\n}, [setShow])\r\n  \r\n  return (\r\n    <>\r\n      <Modal \r\n       size=\"lg\"\r\n       aria-labelledby=\"contained-modal-title-vcenter\"\r\n       centered\r\n       show={show} \r\n       onHide={handleClose}>\r\n       \r\n        <Modal.Header closeButton>\r\n        <Modal.Title>Restart?</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        Möchten Sie noch einmal bei der ersten Frage (von drei) beginnen?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n          Schließen\r\n          </Button>\r\n          <Button \r\n          href=\"/exhibitions/conflicts/inGalleryDE/1stQuestionConflictDE/#Question1ConflDE\"\r\n          variant=\"primary\">\r\n          Los zum Frage 1!\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default RestartModal;\r\n\r\n\r\n{/*\r\n  React.useEffect(() => {\r\n    setTimeout(() => {\r\n        setShow(true)\r\n    }, 5000)\r\n}, [setShow])\r\n*/}","import React, {useState, useEffect} from \"react\"\r\nimport { Button, Form } from \"react-bootstrap\"\r\nimport {GoogleSpreadsheet} from \"google-spreadsheet\"\r\nimport creds from \"../questionsConflict/cred/myjson.json\"\r\n\r\nconst QuestionTwoConflictDE = () => {\r\n\r\n    const [answerTwoConflictDE, setAnswerTwoConflictDE] = useState() \r\n\r\n    const currentCountryDE = \"\\\"Austria\\\"\"\r\n    const doc = new GoogleSpreadsheet(creds.sheet_id)\r\n\r\n\r\n    const appendSpreadsheet = async () => {\r\n    try {\r\n        await doc.useServiceAccountAuth(creds);\r\n        await doc.loadInfo();\r\n        const sheetB = doc.sheetsById[713196235];\r\n\r\n        const valueB = JSON.stringify(answerTwoConflictDE)\r\n        const resultB = await sheetB.addRow({country: currentCountryDE, questionTwo: valueB});\r\n        return resultB;\r\n\r\n    } catch (e) {\r\n        console.error(\"Error: \", e);\r\n        }\r\n    }\r\n\r\n //   useEffect(() => {\r\n //       localStorage.setItem('answerTwoConflict', JSON.stringify(answerTwoConflict));\r\n //     }, [answerTwoConflict]);\r\n    \r\n\r\n// these set the answer, once clicked, within the Form - the recorded value is stored as \"answerOne\"\r\n    const AnswersTwoConflictDE = [\r\n        \"Nein. Widerstand kann etwas sehr Gutes sein und wird manchmal sogar zur Pflicht. Oftmals muss man sogar das verteidigen, was einem wichtig ist. Dann habe ich nicht nur das Recht, sondern auch die Pflicht, mich zu wehren.\",\r\n        \"Ich weiß nicht, ob es böse ist, wenn man sich wehrt. Aber ich für meinen Teil verabscheue jede Form der Gewalt. Deshalb würde ich mich im Zweifelsfall nicht wehren.\",\r\n        \"Wer meint, es sei böse, sich beispielsweise für seine Freiheit einzusetzen, der setzt Unterdrücker und Opfer moralisch gleich. Das aber ist falsch. Ein Täter steht moralisch niemals auf derselben Stufe wie ein Opfer. Also ist es nicht böse, sich zu wehren.\",\r\n        \"Wer sich wehrt, der erzeugt mit seiner Gewalt Gegengewalt. Das führt zu einer Gewaltspirale. Deshalb ist es vielleicht nicht unbedingt böse sich zu wehren, aber unklug.\",\r\n        \"Stellen Sie sich vor, ihr Elternhaus wird plötzlich unrechtmäßig besetzt. Was sollte Sie daran hindern, sich dagegen zu wehren? Nichts. Oder?\"\r\n       ]\r\n    const onOptionChange = e => {\r\n        setAnswerTwoConflictDE(e.target.value) \r\n    }\r\n\r\n    const handleSubmitB = async (e) => {\r\n        e.preventDefault();\r\n        await appendSpreadsheet();\r\n        window.location.href = \"/exhibitions/conflicts/inGalleryDE/3rdQuestionConflictDE/#Question3ConflDE\";\r\n      };\r\n\r\nreturn (\r\n<React.Fragment>\r\n\r\n<h1 className=\"mt-5\">\r\nIst es böse, wenn man sich wehrt? \r\n</h1>\r\n\r\n        <Form onSubmit={handleSubmitB} >\r\n            {AnswersTwoConflictDE.map((possAnswTwoConflictDE, index) => (\r\n          <Form.Check\r\n            type=\"radio\" name=\"exh_questions\"\r\n            value={possAnswTwoConflictDE}\r\n            label={possAnswTwoConflictDE}\r\n            id={`answer-${index}`}\r\n            key={`answer-${index}`}\r\n            checked={possAnswTwoConflictDE === answerTwoConflictDE }\r\n            onChange={onOptionChange}\r\n            ></Form.Check>\r\n        ))}\r\n            <div className=\"exh_submit_button\">\r\n                <div className=\"exh_arrow_container\">\r\n                <img className=\"exh_blue_arrow\" src=\"/images/exhibition_assets/arrow_blue.svg\" alt=\"\"></img>\r\n            </div>\r\n                <Button className=\"exh_submit_btn\" \r\n                type=\"submit\" disabled={!answerTwoConflictDE} onClick={handleSubmitB} >\r\n                <h1 style={{ color: \"white\" }}>Nächste Frage</h1>\r\n                </Button>\r\n            </div> \r\n        </Form>\r\n\r\n</React.Fragment>\r\n    )\r\n  }\r\n  \r\nexport default QuestionTwoConflictDE\r\n\r\n","import React from \"react\"\r\nimport { Container, Badge } from \"react-bootstrap\"\r\nimport BaseExhibitionConflictDE from \"../../../../../components/static/BaseExhibitionConflicts/inGalleryIndex\"\r\nimport QuestionTwoConflictDE from \"../../../../../components/shared/ExhibitionQuestions/inGalleryConflicts/B_questionConflictDE\"\r\nimport RestartModal from \"../../../../../components/shared/ExhibitionQuestions/RestartModal\"\r\n\r\nconst questionTwoConflictPageDE = () => {\r\n\r\nreturn (\r\n    <BaseExhibitionConflictDE>\r\n     <div className=\"exh_container_inner mt-5\" style={{maxWidth: \"75%\", margin: \"12.5%\"}}>\r\n\r\n{/*Intro text*/}\r\n          <a id=\"Question2ConflDE\"></a>\r\n          <Badge className=\"badgeConflicts rounded-pill\"><h1>ReThinking CONFLICTS</h1></Badge>\r\n\r\n<div>\r\n  <RestartModal></RestartModal>\r\n</div>\r\n\r\n{/*Actual Form answers - radio checks; followed by button to next page*/}\r\n        <div className=\"conflictsAnswers\">\r\n          <h2>Frage: 2</h2>\r\n            <QuestionTwoConflictDE></QuestionTwoConflictDE>\r\n        </div>\r\n        \r\n     </div>\r\n    </BaseExhibitionConflictDE>\r\n    )\r\n  }\r\n\r\nexport default questionTwoConflictPageDE;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"sourceRoot":""}