{"version":3,"sources":["webpack://reinherit-digital-hub/./src/components/shared/FAQFeed.tsx","webpack://reinherit-digital-hub/./src/pages/doc/faq.tsx"],"names":["faqData","useStaticQuery","FAQQuery","Accordion","allMarkdownRemark","edges","sort","map","edge","eventKey","node","frontmatter","pageId","question","answer","BaseLayout","MainHeading","subHeading","subText","Container","fluid","className","SideBarsLayout","left","DocNav"],"mappings":"4NAuBA,EAf0B,WACxB,IAAMA,GAAmCC,QAAeC,GAExD,OACE,gBAACC,EAAA,EAAD,KACGH,EAAQI,kBAAkBC,MAAMC,OAAOC,KAAI,SAAAC,GAAI,OAC9C,gBAACL,EAAA,OAAD,CAAgBM,SAAUD,EAAKE,KAAKC,YAAYC,QAC9C,gBAACT,EAAA,SAAD,KAAmBK,EAAKE,KAAKC,YAAYE,UACzC,gBAACV,EAAA,OAAD,KAAiBK,EAAKE,KAAKC,YAAYG,cAyC3CZ,EAAW,a,uCCnCjB,EAdgB,WACd,OACE,gBAACa,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAaC,WAAW,6DAA6DC,QAAQ,kGAA7F,iBACA,gBAACC,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,0CAC3B,gBAACC,EAAA,EAAD,CAAgBC,KAAM,gBAACC,EAAA,EAAD,OACpB,iCACA,gBAAC,EAAD","file":"component---src-pages-doc-faq-tsx-496a9aac0f01b66b250c.js","sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\"\r\nimport React from \"react\"\r\nimport { Accordion } from \"react-bootstrap\"\r\n\r\n/**\r\n * Renders overview over FAQ collection.\r\n * @returns\r\n */\r\nconst FAQFeed: React.FC = () => {\r\n  const faqData: FAQGraphqlResponse.Data = useStaticQuery(FAQQuery)\r\n\r\n  return (\r\n    <Accordion>\r\n      {faqData.allMarkdownRemark.edges.sort().map(edge => (\r\n        <Accordion.Item eventKey={edge.node.frontmatter.pageId}>\r\n          <Accordion.Header>{edge.node.frontmatter.question}</Accordion.Header>\r\n          <Accordion.Body>{edge.node.frontmatter.answer}</Accordion.Body>\r\n        </Accordion.Item>\r\n      ))}\r\n    </Accordion>\r\n  )\r\n}\r\n\r\nexport default FAQFeed\r\n\r\ndeclare module FAQGraphqlResponse {\r\n  export interface Frontmatter {\r\n    question: string\r\n    answer: string\r\n    target_audience: string[]\r\n    pageId: string\r\n  }\r\n\r\n  export interface Node {\r\n    frontmatter: Frontmatter\r\n  }\r\n\r\n  export interface Edge {\r\n    node: Node\r\n  }\r\n\r\n  export interface AllMarkdownRemark {\r\n    edges: Edge[]\r\n  }\r\n\r\n  export interface Data {\r\n    allMarkdownRemark: AllMarkdownRemark\r\n  }\r\n\r\n  export interface Extensions {}\r\n\r\n  export interface RootObject {\r\n    data: Data\r\n    extensions: Extensions\r\n  }\r\n}\r\n\r\nconst FAQQuery = graphql`\r\n  query FAQQuery {\r\n    allMarkdownRemark(\r\n      filter: { frontmatter: {}, fileAbsolutePath: { regex: \"/faq/\" } }\r\n      sort: { fields: frontmatter___question }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            question\r\n            answer\r\n            target_audience\r\n            pageId\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport FAQFeed from \"../../components/shared/FAQFeed\"\r\nimport SideBarsLayout from \"../../components/shared/Layout/SideBarsLayout\"\r\nimport BaseLayout from \"../../components/static/BaseLayout\"\r\nimport DocNav from \"../../components/static/DocNav\"\r\nimport MainHeading from \"../../components/static/MainHeading\"\r\n\r\nconst FAQPage = () => {\r\n  return (\r\n    <BaseLayout>\r\n      <MainHeading subHeading=\"Materials / manuals about the ReInHerit digital-hub itself\" subText=\"Here you'll find explainatory material, helpful texts and graphics for the digital-hub itself.\">Documentation</MainHeading>\r\n      <Container fluid className=\"bg-white p-md-4 p-sm-3 shadow border-0\">\r\n      <SideBarsLayout left={<DocNav />}>\r\n        <h2>FAQ</h2>\r\n        <FAQFeed></FAQFeed>\r\n      </SideBarsLayout>\r\n      </Container>\r\n    </BaseLayout>\r\n  )\r\n}\r\n\r\nexport default FAQPage\r\n"],"sourceRoot":""}