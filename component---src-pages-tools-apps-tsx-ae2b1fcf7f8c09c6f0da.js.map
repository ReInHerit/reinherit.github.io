{"version":3,"sources":["webpack://reinherit-digital-hub/./node_modules/react-bootstrap/esm/Badge.js","webpack://reinherit-digital-hub/./src/components/shared/Layout/SideMainLayout/index.tsx","webpack://reinherit-digital-hub/./src/components/shared/ToolAppsFeed/index.tsx","webpack://reinherit-digital-hub/./src/pages/tools/apps.tsx"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","Badge","_ref","ref","bsPrefix","bg","pill","text","className","_ref$as","as","Component","props","prefix","concat","displayName","defaultProps","side","lg","xxl","children","data","useStaticQuery","ToolsQuery","React","tags","setTags","toggleTag","toToggle","tagsCopied","includes","filtered","curTag","SideMainLayout","map","tag","onClick","color","sort","Form","type","checked","defaultChecked","label","value","ReinCardGrid","allMarkdownRemark","edges","edge","some","node","frontmatter","tool_type","ReinGridCard","pageId","body","excerpt","title","url","uid","footerContent","icon","faClock","scale","wordCount","words","faStamp","license","mainReference","style","href","faLink","thumbnail","Thumbnail","src","BaseLayout","pageTitle","MainHeading","subHeading","subText","breadCrumb","ToolAppsFeed"],"mappings":"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","file":"component---src-pages-tools-apps-tsx-ae2b1fcf7f8c09c6f0da.js","sourcesContent":["import _defineProperty from \"C:/Users/chiar/Desktop/reinheritHubOct22/digital-hub/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"C:/Users/chiar/Desktop/reinheritHubOct22/digital-hub/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      bg = _ref.bg,\n      pill = _ref.pill,\n      text = _ref.text,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutProperties(_ref, [\"bsPrefix\", \"bg\", \"pill\", \"text\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({\n    ref: ref\n  }, props), {}, {\n    className: classNames(className, prefix, pill && \"rounded-pill\", text && \"text-\".concat(text), bg && \"bg-\".concat(bg))\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import React from \"react\"\nimport { Col, Row } from \"react-bootstrap\"\n\ninterface Props {\n  side?: JSX.Element | JSX.Element[]\n  children?: JSX.Element | JSX.Element[]\n}\n\n/**\n * Handles left sidebar and right content layout. Checks responsive design.\n * @param props\n * @returns\n */\nconst SideMainLayout: React.FC<Props> = props => {\n  return (\n    <Row>\n      <Col>{props.side}</Col>\n      <Col lg={9} xxl={10}>\n        {props.children}\n      </Col>\n    </Row>\n  )\n}\n\nexport default SideMainLayout\n","import { faClock } from \"@fortawesome/free-regular-svg-icons\"\nimport { faStamp, faLink } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport { Badge, Form } from \"react-bootstrap\"\nimport SideMainLayout from \"../Layout/SideMainLayout\"\nimport ReinCardGrid from \"../ReinCardGrid\"\nimport ReinGridCard from \"../ReinCardGrid/ReinGridCard\"\nimport Thumbnail from \"../Thumbnail\"\n\n/**\n *\n * @returns\n */\nconst ToolkitFeed: React.FC = () => {\n  const data: ToolsQueryData.Data = useStaticQuery(ToolsQuery)\n\n  const [tags, setTags] = React.useState([])\n\n  const ALL_TAGS = [\n    \"Tag A\",\n    \"Tag B\",\n    \"Tag C\"\n  ]\n\n  const toggleTag = (toToggle: string) => {\n    let tagsCopied = [...tags]\n    if (tags.includes(toToggle)) {\n      let filtered = tagsCopied.filter(curTag => toToggle !== curTag)\n      setTags(() => filtered)\n    } else {\n      tagsCopied.push(toToggle)\n      setTags(() => tagsCopied)\n    }\n  }\n\n  return (\n    <SideMainLayout\n      side={\n        <div className=\"bg-white card p-3 mb-2 border-0 shadow\">\n          <p>Filter categories</p>\n          {tags.length !== 0\n          ? tags.map(tag => (\n              <Badge onClick={() => toggleTag(tag)} bg=\"white\" color=\"black\" text={\"black\" as \"white\"} className=\"me-1 btn border\">\n                {tag}\n              </Badge>\n            ))\n          : <Badge className=\"me-1 btn border\" bg=\"white\" color=\"black\" text={\"black\" as \"white\"}>\n          *\n        </Badge>}\n        <br></br>\n          {ALL_TAGS.sort().map(curTag => (\n            <Form.Check\n              type=\"checkbox\"\n              checked={tags.includes(curTag)}\n              defaultChecked={false}\n              key={curTag}\n              onClick={() => toggleTag(curTag)}\n              label={curTag}\n              value={curTag}\n            ></Form.Check>\n          ))}\n        </div>\n      }\n    >\n      <>\n        <ReinCardGrid>\n          {data.allMarkdownRemark.edges.map(edge => {\n            // filter only if no tags were selected\n            if (\n              tags.length !== 0 &&\n              !tags.some(curTag =>\n                {\n                  if(!edge.node.frontmatter.tool_type)return false;\n                  return edge.node.frontmatter.tool_type.includes(curTag)\n                }\n              )\n            ) {\n              return\n            } else {\n              return (\n                <ReinGridCard\n                  key={edge.node.frontmatter.pageId}\n                  body={edge.node.excerpt}\n                  title={edge.node.frontmatter.title}\n                  url={`/tools/apps/${\n                    edge.node.frontmatter.pageId\n                  }`}\n                  uid={edge.node.frontmatter.pageId}\n                  footerContent={\n                    <div>\n                      <p className=\"m-0\"><FontAwesomeIcon icon={faClock} scale={\".5x\"}/> - {edge.node.wordCount.words} words</p>\n                      <p className=\"m-0\"><FontAwesomeIcon icon={faStamp} scale={\".5x\"}/> - {edge.node.frontmatter.license}</p>\n                      {edge.node.frontmatter.mainReference && <p className=\"m-0\"><a style={{color:\"#6c757d\"}} className=\"text-decoration-none\" target=\"_blank\" href={edge.node.frontmatter.mainReference}><FontAwesomeIcon icon={faLink} scale={\".5x\"}/> - {edge.node.frontmatter.mainReference}</a></p>}\n                    </div>\n                  }\n                >\n                  { edge.node.frontmatter.thumbnail && <Thumbnail src={edge.node.frontmatter.thumbnail}></Thumbnail>}\n                </ReinGridCard>\n              )\n            }\n          })}\n        </ReinCardGrid>\n      </>\n    </SideMainLayout>\n  )\n}\n\nexport default ToolkitFeed\n\nconst ToolsQuery = graphql`\n  query ToolsQuery {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/toolapps/\" }, frontmatter: {} }\n    ) {\n      edges {\n        node {\n          html\n          excerpt\n          frontmatter {\n            title\n            date(fromNow: true)\n            target_audience\n            layout\n            type\n            pageId\n            mainReference\n            license\n            thumbnail\n          }\n          wordCount {\n            words\n          }\n        }\n      }\n    }\n  }\n`\n\ndeclare module ToolsQueryData {\n\n  export interface Frontmatter {\n    title: string\n    date: string\n    target_audience: string[]\n    layout?: any\n    author?: any\n    training_available: boolean\n    tool_type?: any\n    type: string\n    pageId: string\n    license: string\n    mainReference: string | null\n    thumbnail?: string\n  }\n\n  export interface Node {\n    html: string\n    excerpt: string\n    frontmatter: Frontmatter\n    wordCount: {\n      words: number\n    }\n  }\n\n  export interface Edge {\n    node: Node\n  }\n\n  export interface AllMarkdownRemark {\n    edges: Edge[]\n  }\n\n  export interface Data {\n    allMarkdownRemark: AllMarkdownRemark\n  }\n\n  export interface Extensions {}\n\n  export interface RootObject {\n    data: Data\n    extensions: Extensions\n  }\n}\n","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport ToolAppsFeed from \"../../components/shared/ToolAppsFeed\"\nimport BaseLayout from \"../../components/static/BaseLayout\"\nimport MainHeading from \"../../components/static/MainHeading\"\n\nconst Toolkit = () => {\n  return (\n    <BaseLayout\n    pageTitle=\"Tool-apps | ReInHerit Digital Hub\"\n    >\n      <MainHeading\n        subHeading=\"Applications available via the ReInHerit digital hub.\"\n        subText=\"Here you'll find applications that are either developed within the ReInHerit project or play an important role for CH management or preservation. At tool components you will find the building blocks necessary for the implementation of these apps.\"\n        breadCrumb={[\n          {label:\"Resources\", value:\"/resources\"},\n          {label:\"Tool-apps\", value:\"/tools/apps\"}\n        ]}\n      >Tool apps</MainHeading>\n      <p></p>\n      <ToolAppsFeed></ToolAppsFeed>\n    </BaseLayout>\n  )\n}\n\nexport default Toolkit\n"],"sourceRoot":""}