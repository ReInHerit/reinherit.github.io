{"version":3,"sources":["webpack://reinherit-digital-hub/./src/components/static/navbarExhibitionConflicts/index.tsx","webpack://reinherit-digital-hub/./src/components/static/BaseExhibitionConflicts/index.tsx","webpack://reinherit-digital-hub/./src/components/shared/ExhibitionQuestions/mapsConflict/Q1_map.tsx","webpack://reinherit-digital-hub/./src/components/shared/ExhibitionQuestions/mapsConflict/Q2_map.tsx","webpack://reinherit-digital-hub/./src/components/shared/ExhibitionQuestions/mapsConflict/Q3_map.tsx","webpack://reinherit-digital-hub/./src/components/shared/ExhibitionQuestions/mapsConflict/Q4_map.tsx","webpack://reinherit-digital-hub/./src/pages/exhibitions/conflicts/ConflictExhibitionMap/index.tsx"],"names":["React","show","setShow","useLocation","Navbar","collapseOnSelect","expand","fixed","className","Container","fluid","href","as","onClick","style","color","Offcanvas","onHide","placement","closeButton","Nav","to","children","pageTitle","Base","Head","backgroundColor","padding","Row","Col","xl","xs","src","target","mapboxgl","doc","GoogleSpreadsheet","creds","useState","finalGeoJson","setfinalGeoJson","setAllRows","useEffect","useServiceAccountAuth","loadInfo","getInfo","sheet","sheetsByIndex","getRows","rows","AllRows","map","GoogleSpreadsheetRow","_rawData","sortingRows","exact_match","longitude","latitude","Country","Ans1a","Ans1b","Ans1c","Ans1d","Ans1e","Ans1aFin","Ans1bFin","Ans1cFin","Ans1dFin","Ans1eFin","hasAnswers","filter","res","MyGeoJson","row","Number","fetchData","mapContainer","useRef","container","current","center","zoom","projection","addControl","GeoJsonColl","on","addLayer","id","type","source","data","paint","property","stops","e","coordinates","features","geometry","slice","description","properties","Answer_A","Answer_B","Answer_C","Answer_D","Answer_E","setLngLat","setHTML","addTo","getCanvas","cursor","ref","Button","finalGeoJsonTwo","setfinalGeoJsonTwo","setAllRowsTwo","sheetTwo","rowsTwo","AllRowsTwo","sortingRowsTwo","Ans2a","Ans2b","Ans2c","Ans2d","Ans2e","Ans2aFin","Ans2bFin","Ans2cFin","Ans2dFin","Ans2eFin","hasAnswersTwo","MyGeoJsonTwo","GeoJsonCollTwo","finalGeoJsonThree","setfinalGeoJsonThree","setAllRowsThree","sheetThree","rowsThree","AllRowsThree","sortingRowsThree","Ans3a","Ans3b","Ans3c","Ans3d","Ans3e","Ans3aFin","Ans3bFin","Ans3cFin","Ans3dFin","Ans3eFin","hasAnswersThree","MyGeoJsonThree","GeoJsonCollThree","finalGeoJsonFour","setfinalGeoJsonFour","setAllRowsFour","sheetFour","rowsFour","AllRowsFour","sortingRowsFour","Ans4a","Ans4b","Ans4c","Ans4d","Ans4e","Ans4aFin","Ans4bFin","Ans4cFin","Ans4dFin","Ans4eFin","Ans4fFin","hasAnswersFour","MyGeoJsonFour","GeoJsonCollFour","Answer_F","MapQOneVisible","setMapQOneVisible","MapQTwoVisible","setMapQTwoVisible","MapQThreeVisible","setMapQThreeVisible","MapQFourVisible","setMapQFourVisible","undefined","activeButton","setActiveButton","Badge","lg","md","sm","isVisible"],"mappings":"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","file":"component---src-pages-exhibitions-conflicts-conflict-exhibition-map-index-tsx-fccbe2560a190fc327df.js","sourcesContent":["import { Link } from \"gatsby\"\r\nimport React from \"react\"\r\nimport { Navbar, Container, Nav, NavDropdown, Offcanvas, Button } from \"react-bootstrap\"\r\nimport { useLocation } from \"@reach/router\"\r\n\r\nfunction ReinNavbarExhibConflict() {\r\n    \r\n    const [show, setShow] = React.useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const location = useLocation()\r\n   \r\n\r\n    \r\n\r\n    return (\r\n      <React.Fragment>\r\n       \r\n    <Navbar\r\n        collapseOnSelect\r\n        expand=\"true\"\r\n        fixed=\"top\"\r\n        className=\"navExhib navExh_blue\"\r\n    > \r\n        <div className=\"header-burger\">\r\n        <div className=\"hamburger\"></div>\r\n        <div className=\"hamburger\"></div>\r\n        <div className=\"hamburger\"></div>\r\n        </div>\r\n<Container fluid className=\"exh_navBar_container rounded-pill\">\r\n        <Navbar.Brand href=\"#home\" as=\"div\" className=\"exhibition_navbar\">\r\n        <div className=\"exhibition_navbar_inner\">\r\n            <a className=\"exhibition_menu_link\" href=\"https://reinherit-hub.eu/\">ReInHerit</a> \r\n            <div className=\"exh_line\"></div>\r\n            <a className=\"exhibition_menu_link nav_font\" href=\"https://reinherit-hub.eu/exhibitions\">Exhibition</a>      \r\n            <a className=\"exhibition_menu_link nav_font\" href=\"https://collection.reinherit-hub.eu/\">Collection</a>\r\n      </div>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle className=\"navbar-toggler\" onClick={handleShow} style={{color:\"white\"}}/>\r\n\r\n        <Offcanvas show={show} onHide={handleClose} placement=\"end\" className=\"exhibition_burger_container\">\r\n          <Offcanvas.Header closeButton className=\"exhibition_burger\" />\r\n   \r\n          <div className=\"exhibition_burger_inner\">\r\n          <Nav className=\"flex-sm-column content-end\">\r\n          <Link\r\n                className=\"link-light text-decoration-none\"\r\n                  to=\"/about\">\r\n                    What is ReInHerit \r\n                </Link>\r\n                <Link\r\n                className=\"link-light text-decoration-none\"\r\n                  to=\"/about/team\">\r\n                    Who & Where is ReInHerit\r\n                </Link>\r\n                <Link\r\n                className=\"link-light text-decoration-none\"\r\n                to=\"/museumcalls/travelling\">\r\n                Host an Exhibition\r\n                </Link>\r\n                <Link\r\n                className=\"link-light text-decoration-none\"\r\n                to=\"/museumcalls/digital\">\r\n                Object Contribution\r\n                </Link>\r\n              <div className=\"exh_space\"></div>\r\n              <p>Travelling Exhibition:</p>\r\n              <a href=\"https://www.grazmuseum.at/en/exhibition/rethinking-conflicts-how-are-conflicts-reflected-in-objects/\"className=\"link-light text-decoration-none\">Graz Museum</a>  \r\n              <a href=\"https://www.boccf.org/\"className=\"link-light text-decoration-none\">Bank of Cypus Cultural Foundation</a>  \r\n              <a href=\"https://cycladic.gr/en\"className=\"link-light text-decoration-none\"> Museum of Cycladic Art</a>                     \r\n            </Nav>\r\n            </div>\r\n      \r\n        </Offcanvas>\r\n       \r\n          </Container>\r\n        </Navbar>\r\n       \r\n      </React.Fragment>\r\n    )\r\n  }\r\n  \r\n  export default ReinNavbarExhibConflict;\r\n","import React from \"react\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"../../../styles/index.css\"\r\nimport \"../../../styles/tronic.css\"\r\nimport { Container, Row, Col } from \"react-bootstrap\"\r\nimport Base from \"../Base\"\r\nimport Head from \"../Head\"\r\nimport ReinNavbarExhibConflict from \"../navbarExhibitionConflicts\"\r\n// import ReinNavbarExhib from \"../navbarExhibition\"\r\n\r\ninterface Props {\r\n  children?: any;\r\n  pageTitle?: string\r\n}\r\n\r\nconst BaseExhibitionConflict = ({ children, pageTitle }: Props) => {\r\n  return (\r\n    <Base>\r\n      <Head pageTitle={pageTitle}></Head>\r\n      <ReinNavbarExhibConflict/>\r\n      <Container\r\n        className=\"exh_main_content\"\r\n        style={{backgroundColor:\"white\"}}\r\n        fluid \r\n      >{children}</Container>\r\n      <Container\r\n        style={{backgroundColor:\"black\"}}\r\n        fluid>\r\n            <Container style={{ padding:\"10px 0\"}}>\r\n            <Row>\r\n            <Col xl={6} xs={12}>\r\n            <div className=\"exh_footer_grid\">\r\n              <div className=\"footer_img\"><img className=\"exh_img\" src=\"/images/exhibition_assets/cc-sticker-2007.png\"></img></div>\r\n              <div className=\"footer_partner_text\">\r\n                <p style={{color:\"white\"}}>All rights reserved excluding works shared under Creative Commons licensing. <br></br>Licenses are indicated for respective elements.</p>\r\n              </div>\r\n            </div>\r\n            </Col>\r\n            <Col xl={6} xs={12}>\r\n            <div className=\"exh_footer_grid\">\r\n              <div className=\"footer_img\"><img className=\"exh_img\" src=\"/images/exhibition_assets/logo-ce-horizontal-en-neg-nb.png\"></img></div>\r\n              <div className=\"footer_partner_text\"><p style={{color:\"white\"}}>This project has received funding from the European Union’s Horizon 2020 research and innovation programme under grant agreement No 101004545</p>\r\n              </div>\r\n            </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n          <Col className=\"exh_footer_links\">\r\n            <a style={{color:\"white\"}} target=\"_blank\" href=\"/exhibitions/conflicts/imprintConflicts\">Imprint</a>\r\n            <a style={{color:\"white\"}} target=\"_blank\" href=\"/about/dataprot\">Privacy</a>\r\n          </Col>\r\n          </Row>\r\n          </Container>\r\n        </Container>\r\n    </Base>\r\n  )\r\n}\r\n\r\nexport default BaseExhibitionConflict\r\n","import React, {Component} from \"react\";\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; \r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport creds from '../questionsConflict/cred/myjson.json'\r\nimport {GoogleSpreadsheet} from \"google-spreadsheet\"\r\nimport { Button } from \"react-bootstrap\"\r\n\r\nconst MapQOne = () => {\r\n  mapboxgl.accessToken = \"pk.eyJ1Ijoia2lhLXoiLCJhIjoiY2xkZzRnZjRnMHRvazN2bzZ0cnh4OWtzeSJ9.COmQgzmRsKnMZKw77WDF6w\"\r\n  const doc = new GoogleSpreadsheet(creds.sheet_id)\r\n  const [finalGeoJson, setfinalGeoJson] = useState([]);\r\n\r\n        const [AllRows, setAllRows] = useState([]);\r\n        useEffect( () => { \r\n          async function fetchData() {\r\n                await doc.useServiceAccountAuth(creds);\r\n                await doc.loadInfo();      \r\n                await doc.getInfo();\r\n                const sheet = doc.sheetsByIndex[2];\r\n                const rows = await sheet.getRows();\r\n                const AllRows = rows.map((GoogleSpreadsheetRow) => GoogleSpreadsheetRow._rawData);\r\n            //  console.log(AllRows) \r\n                setAllRows(AllRows)\r\n\r\n                const sortingRows = AllRows.map(({\r\n                  [0]: exact_match,\t[1]: longitude, [2]: latitude, [3]: Country,\r\n                  [4]: Ans1a,\t[5]: Ans1b,\t[6]: \tAns1c,\t[7]: \tAns1d,\t[8]: \tAns1e,\t\r\n                  [9]: Ans1aFin,\t[10]: Ans1bFin,\t[11]: Ans1cFin,\t[12]: Ans1dFin,\t[13]: Ans1eFin\r\n                }) => \r\n                ({\r\n                  exact_match,\tlongitude, latitude, Country,\r\n                  Ans1a,\tAns1b,\tAns1c,\tAns1d,\tAns1e,\t\r\n                  Ans1aFin,\tAns1bFin,\tAns1cFin,\tAns1dFin,\tAns1eFin\r\n                  }))\r\n            //  console.log(sortingRows)\r\n\r\n            const hasAnswers = sortingRows.filter((res) => res.Ans1aFin !== \"no answers\");\r\n            // console.log(hasAnswers)\r\n           \r\n            const MyGeoJson = hasAnswers.map(row => {\r\n              return {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    \"Country\": row.Country,\r\n                    \"Answer_A\": row.Ans1aFin,\r\n                    \"Answer_B\": row.Ans1bFin,\r\n                    \"Answer_C\": row.Ans1cFin,\r\n                    \"Answer_D\": row.Ans1dFin,\r\n                    \"Answer_E\": row.Ans1eFin\r\n                },\r\n                \"geometry\": {\r\n                  \"coordinates\": [Number(row.longitude), Number(row.latitude)],\r\n                  \"type\": \"Point\",\r\n                },\r\n              }\r\n            })      \r\n            \r\n            setfinalGeoJson(MyGeoJson)\r\n\r\n        }\r\n        fetchData();\r\n    //    console.log(finalGeoJson)\r\n      }, []);\r\n\r\n      \r\n        const mapContainer = useRef(null);\r\n        useEffect(() => {\r\n            const map = new mapboxgl.Map({\r\n              container: mapContainer.current,\r\n              style: 'mapbox://styles/mapbox/light-v11',\r\n              center: [15.754, 48.228],\r\n              zoom: 5.15,\r\n              projection: 'naturalEarth',\r\n            });\r\n    \r\n            map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\r\n            \r\n            const GeoJsonColl = {\r\n                \"type\": \"FeatureCollection\",\r\n                \"features\": \r\n                    finalGeoJson\r\n              };\r\n                // This GeoJson is valid\r\n                // console.log(JSON.stringify(GeoJsonColl))            \r\n     \r\n        map.on('load', () => {\r\n\r\n        map.addLayer({\r\n                id: 'resultsAnswerOneConflict',\r\n                type: 'circle',\r\n                source: {\r\n                  type: 'geojson',\r\n                  data: GeoJsonColl\r\n                },\r\n                paint: {\r\n               'circle-color': '#526d9d',\r\n               'circle-stroke-width': 1,\r\n               'circle-stroke-color': '#526d9d',\r\n               'circle-opacity': 0.5,\r\n               'circle-radius': {\r\n                property: 'Answer_A',\r\n                // think how to make them more proportional to our responses\r\n                stops: [\r\n                  [0, 0],\r\n                  [1, 5],\r\n                  [5, 20],\r\n                ]\r\n              }\r\n                }\r\n            })\r\n    \r\n// When a click event occurs on a feature in the csvData layer, open a popup at the\r\n// location of the feature, with description HTML from its properties.            \r\n                map.on('click', 'resultsAnswerOneConflict', function(e) {\r\n                var coordinates = e.features[0].geometry.coordinates.slice();\r\n\r\n                // set popup text\r\n                var description =\r\n                `<h4>` +\r\n                e.features[0].properties.Country +\r\n                `</h4> \r\n                <ul>\r\n                  <li>A: In total ` + e.features[0].properties.Answer_A + ` People</li>\r\n                  <li>B: In total ` + e.features[0].properties.Answer_B + ` People</li>\r\n                  <li>C: In total ` + e.features[0].properties.Answer_C + ` People</li>\r\n                  <li>D: In total ` + e.features[0].properties.Answer_D + ` People</li>\r\n                  <li>E: In total ` + e.features[0].properties.Answer_E + ` People</li>\r\n                </ul>` \r\n\r\n               //add Popup to map\r\n                  new mapboxgl.Popup()\r\n                    .setLngLat(coordinates)\r\n                    .setHTML(description)\r\n                    .addTo(map);\r\n                });\r\n                \r\n                // Change the cursor to a pointer when the mouse is over the places layer.\r\n                map.on('mouseenter', 'resultsAnswerOneConflict', function() {\r\n                  map.getCanvas().style.cursor = 'pointer';\r\n                });\r\n                \r\n                // Change it back to a pointer when it leaves.\r\n                map.on('mouseleave', 'places', function() {\r\n                  map.getCanvas().style.cursor = '';\r\n                });\r\n                \r\n        })\r\n  })\r\n\r\n    return (\r\n    <React.Fragment>\r\n       <div>\r\n            <div ref={mapContainer} className=\"map-container\" />\r\n        </div>\r\n     <div className=\"exh_map_result_content\">\r\n        <h2>Question 1:</h2>\r\n            <h3>\"Violence is no solution\" – that's what many people say when it comes to conflicts. They wish for a world in which conflicts are resolved without violence. What do you think: Can such a world become reality or will it remain a pipe dream?</h3> \r\n                <div className=\"exh_map_quest_result\"><span>A</span><p>No. Such a world is not possible. Whether you like it or not, violence is in fact always a solution. It will always remain a solution. It is that simple.</p></div>\r\n                <div className=\"exh_map_quest_result\"><span>B</span><p>In a world without guns, the gun owner is king. At least that is what modern evolutionary biology says. Anyone who has the opportunity to use violence will eventually do so.</p></div>\r\n                <div className=\"exh_map_quest_result\"><span>C</span><p>Those who starve or starve are more likely to resort to violence. Because if you have nothing to lose, violence is always an option. Precisely because one has nothing left to lose. Conversely, this also means that those who want a world without conflicts may also have to accept the redistribution of wealth or resources.</p></div>\r\n                <div className=\"exh_map_quest_result\"><span>D</span><p>Violence is never my first option. But if others resort to violence, I would defend myself – if necessary with violence.</p></div>\r\n                <div className=\"exh_map_quest_result\"><span>E</span><p>I don't see why a world without violence shouldn't be possible. There is always an alternative to violence. For those who have realized that violence only generates counter-violence, renunciation of violence is the only way to improvement.</p></div>\r\n        </div>\r\n\r\n        <div className=\"visitCollection\"><Button className=\"coll_button\" href=\"https://collection.reinherit-hub.eu/\">Visit Collection</Button></div>\r\n    </React.Fragment>\r\n    );          \r\n}\r\n\r\nexport default MapQOne","import React, {Component} from \"react\";\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; \r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport creds from '../questionsConflict/cred/myjson.json'\r\nimport {GoogleSpreadsheet} from \"google-spreadsheet\"\r\nimport { Button } from \"react-bootstrap\"\r\n\r\nconst MapQTwo = () => {\r\n  mapboxgl.accessToken = \"pk.eyJ1Ijoia2lhLXoiLCJhIjoiY2xkZzRnZjRnMHRvazN2bzZ0cnh4OWtzeSJ9.COmQgzmRsKnMZKw77WDF6w\"\r\n  const doc = new GoogleSpreadsheet(creds.sheet_id)\r\n  const [finalGeoJsonTwo, setfinalGeoJsonTwo] = useState([]);\r\n\r\n        const [AllRowsTwo, setAllRowsTwo] = useState([]);\r\n        useEffect( () => { \r\n          async function fetchData() {\r\n                await doc.useServiceAccountAuth(creds);\r\n                await doc.loadInfo();      \r\n                await doc.getInfo();\r\n                const sheetTwo = doc.sheetsByIndex[5];\r\n                const rowsTwo = await sheetTwo.getRows();\r\n                const AllRowsTwo = rowsTwo.map((GoogleSpreadsheetRow) => GoogleSpreadsheetRow._rawData);\r\n            //  console.log(AllRows) \r\n                setAllRowsTwo(AllRowsTwo)\r\n\r\n                const sortingRowsTwo = AllRowsTwo.map(({\r\n                  [0]: exact_match,\t[1]: longitude, [2]: latitude, [3]: Country,\r\n                  [4]: Ans2a,\t[5]: Ans2b,\t[6]: \tAns2c,\t[7]: \tAns2d,\t[8]: \tAns2e,\t\r\n                  [9]: Ans2aFin,\t[10]: Ans2bFin,\t[11]: Ans2cFin,\t[12]: Ans2dFin,\t[13]: Ans2eFin\r\n                }) => \r\n                ({\r\n                  exact_match,\tlongitude, latitude, Country,\r\n                  Ans2a,\tAns2b,\tAns2c,\tAns2d,\tAns2e,\t\r\n                  Ans2aFin,\tAns2bFin,\tAns2cFin,\tAns2dFin,\tAns2eFin\r\n                  }))\r\n            //  console.log(sortingRows)\r\n\r\n            const hasAnswersTwo = sortingRowsTwo.filter((res) => res.Ans2aFin !== \"no answers\");\r\n            // console.log(hasAnswers)\r\n           \r\n            const MyGeoJsonTwo = hasAnswersTwo.map(row => {\r\n              return {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    \"Country\": row.Country,\r\n                    \"Answer_A\": row.Ans2aFin,\r\n                    \"Answer_B\": row.Ans2bFin,\r\n                    \"Answer_C\": row.Ans2cFin,\r\n                    \"Answer_D\": row.Ans2dFin,\r\n                    \"Answer_E\": row.Ans2eFin\r\n                },\r\n                \"geometry\": {\r\n                  \"coordinates\": [Number(row.longitude), Number(row.latitude)],\r\n                  \"type\": \"Point\",\r\n                },\r\n              }\r\n            })      \r\n            \r\n            setfinalGeoJsonTwo(MyGeoJsonTwo)\r\n\r\n        }\r\n        fetchData();\r\n    //    console.log(finalGeoJson)\r\n      }, []);\r\n\r\n      \r\n        const mapContainer = useRef(null);\r\n        useEffect(() => {\r\n            const map = new mapboxgl.Map({\r\n              container: mapContainer.current,\r\n              style: 'mapbox://styles/mapbox/light-v11',\r\n              center: [15.754, 48.228],\r\n              zoom: 5.15,\r\n              projection: 'naturalEarth',\r\n            });\r\n    \r\n            map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\r\n            \r\n            const GeoJsonCollTwo = {\r\n                \"type\": \"FeatureCollection\",\r\n                \"features\": \r\n                    finalGeoJsonTwo\r\n              };\r\n                // This GeoJson is valid\r\n                // console.log(JSON.stringify(GeoJsonColl))            \r\n     \r\n        map.on('load', () => {\r\n\r\n        map.addLayer({\r\n                id: 'resultsAnswerTwoConflict',\r\n                type: 'circle',\r\n                source: {\r\n                  type: 'geojson',\r\n                  data: GeoJsonCollTwo\r\n                },\r\n                paint: {\r\n               'circle-color': '#526d9d',\r\n               'circle-stroke-width': 1,\r\n               'circle-stroke-color': '#526d9d',\r\n               'circle-opacity': 0.5,\r\n               'circle-radius': {\r\n                property: 'Answer_A',\r\n                // think how to make them more proportional to our responses\r\n                stops: [\r\n                  [0, 0],\r\n                  [1, 5],\r\n                  [5, 20],\r\n                ]\r\n              }\r\n                }\r\n            })\r\n    \r\n// When a click event occurs on a feature in the csvData layer, open a popup at the\r\n// location of the feature, with description HTML from its properties.            \r\n                map.on('click', 'resultsAnswerTwoConflict', function(e) {\r\n                var coordinates = e.features[0].geometry.coordinates.slice();\r\n\r\n                // set popup text\r\n                var description =\r\n                `<h4>` +\r\n                e.features[0].properties.Country +\r\n                `</h4> \r\n                <ul>\r\n                  <li>A: In total ` + e.features[0].properties.Answer_A + ` People</li>\r\n                  <li>B: In total ` + e.features[0].properties.Answer_B + ` People</li>\r\n                  <li>C: In total ` + e.features[0].properties.Answer_C + ` People</li>\r\n                  <li>D: In total ` + e.features[0].properties.Answer_D + ` People</li>\r\n                  <li>E: In total ` + e.features[0].properties.Answer_E + ` People</li>\r\n                </ul>` \r\n\r\n               //add Popup to map\r\n                  new mapboxgl.Popup()\r\n                    .setLngLat(coordinates)\r\n                    .setHTML(description)\r\n                    .addTo(map);\r\n                });\r\n                \r\n                // Change the cursor to a pointer when the mouse is over the places layer.\r\n                map.on('mouseenter', 'resultsAnswerTwoConflict', function() {\r\n                  map.getCanvas().style.cursor = 'pointer';\r\n                });\r\n                \r\n                // Change it back to a pointer when it leaves.\r\n                map.on('mouseleave', 'places', function() {\r\n                  map.getCanvas().style.cursor = '';\r\n                });\r\n                \r\n        })\r\n  })\r\n\r\n    return (\r\n    <React.Fragment>\r\n        <div>\r\n            <div ref={mapContainer} className=\"map-container\" />\r\n        </div>\r\n        <div className=\"exh_map_result_content\">\r\n        <h2>Question 2:</h2>\r\n            <h3>Is it bad if you fight back?</h3> \r\n            <div className=\"exh_map_quest_result\"><span>A</span><p>No. Resistance can be a very good thing and sometimes even becomes a duty. Often you even have to defend what is important to you. In this case I not only have the right but also the duty to defend myself.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>B</span><p>I don't know if it is evil to fight back. But for my part I abhor any form of violence. Therefore, if in doubt, I would not defend myself.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>C</span><p>Anyone who thinks it is evil to stand up for one's freedom, for example, morally equates oppressor and victim. But that is wrong. A perpetrator is never on the same moral level as the victim. So it is not evil to fight back.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>D</span><p>Anyone who resists creates counter-violence with his violence. This definitely leads to a spiral of violence. So it may not be evil to fight back, but it is at least unwise.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>E</span><p>Imagine your parents' house suddenly being illegally occupied. What should prevent you from fighting back? Nothing. Any questions?</p></div>\r\n        </div>\r\n\r\n        <div className=\"visitCollection\"><Button className=\"coll_button\" href=\"https://collection.reinherit-hub.eu/\">Visit Collection</Button></div>\r\n      </React.Fragment>\r\n    );          \r\n}\r\n\r\nexport default MapQTwo","import React, {Component} from \"react\";\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; \r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport creds from '../questionsConflict/cred/myjson.json'\r\nimport {GoogleSpreadsheet} from \"google-spreadsheet\"\r\nimport { Button } from \"react-bootstrap\"\r\n\r\nconst MapQThree = () => {\r\n  mapboxgl.accessToken = \"pk.eyJ1Ijoia2lhLXoiLCJhIjoiY2xkZzRnZjRnMHRvazN2bzZ0cnh4OWtzeSJ9.COmQgzmRsKnMZKw77WDF6w\"\r\n  const doc = new GoogleSpreadsheet(creds.sheet_id)\r\n  const [finalGeoJsonThree, setfinalGeoJsonThree] = useState([]);\r\n\r\n        const [AllRowsThree, setAllRowsThree] = useState([]);\r\n        useEffect( () => { \r\n          async function fetchData() {\r\n                await doc.useServiceAccountAuth(creds);\r\n                await doc.loadInfo();      \r\n                await doc.getInfo();\r\n                const sheetThree = doc.sheetsByIndex[8];\r\n                const rowsThree = await sheetThree.getRows();\r\n                const AllRowsThree = rowsThree.map((GoogleSpreadsheetRow) => GoogleSpreadsheetRow._rawData);\r\n            //  console.log(AllRows) \r\n                setAllRowsThree(AllRowsThree)\r\n\r\n                const sortingRowsThree = AllRowsThree.map(({\r\n                  [0]: exact_match,\t[1]: longitude, [2]: latitude, [3]: Country,\r\n                  [4]: Ans3a,\t[5]: Ans3b,\t[6]: \tAns3c,\t[7]: \tAns3d,\t[8]: \tAns3e,\t\r\n                  [9]: Ans3aFin,\t[10]: Ans3bFin,\t[11]: Ans3cFin,\t[12]: Ans3dFin,\t[13]: Ans3eFin\r\n                }) => \r\n                ({\r\n                  exact_match,\tlongitude, latitude, Country,\r\n                  Ans3a,\tAns3b,\tAns3c,\tAns3d,\tAns3e,\t\r\n                  Ans3aFin,\tAns3bFin,\tAns3cFin,\tAns3dFin,\tAns3eFin\r\n                  }))\r\n            //  console.log(sortingRows)\r\n\r\n            const hasAnswersThree = sortingRowsThree.filter((res) => res.Ans3aFin !== \"no answers\");\r\n            // console.log(hasAnswers)\r\n           \r\n            const MyGeoJsonThree = hasAnswersThree.map(row => {\r\n              return {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    \"Country\": row.Country,\r\n                    \"Answer_A\": row.Ans3aFin,\r\n                    \"Answer_B\": row.Ans3bFin,\r\n                    \"Answer_C\": row.Ans3cFin,\r\n                    \"Answer_D\": row.Ans3dFin,\r\n                    \"Answer_E\": row.Ans3eFin\r\n                },\r\n                \"geometry\": {\r\n                  \"coordinates\": [Number(row.longitude), Number(row.latitude)],\r\n                  \"type\": \"Point\",\r\n                },\r\n              }\r\n            })      \r\n            \r\n            setfinalGeoJsonThree(MyGeoJsonThree)\r\n\r\n        }\r\n        fetchData();\r\n    //    console.log(finalGeoJson)\r\n      }, []);\r\n\r\n      \r\n        const mapContainer = useRef(null);\r\n        useEffect(() => {\r\n            const map = new mapboxgl.Map({\r\n              container: mapContainer.current,\r\n              style: 'mapbox://styles/mapbox/light-v11',\r\n              center: [15.754, 48.228],\r\n              zoom: 5.15,\r\n              projection: 'naturalEarth',\r\n            });\r\n    \r\n            map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\r\n            \r\n            const GeoJsonCollThree = {\r\n                \"type\": \"FeatureCollection\",\r\n                \"features\": \r\n                    finalGeoJsonThree\r\n              };\r\n                // This GeoJson is valid\r\n                // console.log(JSON.stringify(GeoJsonColl))            \r\n     \r\n        map.on('load', () => {\r\n\r\n        map.addLayer({\r\n                id: 'resultsAnswerThreeConflict',\r\n                type: 'circle',\r\n                source: {\r\n                  type: 'geojson',\r\n                  data: GeoJsonCollThree\r\n                },\r\n                paint: {\r\n               'circle-color': '#526d9d',\r\n               'circle-stroke-width': 1,\r\n               'circle-stroke-color': '#526d9d',\r\n               'circle-opacity': 0.5,\r\n               'circle-radius': {\r\n                property: 'Answer_A',\r\n                // think how to make them more proportional to our responses\r\n                stops: [\r\n                  [0, 0],\r\n                  [1, 5],\r\n                  [5, 20],\r\n                ]\r\n              }\r\n                }\r\n            })\r\n    \r\n// When a click event occurs on a feature in the csvData layer, open a popup at the\r\n// location of the feature, with description HTML from its properties.            \r\n                map.on('click', 'resultsAnswerThreeConflict', function(e) {\r\n                var coordinates = e.features[0].geometry.coordinates.slice();\r\n\r\n                // set popup text\r\n                var description =\r\n                `<h4>` +\r\n                e.features[0].properties.Country +\r\n                `</h4> \r\n                <ul>\r\n                  <li>A: In total ` + e.features[0].properties.Answer_A + ` People</li>\r\n                  <li>B: In total ` + e.features[0].properties.Answer_B + ` People</li>\r\n                  <li>C: In total ` + e.features[0].properties.Answer_C + ` People</li>\r\n                  <li>D: In total ` + e.features[0].properties.Answer_D + ` People</li>\r\n                  <li>E: In total ` + e.features[0].properties.Answer_E + ` People</li>\r\n                </ul>` \r\n\r\n               //add Popup to map\r\n                  new mapboxgl.Popup()\r\n                    .setLngLat(coordinates)\r\n                    .setHTML(description)\r\n                    .addTo(map);\r\n                });\r\n                \r\n                // Change the cursor to a pointer when the mouse is over the places layer.\r\n                map.on('mouseenter', 'resultsAnswerThreeConflict', function() {\r\n                  map.getCanvas().style.cursor = 'pointer';\r\n                });\r\n                \r\n                // Change it back to a pointer when it leaves.\r\n                map.on('mouseleave', 'places', function() {\r\n                  map.getCanvas().style.cursor = '';\r\n                });\r\n                \r\n        })\r\n  })\r\n\r\n    return (\r\n    <React.Fragment>\r\n        <div>\r\n            <div ref={mapContainer} className=\"map-container\" />\r\n        </div>\r\n        <div className=\"exh_map_result_content\">\r\n        <h2>Question 3:</h2>\r\n            <h3>\r\n            Sometimes conflicts are not caused by individuals but because they are built into the social system in which we live. One then speaks of “structural violence”. How should we deal with this structural violence?\r\n            </h3> \r\n            <div className=\"exh_map_quest_result\"><span>A</span><p>Granted, no state can be perfect or free of conflicts. In a democracy, however, there is always a way of resolving conflicts without violence. Anyone can get involved politically or take legal action.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>B</span><p>Every social system takes far too much time to react to social conflicts. Those who wait for their own country to do something effective to combat social inequality, for example end up waiting too long.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>C</span><p>No system, even the best, can ever be perfectly fair. That is in the nature of the systems. We have to put up with that.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>D</span><p>Structural violence is always abstract violence. It becomes actual violence only through the people who are part of the system and benefit from it. The most effective lever against structural violence is therefore active resistance to those who enforce it.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>E</span><p>Misogyny or racism are not only built into social systems, but also take place in the minds of the population. It is therefore less important to change the system than to change people's attitudes.</p></div>\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"visitCollection\"><Button className=\"coll_button\" href=\"https://collection.reinherit-hub.eu/\">Visit Collection</Button></div>\r\n    </React.Fragment>\r\n    );          \r\n}\r\n\r\nexport default MapQThree","import React, {Component} from \"react\";\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; \r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport creds from '../questionsConflict/cred/myjson.json'\r\nimport {GoogleSpreadsheet} from \"google-spreadsheet\"\r\nimport { Button } from \"react-bootstrap\"\r\n\r\nconst MapQFour = () => {\r\n  mapboxgl.accessToken = \"pk.eyJ1Ijoia2lhLXoiLCJhIjoiY2xkZzRnZjRnMHRvazN2bzZ0cnh4OWtzeSJ9.COmQgzmRsKnMZKw77WDF6w\"\r\n  const doc = new GoogleSpreadsheet(creds.sheet_id)\r\n  const [finalGeoJsonFour, setfinalGeoJsonFour] = useState([]);\r\n\r\n        const [AllRowsFour, setAllRowsFour] = useState([]);\r\n        useEffect( () => { \r\n          async function fetchData() {\r\n                await doc.useServiceAccountAuth(creds);\r\n                await doc.loadInfo();      \r\n                await doc.getInfo();\r\n                const sheetFour = doc.sheetsByIndex[11];\r\n                const rowsFour = await sheetFour.getRows();\r\n                const AllRowsFour = rowsFour.map((GoogleSpreadsheetRow) => GoogleSpreadsheetRow._rawData);\r\n            //  console.log(AllRows) \r\n                setAllRowsFour(AllRowsFour)\r\n\r\n                const sortingRowsFour = AllRowsFour.map(({\r\n                  [0]: exact_match,\t[1]: longitude, [2]: latitude, [3]: Country,\r\n                  [4]: Ans4a,\t[5]: Ans4b,\t[6]: \tAns4c,\t[7]: \tAns4d,\t[8]: \tAns4e,\t\r\n                  [9]: Ans4aFin,\t[10]: Ans4bFin,\t[11]: Ans4cFin,\t[12]: Ans4dFin,\t[13]: Ans4eFin, [14]: Ans4fFin\r\n                }) => \r\n                ({\r\n                  exact_match,\tlongitude, latitude, Country,\r\n                  Ans4a,\tAns4b,\tAns4c,\tAns4d,\tAns4e,\t\r\n                  Ans4aFin,\tAns4bFin,\tAns4cFin,\tAns4dFin,\tAns4eFin, Ans4fFin\r\n                  }))\r\n            //  console.log(sortingRows)\r\n\r\n            const hasAnswersFour = sortingRowsFour.filter((res) => res.Ans4aFin !== \"no answers\");\r\n            // console.log(hasAnswers)\r\n           \r\n            const MyGeoJsonFour = hasAnswersFour.map(row => {\r\n              return {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    \"Country\": row.Country,\r\n                    \"Answer_A\": row.Ans4aFin,\r\n                    \"Answer_B\": row.Ans4bFin,\r\n                    \"Answer_C\": row.Ans4cFin,\r\n                    \"Answer_D\": row.Ans4dFin,\r\n                    \"Answer_E\": row.Ans4eFin,\r\n                    \"Answer_F\": row.Ans4fFin\r\n                },\r\n                \"geometry\": {\r\n                  \"coordinates\": [Number(row.longitude), Number(row.latitude)],\r\n                  \"type\": \"Point\",\r\n                },\r\n              }\r\n            })      \r\n            \r\n            setfinalGeoJsonFour(MyGeoJsonFour)\r\n\r\n        }\r\n        fetchData();\r\n    //    console.log(finalGeoJson)\r\n      }, []);\r\n\r\n      \r\n        const mapContainer = useRef(null);\r\n        useEffect(() => {\r\n            const map = new mapboxgl.Map({\r\n              container: mapContainer.current,\r\n              style: 'mapbox://styles/mapbox/light-v11',\r\n              center: [15.754, 48.228],\r\n              zoom: 5.15,\r\n              projection: 'naturalEarth',\r\n            });\r\n    \r\n            map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\r\n            \r\n            const GeoJsonCollFour = {\r\n                \"type\": \"FeatureCollection\",\r\n                \"features\": \r\n                    finalGeoJsonFour\r\n              };\r\n                // This GeoJson is valid\r\n                // console.log(JSON.stringify(GeoJsonColl))            \r\n     \r\n        map.on('load', () => {\r\n\r\n        map.addLayer({\r\n                id: 'resultsAnswerFourConflict',\r\n                type: 'circle',\r\n                source: {\r\n                  type: 'geojson',\r\n                  data: GeoJsonCollFour\r\n                },\r\n                paint: {\r\n               'circle-color': '#526d9d',\r\n               'circle-stroke-width': 1,\r\n               'circle-stroke-color': '#526d9d',\r\n               'circle-opacity': 0.5,\r\n               'circle-radius': {\r\n                property: 'Answer_A',\r\n                // think how to make them more proportional to our responses\r\n                stops: [\r\n                  [0, 0],\r\n                  [1, 5],\r\n                  [5, 20],\r\n                ]\r\n              }\r\n                }\r\n            })\r\n    \r\n// When a click event occurs on a feature in the csvData layer, open a popup at the\r\n// location of the feature, with description HTML from its properties.            \r\n                map.on('click', 'resultsAnswerFourConflict', function(e) {\r\n                var coordinates = e.features[0].geometry.coordinates.slice();\r\n\r\n              // set popup text\r\n              var description =\r\n              `<h4>` +\r\n              e.features[0].properties.Country +\r\n              `</h4> \r\n              <ul>\r\n                <li>A: In total ` + e.features[0].properties.Answer_A + ` People</li>\r\n                <li>B: In total ` + e.features[0].properties.Answer_B + ` People</li>\r\n                <li>C: In total ` + e.features[0].properties.Answer_C + ` People</li>\r\n                <li>D: In total ` + e.features[0].properties.Answer_D + ` People</li>\r\n                <li>E: In total ` + e.features[0].properties.Answer_E + ` People</li>\r\n                <li>F: In total ` + e.features[0].properties.Answer_F + ` People</li>\r\n              </ul>` \r\n\r\n               //add Popup to map\r\n                  new mapboxgl.Popup()\r\n                    .setLngLat(coordinates)\r\n                    .setHTML(description)\r\n                    .addTo(map);\r\n                });\r\n                \r\n                // Change the cursor to a pointer when the mouse is over the places layer.\r\n                map.on('mouseenter', 'resultsAnswerFourConflict', function() {\r\n                  map.getCanvas().style.cursor = 'pointer';\r\n                });\r\n                \r\n                // Change it back to a pointer when it leaves.\r\n                map.on('mouseleave', 'places', function() {\r\n                  map.getCanvas().style.cursor = '';\r\n                });\r\n                \r\n        })\r\n  })\r\n\r\n    return (\r\n    <React.Fragment>\r\n        <div>\r\n            <div ref={mapContainer} className=\"map-container\" />\r\n        </div>\r\n        <div className=\"exh_map_result_content\">\r\n        <h2>Question 4:</h2>\r\n            <h3>\r\n            Many people think that conflicts arise primarily because people do not understand each other. Do you agree?\r\n            </h3> \r\n            <div className=\"exh_map_quest_result\"><span>A</span><p>Generally, yes. Often one would rather be right than understand the other person. The end of dogmatism is often the end of a conflict.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>B</span><p>No. Because every understanding sooner or later comes to an end. For example, I cannot understand when others do not understand that climate change threatens humanity. That is where my understanding ends.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>C</span><p>This view is wrong. Quite often I can understand the attitude of a person and thus also understand it. However, the conflict has not yet been resolved by that. Because often I just do not share his attitude and I will not do it either.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>D</span><p>It is not about understanding the other person, it is about getting along with them. In the case of a conflict, I therefore look for solutions that both parties can agree to. Results are more important than mutual understanding.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>E</span><p>Yes. Because understanding the other opens up new perspectives and ways of resolving the conflict.</p></div>\r\n            <div className=\"exh_map_quest_result\"><span>F</span><p>No. It is not about understanding, it is about interests. You do not have to understand them, they are just there.</p></div>\r\n        </div>\r\n\r\n        <div className=\"visitCollection\"><Button className=\"coll_button\" href=\"https://collection.reinherit-hub.eu/\">Visit Collection</Button></div>\r\n    </React.Fragment>\r\n\r\n\r\n\r\n    );          \r\n}\r\n\r\nexport default MapQFour","import React, {useState} from \"react\"\r\nimport { Container, Badge, Button, Row, Col } from \"react-bootstrap\"\r\nimport BaseExhibitionConflict from \"../../../../components/static/BaseExhibitionConflicts\"\r\nimport MapQOne from \"../../../../components/shared/ExhibitionQuestions/mapsConflict/Q1_map\"\r\nimport MapQTwo from \"../../../../components/shared/ExhibitionQuestions/mapsConflict/Q2_map\"\r\nimport MapQThree from \"../../../../components/shared/ExhibitionQuestions/mapsConflict/Q3_map\"\r\nimport MapQFour from \"../../../../components/shared/ExhibitionQuestions/mapsConflict/Q4_map\"\r\n\r\n\r\nconst ConflictsAnswers: React.FC = () => {\r\n\r\n  const [MapQOneVisible, setMapQOneVisible] = useState(false);\r\n  const [MapQTwoVisible, setMapQTwoVisible] = useState(false);\r\n  const [MapQThreeVisible, setMapQThreeVisible] = useState(false);\r\n  const [MapQFourVisible, setMapQFourVisible] = useState(false);\r\n  const [activeButton, setActiveButton] = useState<string | undefined>(undefined);\r\n\r\n  const handleMapQOne = () => {\r\n    setMapQOneVisible((isVisible) => !isVisible);\r\n    setMapQTwoVisible(false);\r\n    setMapQThreeVisible(false);\r\n    setMapQFourVisible(false);\r\n    setActiveButton(\"Question 1\");\r\n  };\r\n\r\n  const handleMapQTwo = () => {\r\n    setMapQTwoVisible((isVisible) => !isVisible);\r\n    setMapQOneVisible(false);\r\n    setMapQThreeVisible(false);\r\n    setMapQFourVisible(false);\r\n    setActiveButton(\"Question 2\");\r\n  };\r\n\r\n  const handleMapQThree = () => {\r\n    setMapQThreeVisible((isVisible) => !isVisible);\r\n    setMapQOneVisible(false);\r\n    setMapQTwoVisible(false);\r\n    setMapQFourVisible(false);\r\n    setActiveButton(\"Question 3\");\r\n  };\r\n\r\n  const handleMapQFour = () => {\r\n    setMapQFourVisible((isVisible) => !isVisible);\r\n    setMapQOneVisible(false);\r\n    setMapQTwoVisible(false);\r\n    setMapQThreeVisible(false);\r\n    setActiveButton(\"Question 4\");\r\n  };\r\n\r\n\r\nreturn (\r\n<BaseExhibitionConflict>\r\n<div className=\"exh_container_inner exh_map_container mt-5\">\r\n  <div className=\"d-grid gap-2\">\r\n  <Badge className=\"badgeConflicts rounded-pill\"><h1>Results</h1></Badge>\r\n  </div>\r\n\r\n<Row>\r\n<Col lg={3} md={6} sm={12}><Button className={`exh_map_btn ${activeButton === \"Question 1\" ? \"active\" : \"\"}`} onClick={handleMapQOne}>Question 1</Button></Col>\r\n<Col lg={3} md={6} sm={12}><Button className={`exh_map_btn ${activeButton === \"Question 2\" ? \"active\" : \"\"}`} onClick={handleMapQTwo}>Question 2</Button></Col>\r\n<Col lg={3} md={6} sm={12}><Button className={`exh_map_btn ${activeButton === \"Question 3\" ? \"active\" : \"\"}`} onClick={handleMapQThree}>Question 3</Button></Col>\r\n<Col lg={3} md={6} sm={12}><Button className={`exh_map_btn ${activeButton === \"Question 4\" ? \"active\" : \"\"}`} onClick={handleMapQFour}>Question 4</Button></Col>\r\n</Row>\r\n\r\n  <div className=\"exh_btn_content\">\r\n      {MapQOneVisible && <h1>Question 1</h1> && <MapQOne></MapQOne>}\r\n      {MapQTwoVisible && <h1>Question 2</h1> && <MapQTwo></MapQTwo>}\r\n      {MapQThreeVisible && <h1>Question 3</h1> && <MapQThree></MapQThree>}\r\n      {MapQFourVisible && <h1>Question 4</h1> && <MapQFour></MapQFour>}\r\n  </div>\r\n\r\n  </div>\r\n</BaseExhibitionConflict>\r\n    )\r\n  }\r\n\r\nexport default ConflictsAnswers"],"sourceRoot":""}