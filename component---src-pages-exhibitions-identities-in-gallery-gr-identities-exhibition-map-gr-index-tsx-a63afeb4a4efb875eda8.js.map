{"version":3,"sources":["webpack://reinherit-digital-hub/./node_modules/react-bootstrap/esm/Row.js","webpack://reinherit-digital-hub/./src/components/static/BaseExhibitionConflicts/inGalleryIndex.tsx","webpack://reinherit-digital-hub/./src/components/shared/ExhibitionQuestions/inGalleryIdentities/Q1_mapIdentitiesGR.tsx","webpack://reinherit-digital-hub/./src/components/shared/ExhibitionQuestions/inGalleryIdentities/Q2_mapIdentitiesGR.tsx","webpack://reinherit-digital-hub/./src/components/shared/ExhibitionQuestions/inGalleryIdentities/Q3_mapIdentitiesGR.tsx","webpack://reinherit-digital-hub/./src/components/shared/ExhibitionQuestions/inGalleryIdentities/Q4_mapIdentitiesGR.tsx","webpack://reinherit-digital-hub/./src/pages/exhibitions/identities/inGalleryGR/IdentitiesExhibitionMapGR/index.tsx"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","DEVICE_SIZES","Row","_ref","ref","bsPrefix","className","_ref$as","as","Component","props","decoratedBsPrefix","sizePrefix","concat","classes","brkPoint","cols","propValue","infix","displayName","children","pageTitle","style","backgroundColor","fluid","mapboxgl","doc","GoogleSpreadsheet","creds","useState","finalGeoJson","setfinalGeoJson","setAllRows","useEffect","useServiceAccountAuth","loadInfo","getInfo","sheet","sheetsByIndex","getRows","rows","AllRows","map","GoogleSpreadsheetRow","_rawData","sortingRows","exact_match","longitude","latitude","Country","Ans1a","Ans1b","Ans1c","Ans1d","Ans1aFin","Ans1bFin","Ans1cFin","Ans1dFin","hasAnswers","res","MyGeoJson","row","Number","fetchData","mapContainer","useRef","container","current","center","zoom","projection","addControl","GeoJsonColl","on","addLayer","id","type","data","paint","property","stops","e","coordinates","features","geometry","slice","description","properties","Answer_A","Answer_B","Answer_C","Answer_D","setLngLat","setHTML","addTo","getCanvas","cursor","finalGeoJsonTwo","setfinalGeoJsonTwo","setAllRowsTwo","sheetTwo","rowsTwo","AllRowsTwo","sortingRowsTwo","Ans2a","Ans2b","Ans2c","Ans2d","Ans2aFin","Ans2bFin","Ans2cFin","Ans2dFin","hasAnswersTwo","MyGeoJsonTwo","GeoJsonCollTwo","finalGeoJsonThree","setfinalGeoJsonThree","setAllRowsThree","sheetThree","rowsThree","AllRowsThree","sortingRowsThree","Ans3a","Ans3b","Ans3c","Ans3d","Ans3e","Ans3aFin","Ans3bFin","Ans3cFin","Ans3dFin","Ans3eFin","hasAnswersThree","MyGeoJsonThree","GeoJsonCollThree","Answer_E","finalGeoJsonFour","setfinalGeoJsonFour","setAllRowsFour","sheetFour","rowsFour","AllRowsFour","sortingRowsFour","Ans4a","Ans4b","Ans4c","Ans4d","Ans4e","Ans4aFin","Ans4bFin","Ans4cFin","Ans4dFin","Ans4eFin","hasAnswersFour","MyGeoJsonFour","GeoJsonCollFour","MapQOneVisible","setMapQOneVisible","MapQTwoVisible","setMapQTwoVisible","MapQThreeVisible","setMapQThreeVisible","MapQFourVisible","setMapQFourVisible","undefined","activeButton","setActiveButton","Badge","pill","bg","to","color","Col","lg","md","sm","Button","onClick","isVisible","src","alt","href"],"mappings":"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","file":"component---src-pages-exhibitions-identities-in-gallery-gr-identities-exhibition-map-gr-index-tsx-a63afeb4a4efb875eda8.js","sourcesContent":["import _defineProperty from \"C:/Users/chiar/Desktop/reinheritHubOct22/digital-hub/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"C:/Users/chiar/Desktop/reinheritHubOct22/digital-hub/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nvar Row = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutProperties(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = \"\".concat(decoratedBsPrefix, \"-cols\");\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\".concat(brkPoint) : '';\n    if (cols != null) classes.push(\"\".concat(sizePrefix).concat(infix, \"-\").concat(cols));\n  });\n  return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({\n    ref: ref\n  }, props), {}, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nexport default Row;","import React from \"react\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"../../../styles/index.css\"\r\nimport \"../../../styles/tronic.css\"\r\nimport { Container, Row, Col } from \"react-bootstrap\"\r\nimport Base from \"../Base\"\r\nimport Head from \"../Head\"\r\n// import ReinNavbarExhibConflict from \"../navbarExhibitionConflicts\"\r\n// import ReinNavbarExhib from \"../navbarExhibition\"\r\n\r\ninterface Props {\r\n  children?: any;\r\n  pageTitle?: string\r\n}\r\n\r\nconst BaseExhibitionConflictDE = ({ children, pageTitle }: Props) => {\r\n  return (\r\n    <Base>\r\n      <Container\r\n        className=\"exh_main_content mt-2\"\r\n        style={{backgroundColor:\"white\"}}\r\n        fluid \r\n      >{children}</Container>\r\n     \r\n    </Base>\r\n  )\r\n}\r\n\r\nexport default BaseExhibitionConflictDE\r\n\r\n","import React, {Component} from \"react\";\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; \r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport creds from '../questionsIdentities/cred/myjson.json'\r\nimport {GoogleSpreadsheet} from \"google-spreadsheet\"\r\nimport { Button } from \"react-bootstrap\"\r\n\r\nconst MapQOne = () => {\r\n  mapboxgl.accessToken = \"pk.eyJ1Ijoia2lhLXoiLCJhIjoiY2xkZzRnZjRnMHRvazN2bzZ0cnh4OWtzeSJ9.COmQgzmRsKnMZKw77WDF6w\"\r\n  const doc = new GoogleSpreadsheet(creds.sheet_id)\r\n  const [finalGeoJson, setfinalGeoJson] = useState([]);\r\n\r\n        const [AllRows, setAllRows] = useState([]);\r\n        useEffect( () => { \r\n          async function fetchData() {\r\n                await doc.useServiceAccountAuth(creds);\r\n                await doc.loadInfo();      \r\n                await doc.getInfo();\r\n                const sheet = doc.sheetsByIndex[2];\r\n                const rows = await sheet.getRows();\r\n                const AllRows = rows.map((GoogleSpreadsheetRow) => GoogleSpreadsheetRow._rawData);\r\n            //  console.log(AllRows) \r\n                setAllRows(AllRows)\r\n\r\n                const sortingRows = AllRows.map(({\r\n                  [0]: exact_match,\t[1]: longitude, [2]: latitude, [3]: Country,\r\n                  [4]: Ans1a,\t[5]: Ans1b,\t[6]: \tAns1c,\t[7]: \tAns1d,\t\r\n                  [8]: Ans1aFin,\t[9]: Ans1bFin,\t[10]: Ans1cFin,\t[11]: Ans1dFin\r\n                }) => \r\n                ({\r\n                  exact_match,\tlongitude, latitude, Country,\r\n                  Ans1a,\tAns1b,\tAns1c,\tAns1d,\t\t\r\n                  Ans1aFin,\tAns1bFin,\tAns1cFin,\tAns1dFin\r\n                  }))\r\n            //  console.log(sortingRows)\r\n\r\n            const hasAnswers = sortingRows.filter((res) => res.Ans1aFin !== \"no answers\");\r\n            // console.log(hasAnswers)\r\n           \r\n            const MyGeoJson = hasAnswers.map(row => {\r\n              return {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    \"Country\": row.Country,\r\n                    \"Answer_A\": row.Ans1aFin,\r\n                    \"Answer_B\": row.Ans1bFin,\r\n                    \"Answer_C\": row.Ans1cFin,\r\n                    \"Answer_D\": row.Ans1dFin,\r\n                },\r\n                \"geometry\": {\r\n                  \"coordinates\": [Number(row.longitude), Number(row.latitude)],\r\n                  \"type\": \"Point\",\r\n                },\r\n              }\r\n            })      \r\n            \r\n            setfinalGeoJson(MyGeoJson)\r\n\r\n        }\r\n        fetchData();\r\n    //    console.log(finalGeoJson)\r\n      }, []);\r\n\r\n      \r\n        const mapContainer = useRef(null);\r\n        useEffect(() => {\r\n            const map = new mapboxgl.Map({\r\n              container: mapContainer.current,\r\n              style: 'mapbox://styles/mapbox/light-v11',\r\n              center: [23.742, 37.975],\r\n              zoom: 5.15,\r\n              projection: 'naturalEarth',\r\n            });\r\n    \r\n            map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\r\n            \r\n            const GeoJsonColl = {\r\n                \"type\": \"FeatureCollection\",\r\n                \"features\": \r\n                    finalGeoJson\r\n              };\r\n                // This GeoJson is valid\r\n                // console.log(JSON.stringify(GeoJsonColl))            \r\n     \r\n        map.on('load', () => {\r\n\r\n        map.addLayer({\r\n                id: 'resultsAnswerOneIdentities',\r\n                type: 'circle',\r\n                source: {\r\n                  type: 'geojson',\r\n                  data: GeoJsonColl\r\n                },\r\n                paint: {\r\n               'circle-color': '#526d9d',\r\n               'circle-stroke-width': 1,\r\n               'circle-stroke-color': '#526d9d',\r\n               'circle-opacity': 0.5,\r\n               'circle-radius': {\r\n                property: 'Answer_A',\r\n                // think how to make them more proportional to our responses\r\n                stops: [\r\n                  [0, 0],\r\n                  [1, 5],\r\n                  [5, 20],\r\n                ]\r\n              }\r\n                }\r\n            })\r\n    \r\n// When a click event occurs on a feature in the csvData layer, open a popup at the\r\n// location of the feature, with description HTML from its properties.            \r\n                map.on('click', 'resultsAnswerOneIdentities', function(e) {\r\n                var coordinates = e.features[0].geometry.coordinates.slice();\r\n\r\n                // set popup text\r\n                var description =\r\n                `<h4>` +\r\n                e.features[0].properties.Country +\r\n                `</h4> \r\n                <ul>\r\n                  <li>A: Συνολικά ` + e.features[0].properties.Answer_A + ` άνθρωποι</li>\r\n                  <li>B: Συνολικά ` + e.features[0].properties.Answer_B + ` άνθρωποι</li>\r\n                  <li>C: Συνολικά ` + e.features[0].properties.Answer_C + ` άνθρωποι</li>\r\n                  <li>D: Συνολικά ` + e.features[0].properties.Answer_D + ` άνθρωποι</li>\r\n                </ul>` \r\n\r\n               //add Popup to map\r\n                  new mapboxgl.Popup()\r\n                    .setLngLat(coordinates)\r\n                    .setHTML(description)\r\n                    .addTo(map);\r\n                });\r\n                \r\n                // Change the cursor to a pointer when the mouse is over the places layer.\r\n                map.on('mouseenter', 'resultsAnswerOneIdentities', function() {\r\n                  map.getCanvas().style.cursor = 'pointer';\r\n                });\r\n                \r\n                // Change it back to a pointer when it leaves.\r\n                map.on('mouseleave', 'places', function() {\r\n                  map.getCanvas().style.cursor = '';\r\n                });\r\n                \r\n        })\r\n  })\r\n\r\n    return (\r\n    <React.Fragment>\r\n       <div>\r\n            <div ref={mapContainer} className=\"map-container\" />\r\n        </div>\r\n     <div className=\"exh_map_result_content\">\r\n        <h2>Ερώτηση 1:</h2>\r\n            <h3> «Οι ρόλοι, συμπεριλαμβανομένων των ρόλων των φύλων, πάντα συνδέονται με τα προνόμια. Μόνο όσοι αναλαμβάνουν έναν ρόλο μπορούν να απολαύσουν τα προνόμια που σχετίζονται με αυτόν. Επομένως, η ανάληψη ενός ρόλου αυξάνει τον χώρο της προσωπικής ελευθερίας». – Συμφωνείτε με αυτή την άποψη; </h3> \r\n                <div className=\"exh_map_quest_result_red\"><span>Α</span><p>\r\n                Ναι, συμφωνώ. Τα δικαιώματα είναι πάντα συνδεδεμένα με τους ρόλους. Όποιος δεν αναλαμβάνει κάποιο ρόλο, κατά συνέπεια αποκλείεται χωρίς καθόλου δικαιώματα. Όλο αυτό ξεκινά με την ιθαγένεια και τελειώνει με το φύλο.\r\n                </p></div>\r\n                <div className=\"exh_map_quest_result_red\"><span>Β</span><p>\r\n                Οποιοσδήποτε μιλά με αυτό τον τρόπο, υποθέτει σιωπηρά ότι κάποιος μπορεί να επιλέγει ελεύθερα τον ρόλο του. Ωστόσο, οι ρόλοι δεν επιλέγονται, επιβάλλονται από την κοινωνία. Αυτό ισχύει και για την ελευθερία που σχετίζεται με έναν ρόλο. Σε τι χρησιμεύει άλλωστε η πιο μεγάλη ελευθερία, αν δεν είναι η ελευθερία που εγώ θέλω; - Σε τίποτα.\r\n                  </p></div>\r\n                <div className=\"exh_map_quest_result_red\"><span>Γ</span><p>\r\n                Αυτή είναι η μία μόνο πλευρά του νομίσματος. Γιατί ακόμη πιο σπουδαίες από τις ελευθερίες που κερδίζει κάποιος, είναι εκείνες που δεν κερδίζει. Επομένως, όποιος αναλαμβάνει έναν ρόλο, κλείνει την πόρτα σε άλλους και επομένως σε άλλα προνόμια. Συνεπώς, η ανάληψη ενός ρόλου είναι πάντα φορτισμένη αρνητικά.\r\n                  </p></div>\r\n                <div className=\"exh_map_quest_result_red\"><span>Δ</span><p>\r\n                Δεν μου αρέσει να σκέφτομαι τη ζωή μου με όρους κοινωνικών ρόλων. Είμαι απλά ο εαυτός μου και θέλω απλά να είμαι αυτό. Για μένα, η ανάληψη ενός ρόλου συνεπάγεται το να είσαι ψεύτικος και να προσποιείσαι.\r\n                  </p></div>\r\n      </div>\r\n\r\n    </React.Fragment>\r\n    );          \r\n}\r\n\r\nexport default MapQOne","import React, {Component} from \"react\";\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; \r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport creds from '../questionsIdentities/cred/myjson.json'\r\nimport {GoogleSpreadsheet} from \"google-spreadsheet\"\r\nimport { Button } from \"react-bootstrap\"\r\n\r\nconst MapQTwo = () => {\r\n  mapboxgl.accessToken = \"pk.eyJ1Ijoia2lhLXoiLCJhIjoiY2xkZzRnZjRnMHRvazN2bzZ0cnh4OWtzeSJ9.COmQgzmRsKnMZKw77WDF6w\"\r\n  const doc = new GoogleSpreadsheet(creds.sheet_id)\r\n  const [finalGeoJsonTwo, setfinalGeoJsonTwo] = useState([]);\r\n\r\n        const [AllRowsTwo, setAllRowsTwo] = useState([]);\r\n        useEffect( () => { \r\n          async function fetchData() {\r\n                await doc.useServiceAccountAuth(creds);\r\n                await doc.loadInfo();      \r\n                await doc.getInfo();\r\n                const sheetTwo = doc.sheetsByIndex[5];\r\n                const rowsTwo = await sheetTwo.getRows();\r\n                const AllRowsTwo = rowsTwo.map((GoogleSpreadsheetRow) => GoogleSpreadsheetRow._rawData);\r\n            //  console.log(AllRows) \r\n                setAllRowsTwo(AllRowsTwo)\r\n\r\n                const sortingRowsTwo = AllRowsTwo.map(({\r\n                  [0]: exact_match,\t[1]: longitude, [2]: latitude, [3]: Country,\r\n                  [4]: Ans2a,\t[5]: Ans2b,\t[6]: \tAns2c,\t[7]: \tAns2d,\t\t\r\n                  [8]: Ans2aFin,\t[9]: Ans2bFin,\t[10]: Ans2cFin,\t[11]: Ans2dFin\r\n                }) => \r\n                ({\r\n                  exact_match,\tlongitude, latitude, Country,\r\n                  Ans2a,\tAns2b,\tAns2c,\tAns2d,\t\t\r\n                  Ans2aFin,\tAns2bFin,\tAns2cFin,\tAns2dFin\r\n                  }))\r\n            //  console.log(sortingRows)\r\n\r\n            const hasAnswersTwo = sortingRowsTwo.filter((res) => res.Ans2aFin !== \"no answers\");\r\n            // console.log(hasAnswers)\r\n           \r\n            const MyGeoJsonTwo = hasAnswersTwo.map(row => {\r\n              return {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    \"Country\": row.Country,\r\n                    \"Answer_A\": row.Ans2aFin,\r\n                    \"Answer_B\": row.Ans2bFin,\r\n                    \"Answer_C\": row.Ans2cFin,\r\n                    \"Answer_D\": row.Ans2dFin,\r\n                },\r\n                \"geometry\": {\r\n                  \"coordinates\": [Number(row.longitude), Number(row.latitude)],\r\n                  \"type\": \"Point\",\r\n                },\r\n              }\r\n            })      \r\n            \r\n            setfinalGeoJsonTwo(MyGeoJsonTwo)\r\n\r\n        }\r\n        fetchData();\r\n    //    console.log(finalGeoJson)\r\n      }, []);\r\n\r\n      \r\n        const mapContainer = useRef(null);\r\n        useEffect(() => {\r\n            const map = new mapboxgl.Map({\r\n              container: mapContainer.current,\r\n              style: 'mapbox://styles/mapbox/light-v11',\r\n              center: [23.742, 37.975],\r\n              zoom: 5.15,\r\n              projection: 'naturalEarth',\r\n            });\r\n    \r\n            map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\r\n            \r\n            const GeoJsonCollTwo = {\r\n                \"type\": \"FeatureCollection\",\r\n                \"features\": \r\n                    finalGeoJsonTwo\r\n              };\r\n                // This GeoJson is valid\r\n                // console.log(JSON.stringify(GeoJsonColl))            \r\n     \r\n        map.on('load', () => {\r\n\r\n        map.addLayer({\r\n                id: 'resultsAnswerTwoIdentities',\r\n                type: 'circle',\r\n                source: {\r\n                  type: 'geojson',\r\n                  data: GeoJsonCollTwo\r\n                },\r\n                paint: {\r\n               'circle-color': '#526d9d',\r\n               'circle-stroke-width': 1,\r\n               'circle-stroke-color': '#526d9d',\r\n               'circle-opacity': 0.5,\r\n               'circle-radius': {\r\n                property: 'Answer_A',\r\n                // think how to make them more proportional to our responses\r\n                stops: [\r\n                  [0, 0],\r\n                  [1, 5],\r\n                  [5, 20],\r\n                ]\r\n              }\r\n                }\r\n            })\r\n    \r\n// When a click event occurs on a feature in the csvData layer, open a popup at the\r\n// location of the feature, with description HTML from its properties.            \r\n                map.on('click', 'resultsAnswerTwoIdentities', function(e) {\r\n                var coordinates = e.features[0].geometry.coordinates.slice();\r\n\r\n                // set popup text\r\n                var description =\r\n                `<h4>` +\r\n                e.features[0].properties.Country +\r\n                `</h4> \r\n                <ul>\r\n                  <li>A: Συνολικά ` + e.features[0].properties.Answer_A + ` άνθρωποι</li>\r\n                  <li>B: Συνολικά ` + e.features[0].properties.Answer_B + ` άνθρωποι</li>\r\n                  <li>C: Συνολικά ` + e.features[0].properties.Answer_C + ` άνθρωποι</li>\r\n                  <li>D: Συνολικά ` + e.features[0].properties.Answer_D + ` άνθρωποι</li>\r\n                </ul>` \r\n\r\n               //add Popup to map\r\n                  new mapboxgl.Popup()\r\n                    .setLngLat(coordinates)\r\n                    .setHTML(description)\r\n                    .addTo(map);\r\n                });\r\n                \r\n                // Change the cursor to a pointer when the mouse is over the places layer.\r\n                map.on('mouseenter', 'resultsAnswerTwoIdentities', function() {\r\n                  map.getCanvas().style.cursor = 'pointer';\r\n                });\r\n                \r\n                // Change it back to a pointer when it leaves.\r\n                map.on('mouseleave', 'places', function() {\r\n                  map.getCanvas().style.cursor = '';\r\n                });\r\n                \r\n        })\r\n  })\r\n\r\n    return (\r\n    <React.Fragment>\r\n        <div>\r\n            <div ref={mapContainer} className=\"map-container\" />\r\n        </div>\r\n        <div className=\"exh_map_result_content\">\r\n        <h2>Ερώτηση 2:</h2>\r\n            <h3>\r\n            Οι ρόλοι των φύλων υπήρχαν σε όλες τις εποχές και σε κάθε κοινωνία. Τι πιστεύετε: μια κοινωνία χωρίς τους ρόλους των φύλων θα είναι εφικτή στο μέλλον; \r\n              </h3> \r\n              <div className=\"exh_map_quest_result_red\"><span>Α</span><p>\r\n              Όχι. Δεν μπορώ να το φανταστώ αυτό. Οι ρόλοι των φύλων δεν αποτελούν εφεύρεση ενός ποιητή, αλλά συνδέονται με το βιολογικό φύλο. Όσο τα φύλα διαφέρουν βιολογικά, θα υπάρχουν και διαφορετικοί ρόλοι φύλων.\r\n              </p></div>\r\n              <div className=\"exh_map_quest_result_red\"><span>Β</span><p>\r\n              Δεν είμαι σίγουρος αν μπορώ να εκφέρω άποψη για κάτι τέτοιο. Είμαι ανοιχτός σε διαφορετικούς ρόλους φύλων. Αλλά το πρόβλημα με τους ρόλους φύλων δεν είναι η ύπαρξή τους. Το πρόβλημα είναι οι διακρίσεις που μπορεί να σχετίζονται με έναν τέτοιο ρόλο.\r\n                </p></div>\r\n              <div className=\"exh_map_quest_result_red\"><span>Γ</span><p>\r\n              Ναι. Εξάλλου, το κοινωνικό φύλο δεν είναι κάτι φυσικό παρά μόνο μια ανθρώπινη εφεύρεση. Αν θέλουμε να χτίσουμε μια κοινωνία χωρίς ρόλους φύλων, πρέπει απλά να σταματήσουμε να δίνουμε τόση προσοχή στο κοινωνικό φύλο. Γιατί να μην εφικτό κάτι τέτοιο;\r\n                </p></div>\r\n              <div className=\"exh_map_quest_result_red\"><span>Δ</span><p>\r\n              Μπορώ ακόμη και να φανταστώ μια κοινωνία χωρισμένη στα δυο. Στο ένα μέρος της κοινωνίας θα υπάρχουν ακόμη οι ρόλοι των φύλων. Στο άλλο μέρος της κοινωνίας, απλώς δεν θα υπάρχουν.                \r\n              </p></div>\r\n        </div>\r\n\r\n      </React.Fragment>\r\n    );          \r\n}\r\n\r\nexport default MapQTwo\r\n","import React, {Component} from \"react\";\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; \r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport creds from '../questionsIdentities/cred/myjson.json'\r\nimport {GoogleSpreadsheet} from \"google-spreadsheet\"\r\nimport { Button } from \"react-bootstrap\"\r\n\r\nconst MapQThree = () => {\r\n  mapboxgl.accessToken = \"pk.eyJ1Ijoia2lhLXoiLCJhIjoiY2xkZzRnZjRnMHRvazN2bzZ0cnh4OWtzeSJ9.COmQgzmRsKnMZKw77WDF6w\"\r\n  const doc = new GoogleSpreadsheet(creds.sheet_id)\r\n  const [finalGeoJsonThree, setfinalGeoJsonThree] = useState([]);\r\n\r\n        const [AllRowsThree, setAllRowsThree] = useState([]);\r\n        useEffect( () => { \r\n          async function fetchData() {\r\n                await doc.useServiceAccountAuth(creds);\r\n                await doc.loadInfo();      \r\n                await doc.getInfo();\r\n                const sheetThree = doc.sheetsByIndex[8];\r\n                const rowsThree = await sheetThree.getRows();\r\n                const AllRowsThree = rowsThree.map((GoogleSpreadsheetRow) => GoogleSpreadsheetRow._rawData);\r\n            //  console.log(AllRows) \r\n                setAllRowsThree(AllRowsThree)\r\n\r\n                const sortingRowsThree = AllRowsThree.map(({\r\n                  [0]: exact_match,\t[1]: longitude, [2]: latitude, [3]: Country,\r\n                  [4]: Ans3a,\t[5]: Ans3b,\t[6]: \tAns3c,\t[7]: \tAns3d,\t[8]: \tAns3e,\t\r\n                  [9]: Ans3aFin,\t[10]: Ans3bFin,\t[11]: Ans3cFin,\t[12]: Ans3dFin,\t[13]: Ans3eFin\r\n                }) => \r\n                ({\r\n                  exact_match,\tlongitude, latitude, Country,\r\n                  Ans3a,\tAns3b,\tAns3c,\tAns3d,\tAns3e,\t\r\n                  Ans3aFin,\tAns3bFin,\tAns3cFin,\tAns3dFin,\tAns3eFin\r\n                  }))\r\n            //  console.log(sortingRows)\r\n\r\n            const hasAnswersThree = sortingRowsThree.filter((res) => res.Ans3aFin !== \"no answers\");\r\n            // console.log(hasAnswers)\r\n           \r\n            const MyGeoJsonThree = hasAnswersThree.map(row => {\r\n              return {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    \"Country\": row.Country,\r\n                    \"Answer_A\": row.Ans3aFin,\r\n                    \"Answer_B\": row.Ans3bFin,\r\n                    \"Answer_C\": row.Ans3cFin,\r\n                    \"Answer_D\": row.Ans3dFin,\r\n                    \"Answer_E\": row.Ans3eFin\r\n                },\r\n                \"geometry\": {\r\n                  \"coordinates\": [Number(row.longitude), Number(row.latitude)],\r\n                  \"type\": \"Point\",\r\n                },\r\n              }\r\n            })      \r\n            \r\n            setfinalGeoJsonThree(MyGeoJsonThree)\r\n\r\n        }\r\n        fetchData();\r\n    //    console.log(finalGeoJson)\r\n      }, []);\r\n\r\n      \r\n        const mapContainer = useRef(null);\r\n        useEffect(() => {\r\n            const map = new mapboxgl.Map({\r\n              container: mapContainer.current,\r\n              style: 'mapbox://styles/mapbox/light-v11',\r\n              center: [23.742, 37.975],\r\n              zoom: 5.15,\r\n              projection: 'naturalEarth',\r\n            });\r\n    \r\n            map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\r\n            \r\n            const GeoJsonCollThree = {\r\n                \"type\": \"FeatureCollection\",\r\n                \"features\": \r\n                    finalGeoJsonThree\r\n              };\r\n                // This GeoJson is valid\r\n                // console.log(JSON.stringify(GeoJsonColl))            \r\n     \r\n        map.on('load', () => {\r\n\r\n        map.addLayer({\r\n                id: 'resultsAnswerThreeIdentities',\r\n                type: 'circle',\r\n                source: {\r\n                  type: 'geojson',\r\n                  data: GeoJsonCollThree\r\n                },\r\n                paint: {\r\n               'circle-color': '#526d9d',\r\n               'circle-stroke-width': 1,\r\n               'circle-stroke-color': '#526d9d',\r\n               'circle-opacity': 0.5,\r\n               'circle-radius': {\r\n                property: 'Answer_A',\r\n                // think how to make them more proportional to our responses\r\n                stops: [\r\n                  [0, 0],\r\n                  [1, 5],\r\n                  [5, 20],\r\n                ]\r\n              }\r\n                }\r\n            })\r\n    \r\n// When a click event occurs on a feature in the csvData layer, open a popup at the\r\n// location of the feature, with description HTML from its properties.            \r\n                map.on('click', 'resultsAnswerThreeIdentities', function(e) {\r\n                var coordinates = e.features[0].geometry.coordinates.slice();\r\n\r\n                // set popup text\r\n                var description =\r\n                `<h4>` +\r\n                e.features[0].properties.Country +\r\n                `</h4> \r\n                <ul>\r\n                  <li>A: Συνολικά ` + e.features[0].properties.Answer_A + ` άνθρωποι</li>\r\n                  <li>B: Συνολικά ` + e.features[0].properties.Answer_B + ` άνθρωποι</li>\r\n                  <li>C: Συνολικά ` + e.features[0].properties.Answer_C + ` άνθρωποι</li>\r\n                  <li>D: Συνολικά ` + e.features[0].properties.Answer_D + ` άνθρωποι</li>\r\n                  <li>E: Συνολικά ` + e.features[0].properties.Answer_E + ` άνθρωποι</li>\r\n                </ul>` \r\n\r\n               //add Popup to map\r\n                  new mapboxgl.Popup()\r\n                    .setLngLat(coordinates)\r\n                    .setHTML(description)\r\n                    .addTo(map);\r\n                });\r\n                \r\n                // Change the cursor to a pointer when the mouse is over the places layer.\r\n                map.on('mouseenter', 'resultsAnswerThreeIdentities', function() {\r\n                  map.getCanvas().style.cursor = 'pointer';\r\n                });\r\n                \r\n                // Change it back to a pointer when it leaves.\r\n                map.on('mouseleave', 'places', function() {\r\n                  map.getCanvas().style.cursor = '';\r\n                });\r\n                \r\n        })\r\n  })\r\n\r\n    return (\r\n    <React.Fragment>\r\n        <div>\r\n            <div ref={mapContainer} className=\"map-container\" />\r\n        </div>\r\n        <div className=\"exh_map_result_content\">\r\n        <h2>Ερώτηση 3:</h2>\r\n            <h3>\r\n            Από που προέρχονται οι ρόλοι των φύλων;\r\n            </h3> \r\n            <div className=\"exh_map_quest_result_red\"><span>Α</span><p>\r\n            Οι ρόλοι των φύλων έχουν τις ρίζες τους στη βιολογική ποικιλομορφία του ανθρώπου. Αν όλοι οι άνθρωποι είχαν βιολογικά το ίδιο φύλο, δε θα υπήρχαν ρόλοι.\r\n        </p></div>\r\n            <div className=\"exh_map_quest_result_red\"><span>Β</span><p>\r\n            Οι ρόλοι έχουν πάντα να κάνουν με τον καταμερισμό της δύναμης. Οι ισχυροί αποκαλούνται «άρχοντες» και οι κατώτεροί τους «υπηρέτες». Το ίδιο ισχύει και με τα κοινωνικά φύλα.\r\n              </p></div>\r\n            <div className=\"exh_map_quest_result_red\"><span>Γ</span><p>\r\n            Δεν έχει σημασία από που προκύπτουν οι ρόλοι των φύλων. Αυτό που έχει σημασία είναι πώς να τους υπερβεί κανείς όταν είναι άδικοι. Το μόνο που χρειάζεται είναι καλή θέληση.\r\n              </p></div>\r\n            <div className=\"exh_map_quest_result_red\"><span>Δ</span><p>\r\n            Στο παρελθόν, οι ρόλοι των φύλων θεωρούνταν απόρροια της φύσης κάθε ανθρώπου. Σήμερα γνωρίζουμε περισσότερα. Για παράδειγμα, οι άνθρωποι έχουν μάθει να ξεχωρίζουν το «κοινωνικό» από το «βιολογικό» φύλο.  Από ιστορικής πλευράς επομένως, οι ρόλοι των φύλων δεν είναι τίποτα παραπάνω από ανθρωπολογικά λάθη.\r\n              </p></div>\r\n            <div className=\"exh_map_quest_result_red\"><span>Ε</span><p>\r\n            Ως «σωβινισμός» ορίζεται η πεποίθηση στην ανωτερότητα της ομάδας στην οποία ανήκουμε. Ας πάρουμε ως παραδείγματα το χρώμα του δέρματος, τη θρησκεία και το κοινωνικό φύλο. Οι κλασικοί ρόλοι των φύλων είναι μόνο οι εκδηλώσεις αυτού του σωβινισμού.              \r\n              </p></div>\r\n          </div>\r\n\r\n    </React.Fragment>\r\n    );          \r\n}\r\n\r\nexport default MapQThree\r\n","import React, {Component} from \"react\";\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; \r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport creds from '../questionsIdentities/cred/myjson.json'\r\nimport {GoogleSpreadsheet} from \"google-spreadsheet\"\r\nimport { Button } from \"react-bootstrap\"\r\n\r\nconst MapQFour = () => {\r\n  mapboxgl.accessToken = \"pk.eyJ1Ijoia2lhLXoiLCJhIjoiY2xkZzRnZjRnMHRvazN2bzZ0cnh4OWtzeSJ9.COmQgzmRsKnMZKw77WDF6w\"\r\n  const doc = new GoogleSpreadsheet(creds.sheet_id)\r\n  const [finalGeoJsonFour, setfinalGeoJsonFour] = useState([]);\r\n\r\n        const [AllRowsFour, setAllRowsFour] = useState([]);\r\n        useEffect( () => { \r\n          async function fetchData() {\r\n                await doc.useServiceAccountAuth(creds);\r\n                await doc.loadInfo();      \r\n                await doc.getInfo();\r\n                const sheetFour = doc.sheetsByIndex[11];\r\n                const rowsFour = await sheetFour.getRows();\r\n                const AllRowsFour = rowsFour.map((GoogleSpreadsheetRow) => GoogleSpreadsheetRow._rawData);\r\n            //  console.log(AllRows) \r\n                setAllRowsFour(AllRowsFour)\r\n\r\n                const sortingRowsFour = AllRowsFour.map(({\r\n                  [0]: exact_match,\t[1]: longitude, [2]: latitude, [3]: Country,\r\n                  [4]: Ans4a,\t[5]: Ans4b,\t[6]: \tAns4c,\t[7]: \tAns4d,\t[8]: \tAns4e,\t\r\n                  [9]: Ans4aFin,\t[10]: Ans4bFin,\t[11]: Ans4cFin,\t[12]: Ans4dFin,\t[13]: Ans4eFin\r\n                }) => \r\n                ({\r\n                  exact_match,\tlongitude, latitude, Country,\r\n                  Ans4a,\tAns4b,\tAns4c,\tAns4d,\tAns4e,\t\r\n                  Ans4aFin,\tAns4bFin,\tAns4cFin,\tAns4dFin,\tAns4eFin\r\n                  }))\r\n            //  console.log(sortingRows)\r\n\r\n            const hasAnswersFour = sortingRowsFour.filter((res) => res.Ans4aFin !== \"no answers\");\r\n            // console.log(hasAnswers)\r\n           \r\n            const MyGeoJsonFour = hasAnswersFour.map(row => {\r\n              return {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    \"Country\": row.Country,\r\n                    \"Answer_A\": row.Ans4aFin,\r\n                    \"Answer_B\": row.Ans4bFin,\r\n                    \"Answer_C\": row.Ans4cFin,\r\n                    \"Answer_D\": row.Ans4dFin,\r\n                    \"Answer_E\": row.Ans4eFin,\r\n                },\r\n                \"geometry\": {\r\n                  \"coordinates\": [Number(row.longitude), Number(row.latitude)],\r\n                  \"type\": \"Point\",\r\n                },\r\n              }\r\n            })      \r\n            \r\n            setfinalGeoJsonFour(MyGeoJsonFour)\r\n\r\n        }\r\n        fetchData();\r\n    //    console.log(finalGeoJson)\r\n      }, []);\r\n\r\n      \r\n        const mapContainer = useRef(null);\r\n        useEffect(() => {\r\n            const map = new mapboxgl.Map({\r\n              container: mapContainer.current,\r\n              style: 'mapbox://styles/mapbox/light-v11',\r\n              center: [23.742, 37.975],\r\n              zoom: 5.15,\r\n              projection: 'naturalEarth',\r\n            });\r\n    \r\n            map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\r\n            \r\n            const GeoJsonCollFour = {\r\n                \"type\": \"FeatureCollection\",\r\n                \"features\": \r\n                    finalGeoJsonFour\r\n              };\r\n                // This GeoJson is valid\r\n                // console.log(JSON.stringify(GeoJsonColl))            \r\n     \r\n        map.on('load', () => {\r\n\r\n        map.addLayer({\r\n                id: 'resultsAnswerFourIdentities',\r\n                type: 'circle',\r\n                source: {\r\n                  type: 'geojson',\r\n                  data: GeoJsonCollFour\r\n                },\r\n                paint: {\r\n               'circle-color': '#526d9d',\r\n               'circle-stroke-width': 1,\r\n               'circle-stroke-color': '#526d9d',\r\n               'circle-opacity': 0.5,\r\n               'circle-radius': {\r\n                property: 'Answer_A',\r\n                // think how to make them more proportional to our responses\r\n                stops: [\r\n                  [0, 0],\r\n                  [1, 5],\r\n                  [5, 20],\r\n                ]\r\n              }\r\n                }\r\n            })\r\n    \r\n// When a click event occurs on a feature in the csvData layer, open a popup at the\r\n// location of the feature, with description HTML from its properties.            \r\n                map.on('click', 'resultsAnswerFourIdentities', function(e) {\r\n                var coordinates = e.features[0].geometry.coordinates.slice();\r\n\r\n              // set popup text\r\n              var description =\r\n              `<h4>` +\r\n              e.features[0].properties.Country +\r\n              `</h4> \r\n              <ul>\r\n                <li>A: Συνολικά ` + e.features[0].properties.Answer_A + ` άνθρωποι</li>\r\n                <li>B: Συνολικά ` + e.features[0].properties.Answer_B + ` άνθρωποι</li>\r\n                <li>C: Συνολικά ` + e.features[0].properties.Answer_C + ` άνθρωποι</li>\r\n                <li>D: Συνολικά ` + e.features[0].properties.Answer_D + ` άνθρωποι</li>\r\n                <li>E: Συνολικά ` + e.features[0].properties.Answer_E + ` άνθρωποι</li>\r\n              </ul>` \r\n\r\n               //add Popup to map\r\n                  new mapboxgl.Popup()\r\n                    .setLngLat(coordinates)\r\n                    .setHTML(description)\r\n                    .addTo(map);\r\n                });\r\n                \r\n                // Change the cursor to a pointer when the mouse is over the places layer.\r\n                map.on('mouseenter', 'resultsAnswerFourIdentities', function() {\r\n                  map.getCanvas().style.cursor = 'pointer';\r\n                });\r\n                \r\n                // Change it back to a pointer when it leaves.\r\n                map.on('mouseleave', 'places', function() {\r\n                  map.getCanvas().style.cursor = '';\r\n                });\r\n                \r\n        })\r\n  })\r\n\r\n    return (\r\n    <React.Fragment>\r\n        <div>\r\n            <div ref={mapContainer} className=\"map-container\" />\r\n        </div>\r\n        <div className=\"exh_map_result_content\">\r\n        <h2>Ερώτηση 4:</h2>\r\n            <h3>\r\n            «Ταυτότητα» σημαίνει: το να έχω την απάντηση στην ερώτηση «ποιος είμαι πραγματικά». «Ταυτότητα Φύλου» επομένως σημαίνει: το να έχω την απάντηση στην ερώτηση «σε ποιο κοινωνικό φύλο ανήκω στην πραγματικότητα». Πόσο σημαντική είναι η απάντηση σε αυτή την ερώτηση για σένα;\r\n            </h3> \r\n            <div className=\"exh_map_quest_result_red\"><span>Α</span><p>\r\n            Είναι πολύ σημαντικό για μένα να γνωρίζω σε ποιο κοινωνικό φύλο ανήκω. Είμαι μέρος του κοινωνικού μου φύλου και δεν μπορώ να το αλλάξω όπως αλλάζω πάροχο ίντερνετ.\r\n            </p></div>\r\n            <div className=\"exh_map_quest_result_red\"><span>Β</span><p>\r\n            Κατά τη γνώμη μου, δίνεται υπερβολικά μεγάλη προσοχή στο θέμα της ταυτότητας. Δεν έχει σημασία αν έχω μια ταυτότητα οποιουδήποτε είδους. Το μόνο πράγμα που έχει σημασία είναι η δική μου ευτυχία.\r\n              </p></div>\r\n            <div className=\"exh_map_quest_result_red\"><span>Γ</span><p>\r\n            Για μένα, η ερώτηση της ταυτότητας δεν έχει ενδιαφέρον. Δεν γνωρίζω καν ποιος είμαι. Ακόμη και να γνώριζα, τι όφελος θα μπορούσα να έχω από αυτό;\r\n              </p></div>\r\n            <div className=\"exh_map_quest_result_red\"><span>Δ</span><p>\r\n            Αρνούμαι να απαντήσω στην ερώτηση της ταυτότητάς μου. Προϋποθέτει πως υπάρχει μέσα μου κάτι που παραμένει πάντα ίδιο – η φύση μου, συμπεριλαμβανομένης της φύσης μου ως σεξουαλικού όντος. Αλλά αυτό δεν ισχύει για εμένα. Για εμένα, το να κυνηγώ την ταυτότητά μου, είναι σαν να κυνηγώ ένα φάντασμα.\r\n              </p></div>\r\n            <div className=\"exh_map_quest_result_red\"><span>Ε</span><p>\r\n            Στον κόσμο στον οποίο ζούμε κυριαρχούν ακόμη οι ρόλοι των φύλων. Αυτό είναι ο λόγος για τον οποίο με ενδιαφέρουν. Ωστόσο, ελπίζω ότι για τις επόμενες γενιές δεν θα μετράει σε ποιο κοινωνικό φύλο ανήκει κανείς.\r\n              </p></div>\r\n        </div>\r\n\r\n    </React.Fragment>\r\n\r\n    );          \r\n}\r\n\r\nexport default MapQFour\r\n","import React, {useState} from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport { Container, Badge, Button, Row, Col } from \"react-bootstrap\"\r\nimport BaseExhibitionConflictDE from \"../../../../../components/static/BaseExhibitionConflicts/inGalleryIndex\"\r\nimport MapQOne from \"../../../../../components/shared/ExhibitionQuestions/inGalleryIdentities/Q1_mapIdentitiesGR\"\r\nimport MapQTwo from \"../../../../../components/shared/ExhibitionQuestions/inGalleryIdentities/Q2_mapIdentitiesGR\"\r\nimport MapQThree from \"../../../../../components/shared/ExhibitionQuestions/inGalleryIdentities/Q3_mapIdentitiesGR\"\r\nimport MapQFour from \"../../../../../components/shared/ExhibitionQuestions/inGalleryIdentities/Q4_mapIdentitiesGR\"\r\n\r\nconst IdentitiesAnswersGR: React.FC = () => {\r\n\r\n  const [MapQOneVisible, setMapQOneVisible] = useState(false);\r\n  const [MapQTwoVisible, setMapQTwoVisible] = useState(false);\r\n  const [MapQThreeVisible, setMapQThreeVisible] = useState(false);\r\n  const [MapQFourVisible, setMapQFourVisible] = useState(false);\r\n  const [activeButton, setActiveButton] = useState<string | undefined>(undefined);\r\n\r\n  const handleMapQOne = () => {\r\n    setMapQOneVisible((isVisible) => !isVisible);\r\n    setMapQTwoVisible(false);\r\n    setMapQThreeVisible(false);\r\n    setMapQFourVisible(false);\r\n    setActiveButton(\"Question 1\");\r\n  };\r\n\r\n  const handleMapQTwo = () => {\r\n    setMapQTwoVisible((isVisible) => !isVisible);\r\n    setMapQOneVisible(false);\r\n    setMapQThreeVisible(false);\r\n    setMapQFourVisible(false);\r\n    setActiveButton(\"Question 2\");\r\n  };\r\n\r\n  const handleMapQThree = () => {\r\n    setMapQThreeVisible((isVisible) => !isVisible);\r\n    setMapQOneVisible(false);\r\n    setMapQTwoVisible(false);\r\n    setMapQFourVisible(false);\r\n    setActiveButton(\"Question 3\");\r\n  };\r\n\r\n  const handleMapQFour = () => {\r\n    setMapQFourVisible((isVisible) => !isVisible);\r\n    setMapQOneVisible(false);\r\n    setMapQTwoVisible(false);\r\n    setMapQThreeVisible(false);\r\n    setActiveButton(\"Question 4\");\r\n  };\r\n\r\n\r\nreturn (\r\n<BaseExhibitionConflictDE>\r\n<div className=\"exh_container_inner_red exh_map_container_red mt-5\">\r\n  <div className=\"d-grid gap-2\">\r\n  <Badge className=\"badgeIdentities rounded-pill\"><h1>Αποτελέσματα</h1></Badge>\r\n  </div>\r\n  <div className=\"identitiesQuestions exh_question_intro_text\">\r\n          <div className=\"d-flex justify-content-end\">\r\n            <Badge pill bg=\"danger\"><h2>\r\n            <Link to=\"/exhibitions/identities/inGalleryEN/IdentitiesExhibitionMapEN\" style={{ color: \"white\" }} className=\"text-decoration-none\">English</Link></h2></Badge>\r\n          </div>\r\n    </div>\r\n<Row>\r\n<Col lg={3} md={6} sm={12}><Button className={`exh_map_btn ${activeButton === \"Question 1\" ? \"active\" : \"\"}`} onClick={handleMapQOne}>Ερώτηση 1</Button></Col>\r\n<Col lg={3} md={6} sm={12}><Button className={`exh_map_btn ${activeButton === \"Question 2\" ? \"active\" : \"\"}`} onClick={handleMapQTwo}>Ερώτηση 2</Button></Col>\r\n<Col lg={3} md={6} sm={12}><Button className={`exh_map_btn ${activeButton === \"Question 3\" ? \"active\" : \"\"}`} onClick={handleMapQThree}>Ερώτηση 3</Button></Col>\r\n<Col lg={3} md={6} sm={12}><Button className={`exh_map_btn ${activeButton === \"Question 4\" ? \"active\" : \"\"}`} onClick={handleMapQFour}>Ερώτηση 4</Button></Col>\r\n</Row>\r\n\r\n  <div className=\"exh_btn_content\">\r\n      {MapQOneVisible && <h1>Ερώτηση 1</h1> && <MapQOne></MapQOne>}\r\n      {MapQTwoVisible && <h1>Ερώτηση 2</h1> && <MapQTwo></MapQTwo>}\r\n      {MapQThreeVisible && <h1>Ερώτηση 3</h1> && <MapQThree></MapQThree>}\r\n      {MapQFourVisible && <h1>Ερώτηση 4</h1> && <MapQFour></MapQFour>}\r\n  </div>\r\n\r\n  <div className=\"exh_submit_button\">\r\n      <div className=\"exh_arrow_container\">\r\n      <img className=\"exh_red_arrow\" src=\"/images/exhibition_assets/arrow_red.svg\" alt=\"\"></img>\r\n  </div>\r\n      <Button className=\"exh_submit_btn\" href=\"/exhibitions/identities/inGalleryGR/4thQuestionIdentitiesGR\">\r\n        <h1 style={{ color: \"white\" }}>Η ερώτηση 4 έχει ήδη απαντηθεί;</h1>\r\n      </Button>\r\n  </div> \r\n\r\n  </div>\r\n</BaseExhibitionConflictDE>\r\n    )\r\n  }\r\n\r\nexport default IdentitiesAnswersGR"],"sourceRoot":""}