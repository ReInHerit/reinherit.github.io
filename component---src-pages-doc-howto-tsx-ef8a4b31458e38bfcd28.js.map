{"version":3,"sources":["webpack://reinherit-digital-hub/./src/components/static/DocNav/index.tsx","webpack://reinherit-digital-hub/./src/components/shared/ManualsFeed/index.tsx","webpack://reinherit-digital-hub/./src/pages/doc/howto.tsx"],"names":["props","className","sticky","variant","to","data","useStaticQuery","MANUALS_GRAPHQL_RESPONSE","Accordion","allMarkdownRemark","edges","sort","map","edge","eventKey","node","frontmatter","pageId","title","dangerouslySetInnerHTML","__html","html","BaseLayout","pageTitle","MainHeading","subText","subHeading","Container","fluid","SideBarsLayout","left","DocNav"],"mappings":"qLAgCA,IApBgC,SAACA,GAE/B,OAAO,gBAAC,IAAD,CAAWC,UAAWD,EAAME,QAAU,aAAcC,QAAQ,SACjE,gBAAC,IAAD,KACE,gBAAC,KAAD,CAAMC,GAAG,QAAT,iBAEF,gBAAC,IAAD,KACE,gBAAC,KAAD,CAAMA,GAAG,sBAAT,0BAEF,gBAAC,IAAD,KACE,gBAAC,KAAD,CAAMA,GAAG,YAAT,QAEF,gBAAC,IAAD,KACE,gBAAC,KAAD,CAAMA,GAAG,cAAT,e,2ICEN,EAnB8B,WAC5B,IAAMC,GAAoCC,QACxCC,GAGF,OACE,gBAACC,EAAA,EAAD,KACGH,EAAKI,kBAAkBC,MAAMC,OAAOC,KAAI,SAAAC,GAAI,OAC3C,gBAACL,EAAA,OAAD,CAAgBM,SAAUD,EAAKE,KAAKC,YAAYC,QAC9C,gBAACT,EAAA,SAAD,KAAmBK,EAAKE,KAAKC,YAAYE,OACzC,gBAACV,EAAA,OAAD,KACE,uBAAKW,wBAAyB,CAAEC,OAAQP,EAAKE,KAAKM,eAUxDd,EAA2B,a,+BCOjC,EAzB8B,WAC5B,OACE,gBAACe,EAAA,EAAD,CACEC,UAAU,mCAEV,gBAACC,EAAA,EAAD,CACEC,QAAQ,iGACRC,WAAW,8DAFb,iBAMA,gBAACC,EAAA,EAAD,CAAWC,OAAK,EAAC3B,UAAU,0CACzB,gBAAC4B,EAAA,EAAD,CAAgBC,KAAM,gBAACC,EAAA,EAAD,OACpB,iDACA,8HAIA,gBAAC,EAAD","file":"component---src-pages-doc-howto-tsx-ef8a4b31458e38bfcd28.js","sourcesContent":["import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { ListGroup, ListGroupItem } from \"react-bootstrap\";\n\ninterface Props {\n  sticky?: boolean\n}\n\n/**\n * Navigation for documentation page of the Digital Hub.\n * @returns \n */\nconst DocNav: React.FC<Props> = (props) => {\n\n  return <ListGroup className={props.sticky && \"sticky-top\"} variant=\"flush\">\n    <ListGroupItem>\n      <Link to=\"/doc\">Architecture</Link>\n    </ListGroupItem>\n    <ListGroupItem>\n      <Link to=\"/doc/authorization\">Access levels / roles</Link>\n    </ListGroupItem>\n    <ListGroupItem>\n      <Link to=\"/doc/faq\">FAQ</Link>\n    </ListGroupItem>\n    <ListGroupItem>\n      <Link to=\"/doc/howto\">Manuals</Link>\n    </ListGroupItem>\n  </ListGroup>\n\n}\n\n\nexport default DocNav;\n\n\n","import { graphql, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport { Accordion } from \"react-bootstrap\"\n\n/**\n * Renders some kind of overview of manuals stored as markdowns via NetlifyCMS\n * @returns\n */\nconst ManualsFeed: React.FC = () => {\n  const data: ManualsGraphQLResponse.Data = useStaticQuery(\n    MANUALS_GRAPHQL_RESPONSE\n  )\n\n  return (\n    <Accordion>\n      {data.allMarkdownRemark.edges.sort().map(edge => (\n        <Accordion.Item eventKey={edge.node.frontmatter.pageId}>\n          <Accordion.Header>{edge.node.frontmatter.title}</Accordion.Header>\n          <Accordion.Body>\n            <div dangerouslySetInnerHTML={{ __html: edge.node.html }}></div>\n          </Accordion.Body>\n        </Accordion.Item>\n      ))}\n    </Accordion>\n  )\n}\n\nexport default ManualsFeed\n\nconst MANUALS_GRAPHQL_RESPONSE = graphql`\n  query ManualsFeedQuery {\n    allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/howtos/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            pageId\n          }\n          excerpt\n          html\n        }\n      }\n    }\n  }\n`\n\ndeclare module ManualsGraphQLResponse {\n  export interface Frontmatter {\n    title: string\n    pageId: string\n  }\n\n  export interface Node {\n    frontmatter: Frontmatter\n    excerpt: string\n    html: string\n  }\n\n  export interface Edge {\n    node: Node\n  }\n\n  export interface AllMarkdownRemark {\n    edges: Edge[]\n  }\n\n  export interface Data {\n    allMarkdownRemark: AllMarkdownRemark\n  }\n\n  export interface Extensions {}\n\n  export interface RootObject {\n    data: Data\n    extensions: Extensions\n  }\n}\n","import React from \"react\"\nimport { Container } from \"react-bootstrap\"\nimport SideBarsLayout from \"../../components/shared/Layout/SideBarsLayout\"\nimport ManualsFeed from \"../../components/shared/ManualsFeed\"\nimport BaseLayout from \"../../components/static/BaseLayout\"\nimport DocNav from \"../../components/static/DocNav\"\nimport MainHeading from \"../../components/static/MainHeading\"\n\n/**\n * Renders manuals / how-to page component.\n */\nconst ManualsPage: React.FC = () => {\n  return (\n    <BaseLayout\n      pageTitle=\"Manuals | ReInHerit Digital Hub\"\n    >\n      <MainHeading\n        subText=\"Here you'll find explainatory material, helpful texts and graphics for the digital-hub itself.\"\n        subHeading=\"Materials / manuals about the ReInHerit digital-hub itself\"\n      >\n        Documentation\n      </MainHeading>\n      <Container fluid className=\"bg-white p-md-5 p-sm-3 shadow border-0\">\n        <SideBarsLayout left={<DocNav />}>\n          <h2>Manuals and how-tos</h2>\n          <p>\n            Here you'll find small explainatory texts on how to use the diverse\n            features of this digital-hub.\n          </p>\n          <ManualsFeed></ManualsFeed>\n        </SideBarsLayout>\n      </Container>\n    </BaseLayout>\n  )\n}\n\nexport default ManualsPage\n"],"sourceRoot":""}