{"version":3,"sources":["webpack://reinherit-digital-hub/./src/components/static/Header/index.tsx","webpack://reinherit-digital-hub/./src/components/static/BaseLayout/index.tsx","webpack://reinherit-digital-hub/./src/components/static/MainHeading/index.tsx","webpack://reinherit-digital-hub/./src/templates/faqHowto.js"],"names":["className","Container","alt","src","height","width","style","minHeight","marginTop","color","children","pageTitle","Base","Head","fluid","Footer","props","fontSize","to","breadCrumb","length","map","bread","index","textEmphasis","key","value","label","subHeading","subText","Template","data","markdownRemark","pageContext","frontmatter","html","type","title","id","dangerouslySetInnerHTML","__html"],"mappings":"2LAkCA,EAfyB,WACvB,OACE,uBAAKA,UAAU,kCACb,uBAAKA,UAAU,QACb,gBAACC,EAAA,EAAD,CAAWD,UAAU,QACnB,uBAAKE,IAAI,yBAAyBC,IAAI,wCAAwCC,OAAQ,IAAKC,MAAO,IAAKC,MAAO,CAACC,UAAU,OACzH,sBAAID,MAAO,CAAEE,UAAW,OAAQC,MAAO,QAAST,UAAU,MAA1D,6B,wCCaV,EAjBmB,SAAC,GAAmC,IAAjCU,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,UAC9B,OACE,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAMF,UAAWA,IACjB,gBAAC,EAAD,MACA,gBAAC,IAAD,MAEA,gBAACV,EAAA,EAAD,CACED,UAAU,sCACVM,MAAO,CAACE,UAAU,OAClBM,OAAK,GACLJ,GACF,gBAACK,EAAA,EAAD,S,yDCgBN,IAjCqC,SAAAC,GAAK,OACxC,gCACE,uBAAKhB,UAAU,OAAOM,MAAO,CAACW,SAAS,WACrC,gBAAC,KAAD,CAAMC,GAAG,IAAIlB,UAAU,wBACrB,qBAAGM,MAAO,CAAEG,MAAO,sBAAnB,SAEDO,EAAMG,YACLH,EAAMG,WAAWC,OAAS,GAC1BJ,EAAMG,WAAWE,KAAI,SAACC,EAAOC,GAAR,OACnB,gCACE,mCACY,IAAVA,EAAc,yBAAG,gBAAC,KAAD,CAAMjB,MAAO,CAACG,MAAiB,IAAVc,EAAc,UAAY,GAAIC,aAAc,OAAQC,IAAG,eAAiBF,EAASvB,UAAU,uBAAuBkB,GAAII,EAAMI,OACjKJ,EAAMK,QACK,gBAAC,KAAD,CAAMrB,MAAO,CAACG,MAAiB,IAAVc,EAAc,UAAY,GAAIC,aAAc,OAAQC,IAAG,eAAiBF,EAASvB,UAAU,uBAAuBkB,GAAII,EAAMI,OAC5JJ,EAAMK,YAKjB,uBAAK3B,UAAU,2CACb,2BACE,oCAAIA,UAAU,MAASgB,GACpBA,EAAMN,UAIRM,EAAMY,YAAc,sBAAI5B,UAAU,MAAMgB,EAAMY,YAC9CZ,EAAMa,SAAW,yBAAIb,EAAMa,c,yHCpCrB,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,KAGQC,GADP,EADDC,YAE2BF,EAAnBC,gBACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KAErB,OACE,gBAAC,IAAD,KACE,uBAAKnC,UAAU,uBACb,uBAAKA,UAAU,aACb,gBAAC,IAAD,CACE4B,WACE,+DAC+B,IAC7B,gBAAC,KAAD,CACE5B,UAAU,oCACVkB,GAAE,QAAUgB,EAAYE,MAEvBF,EAAYE,MACP,IAPV,YAWFjB,WAAY,CACV,CAACQ,MAAM,aAAcD,MAAM,KAC3B,CAACC,MAAM,MAAOD,MAAM,OAfxB,iBAoBA,2BACA,sBAAI1B,UAAU,MAAMkC,EAAYG,OAChC,uBACEC,GAAG,qBACHtC,UAAU,oBACVuC,wBAAyB,CAAEC,OAAQL","file":"component---src-templates-faq-howto-js-970d12952ce9f7c8c23c.js","sourcesContent":["import {\r\n  faBookOpen,\r\n  faCog,\r\n  faCommentDots,\r\n  faSearch,\r\n  faTools,\r\n} from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\"\r\nimport React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport {\r\n  faFacebook,\r\n  faInstagram,\r\n  faLinkedin,\r\n  faTiktok,\r\n  faTwitter,\r\n} from \"@fortawesome/free-brands-svg-icons\"\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <div className=\"pt-3 mt-4 bg-white text-center\">\r\n      <div className=\"pb-3\">\r\n        <Container className=\"pt-3\">\r\n          <img alt=\"Reinherit header image\" src=\"images/make_it_your_own(238x171).webp\" height={171} width={238} style={{minHeight:171}}></img>\r\n          <h2 style={{ marginTop: \"-2vh\", color: \"grey\"}} className=\"h4\">\r\n            ReInHerit Digital Hub\r\n          </h2>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"../../../styles/index.css\"\r\nimport React from \"react\"\r\nimport Header from \"../Header\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport ReinNavBar from \"../Navbar\"\r\nimport Footer from \"../Footer\"\r\nimport Base from \"../Base\"\r\nimport Head from \"../Head\"\r\n\r\ninterface Props {\r\n  children?: any;\r\n  pageTitle?: string\r\n}\r\n\r\nconst BaseLayout = ({ children, pageTitle }: Props) => {\r\n  return (\r\n    <Base>\r\n      <Head pageTitle={pageTitle}></Head>\r\n      <Header />\r\n      <ReinNavBar/>\r\n      {/* <QuickAccessBar/> */}\r\n      <Container\r\n        className=\"rein_main_container pt-sm-4 pt-md-0\"\r\n        style={{marginTop:\"2vh\"}}\r\n        fluid\r\n      >{children}</Container>\r\n      <Footer />\r\n    </Base>\r\n  )\r\n}\r\n\r\nexport default BaseLayout\r\n","import { faQuestion } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Link } from \"gatsby\"\r\nimport React from \"react\"\r\n\r\ninterface Props {\r\n  children: string\r\n  subHeading?: string | JSX.Element\r\n  subText?: string\r\n  breadCrumb?: {\r\n    label: string\r\n    value: string\r\n  }[]\r\n  [property: string]: any\r\n}\r\n\r\nconst MainHeading: React.FC<Props> = props => (\r\n  <>\r\n    <div className=\"mb-3\" style={{fontSize:\"1.25em\"}}>\r\n      <Link to=\"/\" className=\"text-decoration-none\">\r\n        <b style={{ color: \"rgb(46, 172, 200)\" }}>Home</b>\r\n      </Link>\r\n      {props.breadCrumb &&\r\n        props.breadCrumb.length > 0 &&\r\n        props.breadCrumb.map((bread, index) => (\r\n          <>\r\n            <span> / </span>\r\n            { index === 0 ? <b><Link style={{color: index === 0 ? \"#ee3f98\" : \"\", textEmphasis: \"800\"}} key={`breadcrumb__${index}`} className=\"text-decoration-none\" to={bread.value}>\r\n              {bread.label}\r\n            </Link></b> : <Link style={{color: index === 0 ? \"#ee3f98\" : \"\", textEmphasis: \"800\"}} key={`breadcrumb__${index}`} className=\"text-decoration-none\" to={bread.value}>\r\n              {bread.label}\r\n            </Link>}\r\n          </>\r\n        ))}\r\n    </div>\r\n    <div className=\"p-3 p-md-4 shadow rounded mb-3 bg-white\">\r\n      <div>\r\n        <h1 className=\"h2\" {...props}>\r\n          {props.children}\r\n        </h1>\r\n\r\n        {/* <hr></hr> */}\r\n        {props.subHeading && <h2 className=\"h5\">{props.subHeading}</h2>}\r\n        {props.subText && <p>{props.subText}</p>}\r\n      </div>\r\n    </div>\r\n  </>\r\n)\r\n\r\nexport default MainHeading\r\n","import { graphql, Link } from \"gatsby\"\r\nimport React from \"react\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport SideMainLayout from \"../components/shared/Layout/SideMainLayout\"\r\nimport BaseLayout from \"../components/static/BaseLayout\"\r\nimport MainHeading from \"../components/static/MainHeading\"\r\n\r\nexport default function Template({\r\n  data, // this prop will be injected by the GraphQL query below.\r\n  pageContext, // pagecontext provided by gatsby\r\n}) {\r\n  const { markdownRemark } = data // data.markdownRemark holds your post data\r\n  const { frontmatter, html } = markdownRemark\r\n\r\n  return (\r\n    <BaseLayout>\r\n      <div className=\"blog-post-container\">\r\n        <div className=\"blog-post\">\r\n          <MainHeading\r\n            subHeading={\r\n              <>\r\n                This resource is part of the{\" \"}\r\n                <Link\r\n                  className=\"text-primary text-decoration-none\"\r\n                  to={`/doc/${frontmatter.type}`}\r\n                >\r\n                  {frontmatter.type}\r\n                </Link>{\" \"}\r\n                section.\r\n              </>\r\n            }\r\n            breadCrumb={[\r\n              {label:\"FAQ-How-to\", value:\"/\"},\r\n              {label:\"...\", value:\"/\"},\r\n            ]}\r\n          >\r\n            Documentation\r\n          </MainHeading>\r\n          <br />\r\n          <h2 className=\"h5\">{frontmatter.title}</h2>\r\n          <div\r\n            id=\"markdown_container\"\r\n            className=\"blog-post-content\"\r\n            dangerouslySetInnerHTML={{ __html: html }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </BaseLayout>\r\n  )\r\n}\r\nexport const pageQuery = graphql`\r\n  query($id: String!) {\r\n    markdownRemark(frontmatter: { pageId: { eq: $id } }) {\r\n      html\r\n      frontmatter {\r\n        date\r\n        title\r\n        type\r\n        question\r\n        answer\r\n      }\r\n      id\r\n      excerpt\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}