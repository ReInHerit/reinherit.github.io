{"version":3,"sources":["webpack://reinherit-digital-hub/./src/components/static/BaseLayout/index.tsx","webpack://reinherit-digital-hub/./src/components/static/MainHeading/index.tsx","webpack://reinherit-digital-hub/./src/templates/faqHowto.js"],"names":["children","className","fluid","props","subHeading","Template","data","markdownRemark","pageContext","frontmatter","html","style","textDecoration","color","to","type","title","dangerouslySetInnerHTML","__html"],"mappings":"6MAoCA,IAhBmB,SAAC,GAAwB,IAAtBA,EAAsB,EAAtBA,SACpB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,MACA,gBAAC,IAAD,MACA,gBAAC,IAAD,MAEA,gBAAC,IAAD,CACEC,UAAU,2BACVC,OAAK,GACLF,GACF,gBAAC,IAAD,S,+CCfN,IARqC,SAAAG,GAAK,OACxC,gCACE,qBAAQA,EAAQA,EAAMH,UACrBG,EAAMC,YAAc,sBAAIH,UAAU,MAAME,EAAMC,e,yHCJpC,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,KAGQC,GADP,EADDC,YAE2BF,EAAnBC,gBACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KAErB,OACE,gBAAC,IAAD,KACE,uBAAKT,UAAU,uBACb,uBAAKA,UAAU,aACb,gBAAC,IAAD,CACEG,WACE,+DAC+B,IAC7B,gBAAC,KAAD,CACEO,MAAO,CAAEC,eAAgB,OAAQC,MAAO,WACxCC,GAAE,QAAUL,EAAYM,MAEvBN,EAAYM,MACP,IAPV,aAFJ,iBAgBA,2BACA,sBAAId,UAAU,MAAMQ,EAAYO,OAChC,uBACEf,UAAU,oBACVgB,wBAAyB,CAAEC,OAAQR","file":"component---src-templates-faq-howto-js-a170d536f51b272a05a3.js","sourcesContent":["/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"../../../styles/index.css\"\r\nimport React from \"react\"\r\nimport Header from \"../Header\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport ReinNavBar from \"../Navbar\"\r\nimport Footer from \"../Footer\"\r\nimport Base from \"../Base\"\r\nimport Head from \"../Head\"\r\n\r\ninterface Props {\r\n  children?: any\r\n}\r\n\r\nconst BaseLayout = ({ children }: Props) => {\r\n  return (\r\n    <Base>\r\n      <Head></Head>\r\n      <Header />\r\n      <ReinNavBar/>\r\n      {/* <QuickAccessBar/> */}\r\n      <Container\r\n        className=\"rein_main_container pt-3\"\r\n        fluid\r\n      >{children}</Container>\r\n      <Footer />\r\n    </Base>\r\n  )\r\n}\r\n\r\nexport default BaseLayout\r\n","import React from \"react\"\r\n\r\ninterface Props {\r\n  children: string\r\n  subHeading?: string |JSX.Element\r\n  [property: string]: any\r\n}\r\n\r\nconst MainHeading: React.FC<Props> = props => (\r\n  <>\r\n    <h1 {...props}>{props.children}</h1>\r\n    {props.subHeading && <h2 className=\"h5\">{props.subHeading}</h2>}\r\n    \r\n  </>\r\n)\r\n\r\nexport default MainHeading\r\n","import { graphql, Link } from \"gatsby\"\r\nimport React from \"react\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport SideMainLayout from \"../components/shared/Layout/SideMainLayout\"\r\nimport BaseLayout from \"../components/static/BaseLayout\"\r\nimport MainHeading from \"../components/static/MainHeading\"\r\n\r\nexport default function Template({\r\n  data, // this prop will be injected by the GraphQL query below.\r\n  pageContext, // pagecontext provided by gatsby\r\n}) {\r\n  const { markdownRemark } = data // data.markdownRemark holds your post data\r\n  const { frontmatter, html } = markdownRemark\r\n\r\n  return (\r\n    <BaseLayout>\r\n      <div className=\"blog-post-container\">\r\n        <div className=\"blog-post\">\r\n          <MainHeading\r\n            subHeading={\r\n              <>\r\n                This resource is part of the{\" \"}\r\n                <Link\r\n                  style={{ textDecoration: \"none\", color: \"#2eacc8\" }}\r\n                  to={`/doc/${frontmatter.type}`}\r\n                >\r\n                  {frontmatter.type}\r\n                </Link>{\" \"}\r\n                section.\r\n              </>\r\n            }\r\n          >\r\n            Documentation\r\n          </MainHeading>\r\n          <br />\r\n          <h2 className=\"h5\">{frontmatter.title}</h2>\r\n          <div\r\n            className=\"blog-post-content\"\r\n            dangerouslySetInnerHTML={{ __html: html }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </BaseLayout>\r\n  )\r\n}\r\nexport const pageQuery = graphql`\r\n  query($id: String!) {\r\n    markdownRemark(frontmatter: { pageId: { eq: $id } }) {\r\n      html\r\n      frontmatter {\r\n        date\r\n        title\r\n        type\r\n        question\r\n        answer\r\n      }\r\n      id\r\n      excerpt\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}