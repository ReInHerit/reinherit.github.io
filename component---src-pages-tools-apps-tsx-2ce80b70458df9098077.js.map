{"version":3,"sources":["webpack://reinherit-digital-hub/./src/components/shared/ToolAppsFeed/index.tsx","webpack://reinherit-digital-hub/./src/pages/tools/apps.tsx"],"names":["data","useStaticQuery","ToolsQuery","React","tags","ReinCardGrid","allMarkdownRemark","edges","map","edge","length","some","curTag","node","frontmatter","tool_type","includes","ReinGridCard","key","pageId","body","excerpt","title","url","uid","footerContent","className","icon","faClock","scale","wordCount","words","faStamp","license","mainReference","style","color","target","href","faLink","thumbnail","Thumbnail","src","BaseLayout","pageTitle","MainHeading","subHeading","subText","breadCrumb","label","value","ToolAppsFeed"],"mappings":"6QAgFA,EAjE8B,WAC5B,IAAMA,GAA4BC,QAAeC,GADf,EAGVC,WAAe,IAAhCC,EAH2B,UAwBpC,OACE,gBAACC,EAAA,EAAD,KACSL,EAAKM,kBAAkBC,MAAMC,KAAI,SAAAC,GAEhC,OACkB,IAAhBL,EAAKM,QACJN,EAAKO,MAAK,SAAAC,GAEP,QAAIH,EAAKI,KAAKC,YAAYC,WACnBN,EAAKI,KAAKC,YAAYC,UAAUC,SAASJ,MAOlD,gBAACK,EAAA,EAAD,CACEC,IAAKT,EAAKI,KAAKC,YAAYK,OAC3BC,KAAMX,EAAKI,KAAKQ,QAChBC,MAAOb,EAAKI,KAAKC,YAAYQ,MAC7BC,IAAG,eACDd,EAAKI,KAAKC,YAAYK,OAExBK,IAAKf,EAAKI,KAAKC,YAAYK,OAC3BM,cACE,2BACE,qBAAGC,UAAU,OAAM,gBAAC,IAAD,CAAiBC,KAAMC,KAASC,MAAO,QAA1D,MAAsEpB,EAAKI,KAAKiB,UAAUC,MAA1F,UACA,qBAAGL,UAAU,OAAM,gBAAC,IAAD,CAAiBC,KAAMK,MAASH,MAAO,QAA1D,MAAsEpB,EAAKI,KAAKC,YAAYmB,SAC3FxB,EAAKI,KAAKC,YAAYoB,eAAiB,qBAAGR,UAAU,OAAM,qBAAGS,MAAO,CAACC,MAAM,WAAYV,UAAU,uBAAuBW,OAAO,SAASC,KAAM7B,EAAKI,KAAKC,YAAYoB,eAAe,gBAAC,IAAD,CAAiBP,KAAMY,MAAQV,MAAO,QAA/J,MAA2KpB,EAAKI,KAAKC,YAAYoB,kBAI9PzB,EAAKI,KAAKC,YAAY0B,WAAa,gBAACC,EAAA,EAAD,CAAWC,IAAKjC,EAAKI,KAAKC,YAAY0B,kBAnB/E,OA8BRtC,EAAa,a,oBCzDnB,EAnBgB,WACd,OACE,gBAACyC,EAAA,EAAD,CACAC,UAAU,sDAER,gBAACC,EAAA,EAAD,CACEC,WAAW,wDACXC,QAAQ,gGACRC,WAAY,CACV,CAACC,MAAM,YAAaC,MAAM,cAC1B,CAACD,MAAM,6BAA8BC,MAAM,iBAL/C,gBAQA,0BACA,gBAACC,EAAD","file":"component---src-pages-tools-apps-tsx-2ce80b70458df9098077.js","sourcesContent":["import { faClock } from \"@fortawesome/free-regular-svg-icons\"\nimport { faStamp, faLink } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport { Badge, Form } from \"react-bootstrap\"\nimport SideMainLayout from \"../Layout/SideMainLayout\"\nimport ReinCardGrid from \"../ReinCardGrid\"\nimport ReinGridCard from \"../ReinCardGrid/ReinGridCard\"\nimport Thumbnail from \"../Thumbnail\"\n\n/**\n *\n * @returns\n */\nconst ToolkitFeed: React.FC = () => {\n  const data: ToolsQueryData.Data = useStaticQuery(ToolsQuery)\n\n  const [tags, setTags] = React.useState([])\n\n  const ALL_TAGS = [\n    \"Tag A\",\n    \"Tag B\",\n    \"Tag C\"\n  ]\n\n{/*\n  const toggleTag = (toToggle: string) => {\n    let tagsCopied = [...tags]\n    if (tags.includes(toToggle)) {\n      let filtered = tagsCopied.filter(curTag => toToggle !== curTag)\n      setTags(() => filtered)\n    } else {\n      tagsCopied.push(toToggle)\n      setTags(() => tagsCopied)\n    }\n  }\n*/}\n\nreturn (\n  <ReinCardGrid>\n          {data.allMarkdownRemark.edges.map(edge => {\n            // filter only if no tags were selected\n            if (\n              tags.length !== 0 &&\n              !tags.some(curTag =>\n                {\n                  if(!edge.node.frontmatter.tool_type)return false;\n                  return edge.node.frontmatter.tool_type.includes(curTag)\n                }\n              )\n            ) {\n              return\n            } else {\n              return ( \n                <ReinGridCard\n                  key={edge.node.frontmatter.pageId}\n                  body={edge.node.excerpt}\n                  title={edge.node.frontmatter.title}\n                  url={`/tools/apps/${\n                    edge.node.frontmatter.pageId\n                  }`}\n                  uid={edge.node.frontmatter.pageId}\n                  footerContent={\n                    <div>\n                      <p className=\"m-0\"><FontAwesomeIcon icon={faClock} scale={\".5x\"}/> - {edge.node.wordCount.words} words</p>\n                      <p className=\"m-0\"><FontAwesomeIcon icon={faStamp} scale={\".5x\"}/> - {edge.node.frontmatter.license}</p>\n                      {edge.node.frontmatter.mainReference && <p className=\"m-0\"><a style={{color:\"#6c757d\"}} className=\"text-decoration-none\" target=\"_blank\" href={edge.node.frontmatter.mainReference}><FontAwesomeIcon icon={faLink} scale={\".5x\"}/> - {edge.node.frontmatter.mainReference}</a></p>}\n                    </div>\n                  }\n                >\n                  { edge.node.frontmatter.thumbnail && <Thumbnail src={edge.node.frontmatter.thumbnail}></Thumbnail>}\n                </ReinGridCard>\n              )\n            }\n          })}\n        </ReinCardGrid>\n  )\n}\n\nexport default ToolkitFeed\n\nconst ToolsQuery = graphql`\n  query ToolsQuery {\n    allMarkdownRemark(\n      filter: {fileAbsolutePath: {regex: \"/toolapps/\"}, frontmatter: {target_audience: {eq: \"PROFESSIONAL\"}, status: {eq: \"completed\"}}}\n      ) {\n      edges {\n        node {\n          html\n          excerpt\n          frontmatter {\n            title\n            date(fromNow: true)\n            target_audience\n            layout\n            type\n            pageId\n            mainReference\n            license\n            thumbnail\n          }\n          wordCount {\n            words\n          }\n        }\n      }\n    }\n  }\n`\n\ndeclare module ToolsQueryData {\n\n  export interface Frontmatter {\n    title: string\n    date: string\n    target_audience: string[]\n    layout?: any\n    author?: any\n    training_available: boolean\n    tool_type?: any\n    type: string\n    pageId: string\n    license: string\n    status: string\n    mainReference: string | null\n    thumbnail?: string\n  }\n\n  export interface Node {\n    html: string\n    excerpt: string\n    frontmatter: Frontmatter\n    wordCount: {\n      words: number\n    }\n  }\n\n  export interface Edge {\n    node: Node\n  }\n\n  export interface AllMarkdownRemark {\n    edges: Edge[]\n  }\n\n  export interface Data {\n    allMarkdownRemark: AllMarkdownRemark\n  }\n\n  export interface Extensions {}\n\n  export interface RootObject {\n    data: Data\n    extensions: Extensions\n  }\n}\n","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport ToolAppsFeed from \"../../components/shared/ToolAppsFeed\"\nimport BaseLayout from \"../../components/static/BaseLayout\"\nimport MainHeading from \"../../components/static/MainHeading\"\n\nconst Toolkit = () => {\n  return (\n    <BaseLayout\n    pageTitle=\"Applications documentation | ReInHerit Digital Hub\"\n    >\n      <MainHeading\n        subHeading=\"Applications available via the ReInHerit digital hub.\"\n        subText=\"Here you will find the documentation for applications developed within the ReInHerit project.\"\n        breadCrumb={[\n          {label:\"Resources\", value:\"/resources\"},\n          {label:\"Applications-Documentation\", value:\"/tools/apps\"}\n        ]}\n      >Applications</MainHeading>\n      <p></p>\n      <ToolAppsFeed></ToolAppsFeed>\n    </BaseLayout>\n  )\n}\n\nexport default Toolkit\n"],"sourceRoot":""}