{"version":3,"sources":["webpack://reinherit-digital-hub-prototype/./src/components/shared/Layout/SideMainLayout/index.tsx","webpack://reinherit-digital-hub-prototype/./src/hooks/useReinLocalStorage.tsx","webpack://reinherit-digital-hub-prototype/./src/utils/ReinUtil.ts","webpack://reinherit-digital-hub-prototype/./src/templates/training.js"],"names":["props","side","lg","xxl","children","useReinLocalStorage","COLLECTION_ID","retrieveCollection","ReinUtils","retrievedCollection","localStorage","getItem","setItem","parsedCollection","JSON","parse","retrieveItem","itemId","length","retrievedCollectable","find","val","id","toggleItem","obj","filtered","filter","stringify","newARr","push","saveCollection","data","mapFaSymbol","collectable","type","faRss","faTools","faDatabase","checkSSR","window","Template","markdownRemark","frontmatter","html","className","title","color","icon","excerpt","faArrowAltCircleLeft","to","charAt","toUpperCase","slice","link","target","href","faLink","date","fluid","dangerouslySetInnerHTML","__html","tutorial","replace"],"mappings":"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","file":"component---src-templates-training-js-85c5ac68eb67d8d3a5c5.js","sourcesContent":["import React from \"react\"\r\nimport { Col, Row } from \"react-bootstrap\"\r\n\r\ninterface Props {\r\n  side?: JSX.Element | JSX.Element[]\r\n  children?: JSX.Element | JSX.Element[]\r\n}\r\n\r\n/**\r\n * Handles left sidebar and right content layout. Checks responsive design.\r\n * @param props\r\n * @returns\r\n */\r\nconst SideMainLayout: React.FC<Props> = props => {\r\n  return (\r\n    <Row>\r\n      <Col>{props.side}</Col>\r\n      <Col lg={9} xxl={10}>\r\n        {props.children}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default SideMainLayout\r\n","import { faDatabase, faRss, faTools } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { ReinUtils } from \"../utils/ReinUtil\"\r\n\r\nexport type ReinMaterialType = \"news\" | \"tools\";\r\n\r\nexport interface ReinCollectAble<T> {\r\n  id: string;\r\n  title: string;\r\n  type:ReinMaterialType;\r\n  excerpt?: string;\r\n  value: T;\r\n}\r\n\r\nexport interface ReinImageObject {\r\n  src: string,\r\n\r\n}\r\n\r\n\r\n/**\r\n * Saves given ReinCollectable to the local storage.\r\n * @param storeKey key used to save given item.\r\n * @returns\r\n */\r\nexport const useReinLocalStorage = <T extends unknown> () => {\r\n\r\n  const COLLECTION_ID = \"REINHERIT_COLLECTION\";\r\n\r\n\r\n  /**\r\n   * Returns item with corresponent id given to the hook.\r\n   * @returns Saved item and null if nothing found. \r\n   */\r\n  const retrieveItem = (itemId: string) => {\r\n    if (ReinUtils.checkSSR()) return\r\n    \r\n    const parsedCollection = retrieveCollection();\r\n    if(parsedCollection.length === 0)return null;\r\n\r\n    const retrievedCollectable = parsedCollection.find(val => val.id === itemId)\r\n    if(!retrievedCollectable)return null;\r\n\r\n    return retrievedCollectable;\r\n    \r\n  }\r\n\r\n\r\n  /**\r\n   * Overwrites / saves collection to Reinherit namespace.\r\n   * @param data Data to be saved to local storage.\r\n   * @returns \r\n   */\r\n  const saveCollection = (data: ReinCollectAble<T>[]) => {\r\n    if(ReinUtils.checkSSR())return;\r\n    localStorage.setItem(COLLECTION_ID, JSON.stringify(data));\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns the complete saved collection inside the local storage.\r\n   * @returns Array of Objects.\r\n   */\r\n  const retrieveCollection = () => {\r\n    if(ReinUtils.checkSSR())return;\r\n    const retrievedCollection: string | null = localStorage.getItem(COLLECTION_ID);\r\n    if (!retrievedCollection){\r\n      localStorage.setItem(COLLECTION_ID, \"[]\");\r\n      return []\r\n    }\r\n    const parsedCollection: ReinCollectAble<T>[] = JSON.parse(retrievedCollection);\r\n    if(!parsedCollection){\r\n      localStorage.setItem(COLLECTION_ID, \"[]\");\r\n      return []\r\n    }\r\n    return parsedCollection;\r\n  }\r\n\r\n  \r\n  /**\r\n   * Removes / adds items according to id property and given id to the hook.\r\n   * @param toSave Object to be saved.\r\n   */\r\n  const toggleItem = (obj: ReinCollectAble<T>): ReinCollectAble<T>[] => {\r\n    if (ReinUtils.checkSSR()) return\r\n    //const strToSave = JSON.stringify(toSave)\r\n    //localStorage.setItem(collectableId, strToSave)\r\n    let parsedCollection = retrieveCollection();\r\n    let found = parsedCollection.find(val => val.id === obj.id);\r\n    if(!found){\r\n      let newARr = JSON.parse(JSON.stringify(parsedCollection))\r\n      newARr.push(obj);\r\n      localStorage.setItem(COLLECTION_ID, JSON.stringify(newARr));\r\n      return newARr;\r\n    } else {\r\n      //let index = parsedCollection.indexOf(found);\r\n      const filtered = parsedCollection.filter(val => val.id !== obj.id);\r\n      localStorage.setItem(COLLECTION_ID, JSON.stringify(filtered))\r\n      return filtered;\r\n    }\r\n  }\r\n\r\n  /** \r\n   * Returns corresponding fa-icon to collected item. \r\n  */\r\n  const mapFaSymbol = (collectable: ReinCollectAble<T> | ReinMaterialType) => {\r\n\r\n    // first typecheck\r\n    let matType = typeof collectable === \"string\" ? collectable : collectable.type;\r\n\r\n    switch(matType){\r\n      case \"news\":\r\n        return faRss\r\n      case \"tools\":\r\n        return faTools;\r\n      default:\r\n        return faDatabase;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return {\r\n    retrieveItem,\r\n    toggleItem,\r\n    retrieveCollection,\r\n    saveCollection,\r\n    mapFaSymbol\r\n  }\r\n}\r\n\r\nuseReinLocalStorage<boolean>()","\r\n\r\n/**\r\n * Collection or Reinherit specific utility methods.\r\n */\r\nexport const ReinUtils = (() => {\r\n\r\n  /**\r\n   * Returns true if SSR is in process, false if only client side processing is in progress.\r\n   * @returns \r\n   */\r\n  const checkSSR = () => typeof window === \"undefined\";\r\n\r\n\r\n\r\n  return {\r\n    checkSSR\r\n  }\r\n\r\n\r\n})();","import React from \"react\"\r\nimport { graphql, Link } from \"gatsby\"\r\nimport BaseLayout from \"../components/static/BaseLayout\"\r\nimport { Container} from \"react-bootstrap\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faArrowAltCircleLeft, faLink } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { useReinLocalStorage } from \"../hooks/useReinLocalStorage\"\r\nimport SideBarsLayout from \"../components/shared/Layout/SideBarsLayout\"\r\nimport SideMainLayout from \"../components/shared/Layout/SideMainLayout\"\r\nimport ReactMarkdown from \"react-markdown\"\r\n\r\nexport default function Template({\r\n  data, // this prop will be injected by the GraphQL query below.\r\n}) {\r\n  const { markdownRemark } = data // data.markdownRemark holds your post data\r\n  const { frontmatter, html } = markdownRemark\r\n\r\n  const { mapFaSymbol } = useReinLocalStorage()\r\n\r\n  return (\r\n    <BaseLayout>\r\n      <div className=\"blog-post-container\">\r\n        <div className=\"blog-post\">\r\n          <h1 className=\"h2\">\r\n            {frontmatter.title}{\" \"}\r\n            <FontAwesomeIcon\r\n              color=\"lightgrey\"\r\n              icon={mapFaSymbol(frontmatter.type)}\r\n            ></FontAwesomeIcon>\r\n          </h1>\r\n          <p className=\"w-75\"><b>Excerpt: </b>{markdownRemark.excerpt}</p>\r\n          <p>\r\n            <FontAwesomeIcon color=\"lightgrey\" icon={faArrowAltCircleLeft} />{\" \"}\r\n            <Link to={`/${frontmatter.type}`}>\r\n              {frontmatter.type.charAt(0).toUpperCase() +\r\n                frontmatter.type.slice(1)}{\" \"}\r\n              overview\r\n            </Link>\r\n          </p>\r\n          <br />\r\n\r\n          <SideMainLayout\r\n            side={\r\n              <div className=\"reincard card p-4\">\r\n\r\n                {frontmatter.link && <><div>\r\n                  <b className=\"text-secondary\">Link</b>\r\n                </div>\r\n                <div>\r\n                  <a target=\"_blank\" href={frontmatter.link}><FontAwesomeIcon icon={faLink}></FontAwesomeIcon></a>\r\n                </div><br/></>}\r\n\r\n                <div>\r\n                  <b className=\"text-secondary\">Author(s)</b>\r\n                </div>\r\n                <div>\r\n                  ReInHerit Project\r\n                </div>\r\n                <br />\r\n\r\n                <div>\r\n                  <b className=\"text-secondary\">Publication date</b>\r\n                </div>\r\n                <div>{frontmatter.date}</div>\r\n                <br />\r\n\r\n                <div>\r\n                  <b className=\"text-secondary\">Cite as</b>\r\n                </div>\r\n                <div>\"Mustermann, Max; Doing development, ... \"</div>\r\n                <br />\r\n\r\n                <div>\r\n                  <b className=\"text-secondary\">Terms of reuse</b>\r\n                </div>\r\n                <div>MIT - CC BY 4.0</div>\r\n                <br />\r\n              </div>\r\n            }\r\n          >\r\n            <Container fluid className=\"bg-white card p-4\">\r\n              <div\r\n                className=\"blog-post-content\"\r\n                dangerouslySetInnerHTML={{ __html: html }}\r\n              />\r\n            </Container>\r\n            {frontmatter.tutorial && <>\r\n              <br></br>\r\n              <h2>Tutorials</h2>\r\n              <ReactMarkdown\r\n              >\r\n                {frontmatter.tutorial.replace(\"youtube: \", \"\")}\r\n              </ReactMarkdown>\r\n            </>}\r\n          </SideMainLayout>\r\n        </div>\r\n      </div>\r\n    </BaseLayout>\r\n  )\r\n}\r\nexport const pageQuery = graphql`\r\n  query($id: String!) {\r\n    markdownRemark(id: { eq: $id }) {\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        title\r\n        link\r\n        type\r\n        target_audience\r\n        tool_type\r\n        author\r\n        tutorial\r\n      }\r\n      id\r\n      excerpt\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}