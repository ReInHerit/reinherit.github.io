{"version":3,"sources":["webpack://reinherit-digital-hub/./src/components/shared/FAQFeed.tsx","webpack://reinherit-digital-hub/./src/pages/doc/faq.tsx"],"names":["faqData","useStaticQuery","FAQQuery","Accordion","allMarkdownRemark","edges","sort","map","edge","eventKey","node","frontmatter","pageId","question","answer","BaseLayout","pageTitle","MainHeading","subHeading","subText","Container","fluid","className","SideBarsLayout","left","DocNav"],"mappings":"6NAuBA,EAf0B,WACxB,IAAMA,GAAmCC,QAAeC,GAExD,OACE,gBAACC,EAAA,EAAD,KACGH,EAAQI,kBAAkBC,MAAMC,OAAOC,KAAI,SAAAC,GAAI,OAC9C,gBAACL,EAAA,OAAD,CAAgBM,SAAUD,EAAKE,KAAKC,YAAYC,QAC9C,gBAACT,EAAA,SAAD,KAAmBK,EAAKE,KAAKC,YAAYE,UACzC,gBAACV,EAAA,OAAD,KAAiBK,EAAKE,KAAKC,YAAYG,cAyC3CZ,EAAW,a,uCCjCjB,EAhBgB,WACd,OACE,gBAACa,EAAA,EAAD,CACEC,UAAU,+BAEV,gBAACC,EAAA,EAAD,CAAaC,WAAW,6DAA6DC,QAAQ,kGAA7F,iBACA,gBAACC,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,0CAC3B,gBAACC,EAAA,EAAD,CAAgBC,KAAM,gBAACC,EAAA,EAAD,OACpB,iCACA,gBAAC,EAAD","file":"component---src-pages-doc-faq-tsx-a5257416cb25f374a339.js","sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport { Accordion } from \"react-bootstrap\"\n\n/**\n * Renders overview over FAQ collection.\n * @returns\n */\nconst FAQFeed: React.FC = () => {\n  const faqData: FAQGraphqlResponse.Data = useStaticQuery(FAQQuery)\n\n  return (\n    <Accordion>\n      {faqData.allMarkdownRemark.edges.sort().map(edge => (\n        <Accordion.Item eventKey={edge.node.frontmatter.pageId}>\n          <Accordion.Header>{edge.node.frontmatter.question}</Accordion.Header>\n          <Accordion.Body>{edge.node.frontmatter.answer}</Accordion.Body>\n        </Accordion.Item>\n      ))}\n    </Accordion>\n  )\n}\n\nexport default FAQFeed\n\ndeclare module FAQGraphqlResponse {\n  export interface Frontmatter {\n    question: string\n    answer: string\n    target_audience: string[]\n    pageId: string\n  }\n\n  export interface Node {\n    frontmatter: Frontmatter\n  }\n\n  export interface Edge {\n    node: Node\n  }\n\n  export interface AllMarkdownRemark {\n    edges: Edge[]\n  }\n\n  export interface Data {\n    allMarkdownRemark: AllMarkdownRemark\n  }\n\n  export interface Extensions {}\n\n  export interface RootObject {\n    data: Data\n    extensions: Extensions\n  }\n}\n\nconst FAQQuery = graphql`\n  query FAQQuery {\n    allMarkdownRemark(\n      filter: { frontmatter: {}, fileAbsolutePath: { regex: \"/faq/\" } }\n      sort: { fields: frontmatter___question }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            question\n            answer\n            target_audience\n            pageId\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Container } from \"react-bootstrap\"\nimport FAQFeed from \"../../components/shared/FAQFeed\"\nimport SideBarsLayout from \"../../components/shared/Layout/SideBarsLayout\"\nimport BaseLayout from \"../../components/static/BaseLayout\"\nimport DocNav from \"../../components/static/DocNav\"\nimport MainHeading from \"../../components/static/MainHeading\"\n\nconst FAQPage = () => {\n  return (\n    <BaseLayout \n      pageTitle=\"FAQ | ReInHerit Digital Hub\"\n    >\n      <MainHeading subHeading=\"Materials / manuals about the ReInHerit digital-hub itself\" subText=\"Here you'll find explainatory material, helpful texts and graphics for the digital-hub itself.\">Documentation</MainHeading>\n      <Container fluid className=\"bg-white p-md-4 p-sm-3 shadow border-0\">\n      <SideBarsLayout left={<DocNav />}>\n        <h2>FAQ</h2>\n        <FAQFeed></FAQFeed>\n      </SideBarsLayout>\n      </Container>\n    </BaseLayout>\n  )\n}\n\nexport default FAQPage\n"],"sourceRoot":""}