{"version":3,"sources":["webpack://reinherit-digital-hub/./node_modules/react-bootstrap/esm/Badge.js","webpack://reinherit-digital-hub/./src/components/shared/Layout/SideMainLayout/index.tsx","webpack://reinherit-digital-hub/./src/components/shared/ToolComponentsFeed/index.tsx","webpack://reinherit-digital-hub/./src/pages/tools/components.tsx","webpack://reinherit-digital-hub/./src/utils/ReinUtil.ts"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","Badge","_ref","ref","bsPrefix","bg","pill","text","className","_ref$as","as","Component","props","prefix","concat","displayName","defaultProps","side","lg","xxl","children","data","useStaticQuery","ToolsQuery","React","tags","setTags","toggleTag","toToggle","tagsCopied","includes","filtered","curTag","SideMainLayout","map","tag","onClick","color","ReinUtils","sort","Form","type","checked","defaultChecked","label","value","ReinCardGrid","allMarkdownRemark","edges","edge","some","node","frontmatter","tool_type","ReinGridCard","pageId","body","excerpt","title","url","uid","footerContent","icon","faClock","scale","wordCount","words","faStamp","license","mainReference","style","href","faLink","thumbnail","Thumbnail","src","BaseLayout","pageTitle","MainHeading","subHeading","subText","breadCrumb","ToolComponentsFeed","checkSSR","window","extractUniqueTags","allGivenTags","uniqueTagsSet","Set","Array","from"],"mappings":"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","file":"component---src-pages-tools-components-tsx-997b824c9c1d3c98596d.js","sourcesContent":["import _defineProperty from \"C:/Users/chiar/Desktop/reinheritHubOct22/digital-hub/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"C:/Users/chiar/Desktop/reinheritHubOct22/digital-hub/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      bg = _ref.bg,\n      pill = _ref.pill,\n      text = _ref.text,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutProperties(_ref, [\"bsPrefix\", \"bg\", \"pill\", \"text\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({\n    ref: ref\n  }, props), {}, {\n    className: classNames(className, prefix, pill && \"rounded-pill\", text && \"text-\".concat(text), bg && \"bg-\".concat(bg))\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import React from \"react\"\nimport { Col, Row } from \"react-bootstrap\"\n\ninterface Props {\n  side?: JSX.Element | JSX.Element[]\n  children?: JSX.Element | JSX.Element[]\n}\n\n/**\n * Handles left sidebar and right content layout. Checks responsive design.\n * @param props\n * @returns\n */\nconst SideMainLayout: React.FC<Props> = props => {\n  return (\n    <Row>\n      <Col>{props.side}</Col>\n      <Col lg={9} xxl={10}>\n        {props.children}\n      </Col>\n    </Row>\n  )\n}\n\nexport default SideMainLayout\n","import { faClock } from \"@fortawesome/free-regular-svg-icons\"\nimport { faLink, faStamp } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport { Badge, Form } from \"react-bootstrap\"\nimport { ReinUtils } from \"../../../utils/ReinUtil\"\nimport SideMainLayout from \"../Layout/SideMainLayout\"\nimport ReinCardGrid from \"../ReinCardGrid\"\nimport ReinGridCard from \"../ReinCardGrid/ReinGridCard\"\nimport Thumbnail from \"../Thumbnail\"\n\n/**\n * Overview over all available toolkit components\n * @returns\n */\nconst ToolkitComponentsFeed: React.FC = () => {\n  const data: ToolsQueryData.Data = useStaticQuery(ToolsQuery)\n\n  const [tags, setTags] = React.useState([])\n\n  const ALL_TAGS = [\n    \"Tag A\",\n    \"Tag B\",\n    \"Tag C\"\n  ]\n\n  const toggleTag = (toToggle: string) => {\n    let tagsCopied = [...tags]\n    if (tags.includes(toToggle)) {\n      let filtered = tagsCopied.filter(curTag => toToggle !== curTag)\n      setTags(() => filtered)\n    } else {\n      tagsCopied.push(toToggle)\n      setTags(() => tagsCopied)\n    }\n  }\n\n  return (\n    <SideMainLayout\n      side={\n        <div className=\"bg-white card p-4 mb-2 border-0 shadow\">\n          <p>Filter categories</p>\n          {tags.length !== 0 ? (\n            tags.map(tag => (\n              <Badge\n                onClick={() => toggleTag(tag)}\n                bg=\"white\"\n                color=\"black\"\n                text={\"black\" as \"white\"}\n                className=\"me-1 btn border\"\n              >\n                {tag}\n              </Badge>\n            ))\n          ) : (\n            <Badge\n              className=\"me-1 btn border\"\n              bg=\"white\"\n              color=\"black\"\n              text={\"black\" as \"white\"}\n            >\n              *\n            </Badge>\n          )}\n          <br></br>\n          {ReinUtils.extractUniqueTags(data as TaggedGraphQLData).sort().map(curTag => (\n            <Form.Check\n              type=\"checkbox\"\n              checked={tags.includes(curTag)}\n              defaultChecked={false}\n              key={curTag}\n              onClick={() => toggleTag(curTag)}\n              label={curTag}\n              value={curTag}\n            ></Form.Check>\n          ))}\n        </div>\n      }\n    >\n      <>\n        <ReinCardGrid>\n          {data.allMarkdownRemark.edges.map(edge => {\n            // filter only if no tags were selected\n            if (\n              tags.length !== 0 &&\n              !tags.some(curTag => {\n                if (!edge.node.frontmatter.tool_type) return false\n                return edge.node.frontmatter.tool_type.includes(curTag)\n              })\n            ) {\n              return\n            } else {\n              return (\n                <ReinGridCard\n                  key={edge.node.frontmatter.pageId}\n                  body={edge.node.excerpt}\n                  title={edge.node.frontmatter.title}\n                  url={`/tools/components/${edge.node.frontmatter.pageId}`}\n                  uid={edge.node.frontmatter.pageId}\n                  footerContent={\n                    <div>\n                      <p className=\"m-0\"><FontAwesomeIcon icon={faClock} scale={\".5x\"}/> - {edge.node.wordCount.words} words</p>\n                      <p className=\"m-0\"><FontAwesomeIcon icon={faStamp} scale={\".5x\"}/> - {edge.node.frontmatter.license}</p>\n                      {edge.node.frontmatter.mainReference && <p className=\"m-0\"><a style={{color:\"#6c757d\"}} className=\"text-decoration-none\" target=\"_blank\" href={edge.node.frontmatter.mainReference}><FontAwesomeIcon icon={faLink} scale={\".5x\"}/> - {edge.node.frontmatter.mainReference}</a></p>}\n                    </div>\n                  }\n                >\n                  {edge.node.frontmatter.thumbnail && <Thumbnail src={edge.node.frontmatter.thumbnail}></Thumbnail>}\n                </ReinGridCard>\n              )\n            }\n          })}\n        </ReinCardGrid>\n      </>\n    </SideMainLayout>\n  )\n}\n\nexport default ToolkitComponentsFeed\n\nconst ToolsQuery = graphql`\n  query ToolComponentsQuery {\n    allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"/toolcomponents/\" }\n        frontmatter: {}\n      }\n    ) {\n      edges {\n        node {\n          html\n          excerpt\n          frontmatter {\n            title\n            date(fromNow: true)\n            target_audience\n            layout\n            type\n            pageId\n            license\n            mainReference\n            thumbnail\n            tags\n          }\n          wordCount {\n            words\n          }\n        }\n      }\n    }\n  }\n`\n\ndeclare module ToolsQueryData {\n  export interface Frontmatter {\n    title: string\n    date: string\n    target_audience: string[]\n    layout?: any\n    author?: any\n    training_available: boolean\n    tool_type?: any\n    type: string\n    pageId: string\n    license: string\n    mainReference: string | null\n    thumbnail?: string\n    tags?: string[]\n  }\n\n  export interface Node {\n    html: string\n    excerpt: string\n    frontmatter: Frontmatter\n    wordCount: {\n      words: number\n    }\n  }\n\n  export interface Edge {\n    node: Node\n  }\n\n  export interface AllMarkdownRemark {\n    edges: Edge[]\n  }\n\n  export interface Data {\n    allMarkdownRemark: AllMarkdownRemark\n  }\n\n  export interface Extensions {}\n\n  export interface RootObject {\n    data: Data\n    extensions: Extensions\n  }\n}\n","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport ToolComponentsFeed from \"../../components/shared/ToolComponentsFeed\"\nimport BaseLayout from \"../../components/static/BaseLayout\"\nimport MainHeading from \"../../components/static/MainHeading\"\n\n/**\n * Main page for toolkit components (should render some kind of overview\n * over available toolkit components)\n * @returns \n */\nconst ToolkitComponentsPage = () => {\n  return (\n    <BaseLayout\n    pageTitle=\"Tool-components | ReInHerit Digital Hub\"\n    >\n      <MainHeading\n        subHeading=\"Building blocks for the applications provided by ReInHerit\"\n        subText=\"Here you'll find all the building blocks for the applications at the tool apps page.\"\n        breadCrumb={[\n          {label:\"Resources\", value:\"/resources\"},\n          {label:\"Tool-components\", value:\"/tools/components\"}\n        ]}\n      >Tool components</MainHeading>\n      <p className=\"w-75\"></p>\n      <ToolComponentsFeed></ToolComponentsFeed>\n    </BaseLayout>\n  )\n}\n\nexport default ToolkitComponentsPage\n","/**\n * Usual GraphQL data returned asking for all markdown entries in Reinherit.\n * Just focuses on given tags. \n */\nexport interface TaggedGraphQLData {\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        frontmatter: {\n          tags: string[]\n        }\n      }\n    }[]\n  }\n}\n\n/**\n * Collection or Reinherit specific utility methods.\n */\nexport const ReinUtils = (() => {\n  /**\n   * Returns true if SSR is in process, false if only client side processing is in progress.\n   * @returns\n   */\n  const checkSSR = () => typeof window === \"undefined\"\n\n  /**\n   * Returns a list of unique tags from given graphql data result.\n   * (needed for creating a list of actual used tags in given graphql results like in tool-component overview)\n   * If no data is available will return an empty array.\n   * @returns\n   */\n  const extractUniqueTags = (data: TaggedGraphQLData): string[] => {\n    let allGivenTags: string[] = []\n    data.allMarkdownRemark.edges.forEach(edge => {\n      if (!edge.node.frontmatter.tags) return\n      edge.node.frontmatter.tags.forEach(curTag => {\n        allGivenTags.push(curTag)\n      })\n    })\n    let uniqueTagsSet = new Set(allGivenTags)\n    let uniqueTagsArray = Array.from(uniqueTagsSet)\n    return uniqueTagsArray\n  }\n\n  return {\n    checkSSR,\n    extractUniqueTags,\n  }\n})()\n"],"sourceRoot":""}